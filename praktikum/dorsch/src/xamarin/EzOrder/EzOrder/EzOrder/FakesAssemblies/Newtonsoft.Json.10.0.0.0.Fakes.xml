<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Newtonsoft.Json.10.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.NewtonsoftJsonDelegates">
            <summary>Enthält benutzerdefinierte Delegaten für die Stubs und Shims von Newtonsoft.Json.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.BinaryConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.#ctor(Newtonsoft.Json.Converters.BinaryConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.AllInstances.CanConvertType">
            <summary>Legt die Shim von BinaryConverter.CanConvert(BinaryConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.AllInstances.GetByteArrayObject">
            <summary>Legt die Shim von BinaryConverter.GetByteArray(BinaryConverter this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.AllInstances.ReadByteArrayJsonReader">
            <summary>Legt die Shim von BinaryConverter.ReadByteArray(BinaryConverter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von BinaryConverter.ReadJson(BinaryConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von BinaryConverter.WriteJson(BinaryConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.CanConvertType">
            <summary>Legt die Shim von BinaryConverter.CanConvert(BinaryConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.Constructor">
            <summary>Legt die Shim von BinaryConverter.BinaryConverter(BinaryConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.EnsureReflectionObjectType">
            <summary>Legt die Shim von BinaryConverter.EnsureReflectionObject(Type t) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.GetByteArrayObject">
            <summary>Legt die Shim von BinaryConverter.GetByteArray(BinaryConverter this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.ReadByteArrayJsonReader">
            <summary>Legt die Shim von BinaryConverter.ReadByteArray(BinaryConverter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von BinaryConverter.ReadJson(BinaryConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimBinaryConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von BinaryConverter.WriteJson(BinaryConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.CustomCreationConverter&lt;T&gt;</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.#ctor(Newtonsoft.Json.Converters.CustomCreationConverter{`0})">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.AllInstances.CanConvertType">
            <summary>Legt die Shim von CustomCreationConverter`1.CanConvert(CustomCreationConverter`1 this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.AllInstances.CanWriteGet">
            <summary>Legt die Shim von CustomCreationConverter`1.get_CanWrite(CustomCreationConverter`1 this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von CustomCreationConverter`1.ReadJson(CustomCreationConverter`1 this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von CustomCreationConverter`1.WriteJson(CustomCreationConverter`1 this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.CanConvertType">
            <summary>Legt die Shim von CustomCreationConverter`1.CanConvert(CustomCreationConverter`1 this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.CanWriteGet">
            <summary>Legt die Shim von CustomCreationConverter`1.get_CanWrite(CustomCreationConverter`1 this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.Constructor">
            <summary>Legt die Shim von CustomCreationConverter`1.CustomCreationConverter`1(CustomCreationConverter`1 this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von CustomCreationConverter`1.ReadJson(CustomCreationConverter`1 this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimCustomCreationConverter`1.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von CustomCreationConverter`1.WriteJson(CustomCreationConverter`1 this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.DataSetConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.#ctor(Newtonsoft.Json.Converters.DataSetConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.AllInstances.CanConvertType">
            <summary>Legt die Shim von DataSetConverter.CanConvert(DataSetConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von DataSetConverter.ReadJson(DataSetConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von DataSetConverter.WriteJson(DataSetConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.CanConvertType">
            <summary>Legt die Shim von DataSetConverter.CanConvert(DataSetConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.Constructor">
            <summary>Legt die Shim von DataSetConverter.DataSetConverter(DataSetConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von DataSetConverter.ReadJson(DataSetConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataSetConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von DataSetConverter.WriteJson(DataSetConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.DataTableConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.#ctor(Newtonsoft.Json.Converters.DataTableConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.AllInstances.CanConvertType">
            <summary>Legt die Shim von DataTableConverter.CanConvert(DataTableConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von DataTableConverter.ReadJson(DataTableConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von DataTableConverter.WriteJson(DataTableConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.CanConvertType">
            <summary>Legt die Shim von DataTableConverter.CanConvert(DataTableConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.Constructor">
            <summary>Legt die Shim von DataTableConverter.DataTableConverter(DataTableConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.CreateRowJsonReaderDataTableJsonSerializer">
            <summary>Legt die Shim von DataTableConverter.CreateRow(JsonReader reader, DataTable dt, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.GetColumnDataTypeJsonReader">
            <summary>Legt die Shim von DataTableConverter.GetColumnDataType(JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von DataTableConverter.ReadJson(DataTableConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDataTableConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von DataTableConverter.WriteJson(DataTableConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimDateTimeConverterBase">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.DateTimeConverterBase</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDateTimeConverterBase.#ctor(Newtonsoft.Json.Converters.DateTimeConverterBase)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimDateTimeConverterBase.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDateTimeConverterBase.AllInstances.CanConvertType">
            <summary>Legt die Shim von DateTimeConverterBase.CanConvert(DateTimeConverterBase this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDateTimeConverterBase.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDateTimeConverterBase.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDateTimeConverterBase.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDateTimeConverterBase.CanConvertType">
            <summary>Legt die Shim von DateTimeConverterBase.CanConvert(DateTimeConverterBase this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDateTimeConverterBase.Constructor">
            <summary>Legt die Shim von DateTimeConverterBase.DateTimeConverterBase(DateTimeConverterBase this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.DiscriminatedUnionConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.#ctor(Newtonsoft.Json.Converters.DiscriminatedUnionConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.AllInstances.CanConvertType">
            <summary>Legt die Shim von DiscriminatedUnionConverter.CanConvert(DiscriminatedUnionConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von DiscriminatedUnionConverter.ReadJson(DiscriminatedUnionConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von DiscriminatedUnionConverter.WriteJson(DiscriminatedUnionConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.CanConvertType">
            <summary>Legt die Shim von DiscriminatedUnionConverter.CanConvert(DiscriminatedUnionConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.Constructor">
            <summary>Legt die Shim von DiscriminatedUnionConverter.DiscriminatedUnionConverter(DiscriminatedUnionConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.CreateUnionTypeLookupType">
            <summary>Legt die Shim von DiscriminatedUnionConverter.CreateUnionTypeLookup(Type t) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von DiscriminatedUnionConverter.ReadJson(DiscriminatedUnionConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.StaticConstructor">
            <summary>Legt die Shim von DiscriminatedUnionConverter.DiscriminatedUnionConverter() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimDiscriminatedUnionConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von DiscriminatedUnionConverter.WriteJson(DiscriminatedUnionConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.EntityKeyMemberConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.#ctor(Newtonsoft.Json.Converters.EntityKeyMemberConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.AllInstances.CanConvertType">
            <summary>Legt die Shim von EntityKeyMemberConverter.CanConvert(EntityKeyMemberConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von EntityKeyMemberConverter.ReadJson(EntityKeyMemberConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von EntityKeyMemberConverter.WriteJson(EntityKeyMemberConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.CanConvertType">
            <summary>Legt die Shim von EntityKeyMemberConverter.CanConvert(EntityKeyMemberConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.Constructor">
            <summary>Legt die Shim von EntityKeyMemberConverter.EntityKeyMemberConverter(EntityKeyMemberConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.EnsureReflectionObjectType">
            <summary>Legt die Shim von EntityKeyMemberConverter.EnsureReflectionObject(Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.ReadAndAssertPropertyJsonReaderString">
            <summary>Legt die Shim von EntityKeyMemberConverter.ReadAndAssertProperty(JsonReader reader, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von EntityKeyMemberConverter.ReadJson(EntityKeyMemberConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimEntityKeyMemberConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von EntityKeyMemberConverter.WriteJson(EntityKeyMemberConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.ExpandoObjectConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.#ctor(Newtonsoft.Json.Converters.ExpandoObjectConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.AllInstances.CanConvertType">
            <summary>Legt die Shim von ExpandoObjectConverter.CanConvert(ExpandoObjectConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.AllInstances.CanWriteGet">
            <summary>Legt die Shim von ExpandoObjectConverter.get_CanWrite(ExpandoObjectConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von ExpandoObjectConverter.ReadJson(ExpandoObjectConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.AllInstances.ReadListJsonReader">
            <summary>Legt die Shim von ExpandoObjectConverter.ReadList(ExpandoObjectConverter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.AllInstances.ReadObjectJsonReader">
            <summary>Legt die Shim von ExpandoObjectConverter.ReadObject(ExpandoObjectConverter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.AllInstances.ReadValueJsonReader">
            <summary>Legt die Shim von ExpandoObjectConverter.ReadValue(ExpandoObjectConverter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von ExpandoObjectConverter.WriteJson(ExpandoObjectConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.CanConvertType">
            <summary>Legt die Shim von ExpandoObjectConverter.CanConvert(ExpandoObjectConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.CanWriteGet">
            <summary>Legt die Shim von ExpandoObjectConverter.get_CanWrite(ExpandoObjectConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.Constructor">
            <summary>Legt die Shim von ExpandoObjectConverter.ExpandoObjectConverter(ExpandoObjectConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von ExpandoObjectConverter.ReadJson(ExpandoObjectConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.ReadListJsonReader">
            <summary>Legt die Shim von ExpandoObjectConverter.ReadList(ExpandoObjectConverter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.ReadObjectJsonReader">
            <summary>Legt die Shim von ExpandoObjectConverter.ReadObject(ExpandoObjectConverter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.ReadValueJsonReader">
            <summary>Legt die Shim von ExpandoObjectConverter.ReadValue(ExpandoObjectConverter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimExpandoObjectConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von ExpandoObjectConverter.WriteJson(ExpandoObjectConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.IsoDateTimeConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.#ctor(Newtonsoft.Json.Converters.IsoDateTimeConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.AllInstances.CultureGet">
            <summary>Legt die Shim von IsoDateTimeConverter.get_Culture(IsoDateTimeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.AllInstances.CultureSetCultureInfo">
            <summary>Legt die Shim von IsoDateTimeConverter.set_Culture(IsoDateTimeConverter this, CultureInfo value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.AllInstances.DateTimeFormatGet">
            <summary>Legt die Shim von IsoDateTimeConverter.get_DateTimeFormat(IsoDateTimeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.AllInstances.DateTimeFormatSetString">
            <summary>Legt die Shim von IsoDateTimeConverter.set_DateTimeFormat(IsoDateTimeConverter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.AllInstances.DateTimeStylesGet">
            <summary>Legt die Shim von IsoDateTimeConverter.get_DateTimeStyles(IsoDateTimeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.AllInstances.DateTimeStylesSetDateTimeStyles">
            <summary>Legt die Shim von IsoDateTimeConverter.set_DateTimeStyles(IsoDateTimeConverter this, DateTimeStyles value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von IsoDateTimeConverter.ReadJson(IsoDateTimeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von IsoDateTimeConverter.WriteJson(IsoDateTimeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.Constructor">
            <summary>Legt die Shim von IsoDateTimeConverter.IsoDateTimeConverter(IsoDateTimeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.CultureGet">
            <summary>Legt die Shim von IsoDateTimeConverter.get_Culture(IsoDateTimeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.CultureSetCultureInfo">
            <summary>Legt die Shim von IsoDateTimeConverter.set_Culture(IsoDateTimeConverter this, CultureInfo value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.DateTimeFormatGet">
            <summary>Legt die Shim von IsoDateTimeConverter.get_DateTimeFormat(IsoDateTimeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.DateTimeFormatSetString">
            <summary>Legt die Shim von IsoDateTimeConverter.set_DateTimeFormat(IsoDateTimeConverter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.DateTimeStylesGet">
            <summary>Legt die Shim von IsoDateTimeConverter.get_DateTimeStyles(IsoDateTimeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.DateTimeStylesSetDateTimeStyles">
            <summary>Legt die Shim von IsoDateTimeConverter.set_DateTimeStyles(IsoDateTimeConverter this, DateTimeStyles value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von IsoDateTimeConverter.ReadJson(IsoDateTimeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimIsoDateTimeConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von IsoDateTimeConverter.WriteJson(IsoDateTimeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.JavaScriptDateTimeConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter.#ctor(Newtonsoft.Json.Converters.JavaScriptDateTimeConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von JavaScriptDateTimeConverter.ReadJson(JavaScriptDateTimeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von JavaScriptDateTimeConverter.WriteJson(JavaScriptDateTimeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter.Constructor">
            <summary>Legt die Shim von JavaScriptDateTimeConverter.JavaScriptDateTimeConverter(JavaScriptDateTimeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von JavaScriptDateTimeConverter.ReadJson(JavaScriptDateTimeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimJavaScriptDateTimeConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von JavaScriptDateTimeConverter.WriteJson(JavaScriptDateTimeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.KeyValuePairConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.#ctor(Newtonsoft.Json.Converters.KeyValuePairConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.AllInstances.CanConvertType">
            <summary>Legt die Shim von KeyValuePairConverter.CanConvert(KeyValuePairConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von KeyValuePairConverter.ReadJson(KeyValuePairConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von KeyValuePairConverter.WriteJson(KeyValuePairConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.CanConvertType">
            <summary>Legt die Shim von KeyValuePairConverter.CanConvert(KeyValuePairConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.Constructor">
            <summary>Legt die Shim von KeyValuePairConverter.KeyValuePairConverter(KeyValuePairConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von KeyValuePairConverter.ReadJson(KeyValuePairConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.StaticConstructor">
            <summary>Legt die Shim von KeyValuePairConverter.KeyValuePairConverter() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimKeyValuePairConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von KeyValuePairConverter.WriteJson(KeyValuePairConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.RegexConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.#ctor(Newtonsoft.Json.Converters.RegexConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.AllInstances.CanConvertType">
            <summary>Legt die Shim von RegexConverter.CanConvert(RegexConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.AllInstances.HasFlagRegexOptionsRegexOptions">
            <summary>Legt die Shim von RegexConverter.HasFlag(RegexConverter this, RegexOptions options, RegexOptions flag) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.AllInstances.IsRegexType">
            <summary>Legt die Shim von RegexConverter.IsRegex(RegexConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von RegexConverter.ReadJson(RegexConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.AllInstances.ReadRegexObjectJsonReaderJsonSerializer">
            <summary>Legt die Shim von RegexConverter.ReadRegexObject(RegexConverter this, JsonReader reader, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.AllInstances.ReadRegexStringJsonReader">
            <summary>Legt die Shim von RegexConverter.ReadRegexString(RegexConverter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.AllInstances.WriteBsonBsonWriterRegex">
            <summary>Legt die Shim von RegexConverter.WriteBson(RegexConverter this, BsonWriter writer, Regex regex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von RegexConverter.WriteJson(RegexConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.AllInstances.WriteJsonJsonWriterRegexJsonSerializer">
            <summary>Legt die Shim von RegexConverter.WriteJson(RegexConverter this, JsonWriter writer, Regex regex, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.CanConvertType">
            <summary>Legt die Shim von RegexConverter.CanConvert(RegexConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.Constructor">
            <summary>Legt die Shim von RegexConverter.RegexConverter(RegexConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.HasFlagRegexOptionsRegexOptions">
            <summary>Legt die Shim von RegexConverter.HasFlag(RegexConverter this, RegexOptions options, RegexOptions flag) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.IsRegexType">
            <summary>Legt die Shim von RegexConverter.IsRegex(RegexConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von RegexConverter.ReadJson(RegexConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.ReadRegexObjectJsonReaderJsonSerializer">
            <summary>Legt die Shim von RegexConverter.ReadRegexObject(RegexConverter this, JsonReader reader, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.ReadRegexStringJsonReader">
            <summary>Legt die Shim von RegexConverter.ReadRegexString(RegexConverter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.WriteBsonBsonWriterRegex">
            <summary>Legt die Shim von RegexConverter.WriteBson(RegexConverter this, BsonWriter writer, Regex regex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von RegexConverter.WriteJson(RegexConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimRegexConverter.WriteJsonJsonWriterRegexJsonSerializer">
            <summary>Legt die Shim von RegexConverter.WriteJson(RegexConverter this, JsonWriter writer, Regex regex, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.StringEnumConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.#ctor(Newtonsoft.Json.Converters.StringEnumConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.AllInstances.AllowIntegerValuesGet">
            <summary>Legt die Shim von StringEnumConverter.get_AllowIntegerValues(StringEnumConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.AllInstances.AllowIntegerValuesSetBoolean">
            <summary>Legt die Shim von StringEnumConverter.set_AllowIntegerValues(StringEnumConverter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.AllInstances.CamelCaseTextGet">
            <summary>Legt die Shim von StringEnumConverter.get_CamelCaseText(StringEnumConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.AllInstances.CamelCaseTextSetBoolean">
            <summary>Legt die Shim von StringEnumConverter.set_CamelCaseText(StringEnumConverter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.AllInstances.CanConvertType">
            <summary>Legt die Shim von StringEnumConverter.CanConvert(StringEnumConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von StringEnumConverter.ReadJson(StringEnumConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von StringEnumConverter.WriteJson(StringEnumConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.AllowIntegerValuesGet">
            <summary>Legt die Shim von StringEnumConverter.get_AllowIntegerValues(StringEnumConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.AllowIntegerValuesSetBoolean">
            <summary>Legt die Shim von StringEnumConverter.set_AllowIntegerValues(StringEnumConverter this, Boolean value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.CamelCaseTextGet">
            <summary>Legt die Shim von StringEnumConverter.get_CamelCaseText(StringEnumConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.CamelCaseTextSetBoolean">
            <summary>Legt die Shim von StringEnumConverter.set_CamelCaseText(StringEnumConverter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.CanConvertType">
            <summary>Legt die Shim von StringEnumConverter.CanConvert(StringEnumConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.Constructor">
            <summary>Legt die Shim von StringEnumConverter.StringEnumConverter(StringEnumConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.ConstructorBoolean">
            <summary>Legt die Shim von StringEnumConverter.StringEnumConverter(StringEnumConverter this, Boolean camelCaseText) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von StringEnumConverter.ReadJson(StringEnumConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimStringEnumConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von StringEnumConverter.WriteJson(StringEnumConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.VersionConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.#ctor(Newtonsoft.Json.Converters.VersionConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.AllInstances.CanConvertType">
            <summary>Legt die Shim von VersionConverter.CanConvert(VersionConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von VersionConverter.ReadJson(VersionConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von VersionConverter.WriteJson(VersionConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.CanConvertType">
            <summary>Legt die Shim von VersionConverter.CanConvert(VersionConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.Constructor">
            <summary>Legt die Shim von VersionConverter.VersionConverter(VersionConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von VersionConverter.ReadJson(VersionConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimVersionConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von VersionConverter.WriteJson(VersionConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter">
            <summary>Shim-Typ von Newtonsoft.Json.Converters.XmlNodeConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.#ctor(Newtonsoft.Json.Converters.XmlNodeConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.CanConvertType">
            <summary>Legt die Shim von XmlNodeConverter.CanConvert(XmlNodeConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.DeserializeRootElementNameGet">
            <summary>Legt die Shim von XmlNodeConverter.get_DeserializeRootElementName(XmlNodeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.DeserializeRootElementNameSetString">
            <summary>Legt die Shim von XmlNodeConverter.set_DeserializeRootElementName(XmlNodeConverter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.IsNamespaceAttributeStringStringOut">
            <summary>Legt die Shim von XmlNodeConverter.IsNamespaceAttribute(XmlNodeConverter this, String attributeName, String* prefix) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.IsXObjectType">
            <summary>Legt die Shim von XmlNodeConverter.IsXObject(XmlNodeConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.IsXmlNodeType">
            <summary>Legt die Shim von XmlNodeConverter.IsXmlNode(XmlNodeConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.OmitRootObjectGet">
            <summary>Legt die Shim von XmlNodeConverter.get_OmitRootObject(XmlNodeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.OmitRootObjectSetBoolean">
            <summary>Legt die Shim von XmlNodeConverter.set_OmitRootObject(XmlNodeConverter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.ReadAttributeElementsJsonReaderXmlNamespaceManager">
            <summary>Legt die Shim von XmlNodeConverter.ReadAttributeElements(XmlNodeConverter this, JsonReader reader, XmlNamespaceManager manager) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von XmlNodeConverter.ReadJson(XmlNodeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.WriteArrayAttributeGet">
            <summary>Legt die Shim von XmlNodeConverter.get_WriteArrayAttribute(XmlNodeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.WriteArrayAttributeSetBoolean">
            <summary>Legt die Shim von XmlNodeConverter.set_WriteArrayAttribute(XmlNodeConverter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.AllInstances.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von XmlNodeConverter.WriteJson(XmlNodeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.CanConvertType">
            <summary>Legt die Shim von XmlNodeConverter.CanConvert(XmlNodeConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.Constructor">
            <summary>Legt die Shim von XmlNodeConverter.XmlNodeConverter(XmlNodeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.ConvertTokenToXmlValueJsonReader">
            <summary>Legt die Shim von XmlNodeConverter.ConvertTokenToXmlValue(JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.DeserializeRootElementNameGet">
            <summary>Legt die Shim von XmlNodeConverter.get_DeserializeRootElementName(XmlNodeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.DeserializeRootElementNameSetString">
            <summary>Legt die Shim von XmlNodeConverter.set_DeserializeRootElementName(XmlNodeConverter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.IsNamespaceAttributeStringStringOut">
            <summary>Legt die Shim von XmlNodeConverter.IsNamespaceAttribute(XmlNodeConverter this, String attributeName, String* prefix) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.IsXObjectType">
            <summary>Legt die Shim von XmlNodeConverter.IsXObject(XmlNodeConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.IsXmlNodeType">
            <summary>Legt die Shim von XmlNodeConverter.IsXmlNode(XmlNodeConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.OmitRootObjectGet">
            <summary>Legt die Shim von XmlNodeConverter.get_OmitRootObject(XmlNodeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.OmitRootObjectSetBoolean">
            <summary>Legt die Shim von XmlNodeConverter.set_OmitRootObject(XmlNodeConverter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.ReadAttributeElementsJsonReaderXmlNamespaceManager">
            <summary>Legt die Shim von XmlNodeConverter.ReadAttributeElements(XmlNodeConverter this, JsonReader reader, XmlNamespaceManager manager) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die Shim von XmlNodeConverter.ReadJson(XmlNodeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.StaticConstructor">
            <summary>Legt die Shim von XmlNodeConverter.XmlNodeConverter() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.WriteArrayAttributeGet">
            <summary>Legt die Shim von XmlNodeConverter.get_WriteArrayAttribute(XmlNodeConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.WriteArrayAttributeSetBoolean">
            <summary>Legt die Shim von XmlNodeConverter.set_WriteArrayAttribute(XmlNodeConverter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.ShimXmlNodeConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die Shim von XmlNodeConverter.WriteJson(XmlNodeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.BinaryConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von BinaryConverter.CanConvert(BinaryConverter this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.CanConvertType">
            <summary>Legt die stub von BinaryConverter.CanConvert(BinaryConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubBinaryConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von BinaryConverter.ReadJson(BinaryConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von BinaryConverter.ReadJson(BinaryConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von BinaryConverter.WriteJson(BinaryConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubBinaryConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von BinaryConverter.WriteJson(BinaryConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.CustomCreationConverter&lt;T&gt;</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.CanConvert(System.Type)">
            <summary>Legt die Stub von CustomCreationConverter`1.CanConvert(CustomCreationConverter`1 this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.CanConvertType">
            <summary>Legt die stub von CustomCreationConverter`1.CanConvert(CustomCreationConverter`1 this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.CanWrite">
            <summary>Legt die stub von CustomCreationConverter`1.get_CanWrite(CustomCreationConverter`1 this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.CanWriteGet">
            <summary>Legt die stub von CustomCreationConverter`1.get_CanWrite(CustomCreationConverter`1 this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.Create(System.Type)">
            <summary>Legt die Stub von CustomCreationConverter`1.Create(CustomCreationConverter`1 this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.CreateType">
            <summary>Legt die stub von CustomCreationConverter`1.Create(CustomCreationConverter`1 this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubCustomCreationConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von CustomCreationConverter`1.ReadJson(CustomCreationConverter`1 this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von CustomCreationConverter`1.ReadJson(CustomCreationConverter`1 this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von CustomCreationConverter`1.WriteJson(CustomCreationConverter`1 this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubCustomCreationConverter`1.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von CustomCreationConverter`1.WriteJson(CustomCreationConverter`1 this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.DataSetConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von DataSetConverter.CanConvert(DataSetConverter this, Type valueType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.CanConvertType">
            <summary>Legt die stub von DataSetConverter.CanConvert(DataSetConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDataSetConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von DataSetConverter.ReadJson(DataSetConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von DataSetConverter.ReadJson(DataSetConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von DataSetConverter.WriteJson(DataSetConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDataSetConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von DataSetConverter.WriteJson(DataSetConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.DataTableConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von DataTableConverter.CanConvert(DataTableConverter this, Type valueType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.CanConvertType">
            <summary>Legt die stub von DataTableConverter.CanConvert(DataTableConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDataTableConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von DataTableConverter.ReadJson(DataTableConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von DataTableConverter.ReadJson(DataTableConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von DataTableConverter.WriteJson(DataTableConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDataTableConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von DataTableConverter.WriteJson(DataTableConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.DateTimeConverterBase</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.CanConvert(System.Type)">
            <summary>Legt die Stub von DateTimeConverterBase.CanConvert(DateTimeConverterBase this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.CanConvertType">
            <summary>Legt die stub von DateTimeConverterBase.CanConvert(DateTimeConverterBase this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDateTimeConverterBase.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von JsonConverter.ReadJson(JsonConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von JsonConverter.ReadJson(JsonConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von JsonConverter.WriteJson(JsonConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDateTimeConverterBase.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von JsonConverter.WriteJson(JsonConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.DiscriminatedUnionConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von DiscriminatedUnionConverter.CanConvert(DiscriminatedUnionConverter this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.CanConvertType">
            <summary>Legt die stub von DiscriminatedUnionConverter.CanConvert(DiscriminatedUnionConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDiscriminatedUnionConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von DiscriminatedUnionConverter.ReadJson(DiscriminatedUnionConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von DiscriminatedUnionConverter.ReadJson(DiscriminatedUnionConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von DiscriminatedUnionConverter.WriteJson(DiscriminatedUnionConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubDiscriminatedUnionConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von DiscriminatedUnionConverter.WriteJson(DiscriminatedUnionConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.EntityKeyMemberConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von EntityKeyMemberConverter.CanConvert(EntityKeyMemberConverter this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.CanConvertType">
            <summary>Legt die stub von EntityKeyMemberConverter.CanConvert(EntityKeyMemberConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubEntityKeyMemberConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von EntityKeyMemberConverter.ReadJson(EntityKeyMemberConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von EntityKeyMemberConverter.ReadJson(EntityKeyMemberConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von EntityKeyMemberConverter.WriteJson(EntityKeyMemberConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubEntityKeyMemberConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von EntityKeyMemberConverter.WriteJson(EntityKeyMemberConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.ExpandoObjectConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von ExpandoObjectConverter.CanConvert(ExpandoObjectConverter this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.CanConvertType">
            <summary>Legt die stub von ExpandoObjectConverter.CanConvert(ExpandoObjectConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.CanWrite">
            <summary>Legt die stub von ExpandoObjectConverter.get_CanWrite(ExpandoObjectConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.CanWriteGet">
            <summary>Legt die stub von ExpandoObjectConverter.get_CanWrite(ExpandoObjectConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubExpandoObjectConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von ExpandoObjectConverter.ReadJson(ExpandoObjectConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von ExpandoObjectConverter.ReadJson(ExpandoObjectConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von ExpandoObjectConverter.WriteJson(ExpandoObjectConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubExpandoObjectConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von ExpandoObjectConverter.WriteJson(ExpandoObjectConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.IsoDateTimeConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von DateTimeConverterBase.CanConvert(DateTimeConverterBase this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.CanConvertType">
            <summary>Legt die stub von DateTimeConverterBase.CanConvert(DateTimeConverterBase this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubIsoDateTimeConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von IsoDateTimeConverter.ReadJson(IsoDateTimeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von IsoDateTimeConverter.ReadJson(IsoDateTimeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von IsoDateTimeConverter.WriteJson(IsoDateTimeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubIsoDateTimeConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von IsoDateTimeConverter.WriteJson(IsoDateTimeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.JavaScriptDateTimeConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von DateTimeConverterBase.CanConvert(DateTimeConverterBase this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.CanConvertType">
            <summary>Legt die stub von DateTimeConverterBase.CanConvert(DateTimeConverterBase this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJavaScriptDateTimeConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von JavaScriptDateTimeConverter.ReadJson(JavaScriptDateTimeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von JavaScriptDateTimeConverter.ReadJson(JavaScriptDateTimeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von JavaScriptDateTimeConverter.WriteJson(JavaScriptDateTimeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubJavaScriptDateTimeConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von JavaScriptDateTimeConverter.WriteJson(JavaScriptDateTimeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.KeyValuePairConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von KeyValuePairConverter.CanConvert(KeyValuePairConverter this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.CanConvertType">
            <summary>Legt die stub von KeyValuePairConverter.CanConvert(KeyValuePairConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubKeyValuePairConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von KeyValuePairConverter.ReadJson(KeyValuePairConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von KeyValuePairConverter.ReadJson(KeyValuePairConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von KeyValuePairConverter.WriteJson(KeyValuePairConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubKeyValuePairConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von KeyValuePairConverter.WriteJson(KeyValuePairConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubRegexConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.RegexConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von RegexConverter.CanConvert(RegexConverter this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.CanConvertType">
            <summary>Legt die stub von RegexConverter.CanConvert(RegexConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubRegexConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von RegexConverter.ReadJson(RegexConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von RegexConverter.ReadJson(RegexConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von RegexConverter.WriteJson(RegexConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubRegexConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von RegexConverter.WriteJson(RegexConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.StringEnumConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.#ctor(System.Boolean)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von StringEnumConverter.CanConvert(StringEnumConverter this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.CanConvertType">
            <summary>Legt die stub von StringEnumConverter.CanConvert(StringEnumConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubStringEnumConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von StringEnumConverter.ReadJson(StringEnumConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von StringEnumConverter.ReadJson(StringEnumConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von StringEnumConverter.WriteJson(StringEnumConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubStringEnumConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von StringEnumConverter.WriteJson(StringEnumConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubVersionConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.VersionConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von VersionConverter.CanConvert(VersionConverter this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.CanConvertType">
            <summary>Legt die stub von VersionConverter.CanConvert(VersionConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubVersionConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von VersionConverter.ReadJson(VersionConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von VersionConverter.ReadJson(VersionConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von VersionConverter.WriteJson(VersionConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubVersionConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von VersionConverter.WriteJson(VersionConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter">
            <summary>Stub-Typ von Newtonsoft.Json.Converters.XmlNodeConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von XmlNodeConverter.CanConvert(XmlNodeConverter this, Type valueType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.CanConvertType">
            <summary>Legt die stub von XmlNodeConverter.CanConvert(XmlNodeConverter this, Type valueType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubXmlNodeConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von XmlNodeConverter.ReadJson(XmlNodeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von XmlNodeConverter.ReadJson(XmlNodeConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von XmlNodeConverter.WriteJson(XmlNodeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Converters.Fakes.StubXmlNodeConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von XmlNodeConverter.WriteJson(XmlNodeConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute">
            <summary>Shim-Typ von Newtonsoft.Json.JsonArrayAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.#ctor(Newtonsoft.Json.JsonArrayAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.AllInstances.AllowNullItemsGet">
            <summary>Legt die Shim von JsonArrayAttribute.get_AllowNullItems(JsonArrayAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.AllInstances.AllowNullItemsSetBoolean">
            <summary>Legt die Shim von JsonArrayAttribute.set_AllowNullItems(JsonArrayAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.AllowNullItemsGet">
            <summary>Legt die Shim von JsonArrayAttribute.get_AllowNullItems(JsonArrayAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.AllowNullItemsSetBoolean">
            <summary>Legt die Shim von JsonArrayAttribute.set_AllowNullItems(JsonArrayAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.Constructor">
            <summary>Legt die Shim von JsonArrayAttribute.JsonArrayAttribute(JsonArrayAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.ConstructorBoolean">
            <summary>Legt die Shim von JsonArrayAttribute.JsonArrayAttribute(JsonArrayAttribute this, Boolean allowNullItems) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonArrayAttribute.ConstructorString">
            <summary>Legt die Shim von JsonArrayAttribute.JsonArrayAttribute(JsonArrayAttribute this, String id) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonConstructorAttribute">
            <summary>Shim-Typ von Newtonsoft.Json.JsonConstructorAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConstructorAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConstructorAttribute.#ctor(Newtonsoft.Json.JsonConstructorAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonConstructorAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConstructorAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConstructorAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConstructorAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConstructorAttribute.Constructor">
            <summary>Legt die Shim von JsonConstructorAttribute.JsonConstructorAttribute(JsonConstructorAttribute this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute">
            <summary>Shim-Typ von Newtonsoft.Json.JsonContainerAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.#ctor(Newtonsoft.Json.JsonContainerAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.DescriptionGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_Description(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.DescriptionSetString">
            <summary>Legt die Shim von JsonContainerAttribute.set_Description(JsonContainerAttribute this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.IdGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_Id(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.IdSetString">
            <summary>Legt die Shim von JsonContainerAttribute.set_Id(JsonContainerAttribute this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.IsReferenceGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_IsReference(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.IsReferenceSetBoolean">
            <summary>Legt die Shim von JsonContainerAttribute.set_IsReference(JsonContainerAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.ItemConverterParametersGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_ItemConverterParameters(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.ItemConverterParametersSetObjectArray">
            <summary>Legt die Shim von JsonContainerAttribute.set_ItemConverterParameters(JsonContainerAttribute this, Object[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.ItemConverterTypeGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_ItemConverterType(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.ItemConverterTypeSetType">
            <summary>Legt die Shim von JsonContainerAttribute.set_ItemConverterType(JsonContainerAttribute this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.ItemIsReferenceGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_ItemIsReference(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.ItemIsReferenceSetBoolean">
            <summary>Legt die Shim von JsonContainerAttribute.set_ItemIsReference(JsonContainerAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.ItemReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_ItemReferenceLoopHandling(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.ItemReferenceLoopHandlingSetReferenceLoopHandling">
            <summary>Legt die Shim von JsonContainerAttribute.set_ItemReferenceLoopHandling(JsonContainerAttribute this, ReferenceLoopHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.ItemTypeNameHandlingGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_ItemTypeNameHandling(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.ItemTypeNameHandlingSetTypeNameHandling">
            <summary>Legt die Shim von JsonContainerAttribute.set_ItemTypeNameHandling(JsonContainerAttribute this, TypeNameHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.NamingStrategyInstanceGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_NamingStrategyInstance(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.NamingStrategyInstanceSetNamingStrategy">
            <summary>Legt die Shim von JsonContainerAttribute.set_NamingStrategyInstance(JsonContainerAttribute this, NamingStrategy value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.NamingStrategyParametersGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_NamingStrategyParameters(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.NamingStrategyParametersSetObjectArray">
            <summary>Legt die Shim von JsonContainerAttribute.set_NamingStrategyParameters(JsonContainerAttribute this, Object[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.NamingStrategyTypeGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_NamingStrategyType(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.NamingStrategyTypeSetType">
            <summary>Legt die Shim von JsonContainerAttribute.set_NamingStrategyType(JsonContainerAttribute this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.TitleGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_Title(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.AllInstances.TitleSetString">
            <summary>Legt die Shim von JsonContainerAttribute.set_Title(JsonContainerAttribute this, String value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.Constructor">
            <summary>Legt die Shim von JsonContainerAttribute.JsonContainerAttribute(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.ConstructorString">
            <summary>Legt die Shim von JsonContainerAttribute.JsonContainerAttribute(JsonContainerAttribute this, String id) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.DescriptionGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_Description(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.DescriptionSetString">
            <summary>Legt die Shim von JsonContainerAttribute.set_Description(JsonContainerAttribute this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.IdGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_Id(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.IdSetString">
            <summary>Legt die Shim von JsonContainerAttribute.set_Id(JsonContainerAttribute this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.IsReferenceGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_IsReference(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.IsReferenceSetBoolean">
            <summary>Legt die Shim von JsonContainerAttribute.set_IsReference(JsonContainerAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.ItemConverterParametersGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_ItemConverterParameters(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.ItemConverterParametersSetObjectArray">
            <summary>Legt die Shim von JsonContainerAttribute.set_ItemConverterParameters(JsonContainerAttribute this, Object[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.ItemConverterTypeGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_ItemConverterType(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.ItemConverterTypeSetType">
            <summary>Legt die Shim von JsonContainerAttribute.set_ItemConverterType(JsonContainerAttribute this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.ItemIsReferenceGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_ItemIsReference(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.ItemIsReferenceSetBoolean">
            <summary>Legt die Shim von JsonContainerAttribute.set_ItemIsReference(JsonContainerAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.ItemReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_ItemReferenceLoopHandling(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.ItemReferenceLoopHandlingSetReferenceLoopHandling">
            <summary>Legt die Shim von JsonContainerAttribute.set_ItemReferenceLoopHandling(JsonContainerAttribute this, ReferenceLoopHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.ItemTypeNameHandlingGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_ItemTypeNameHandling(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.ItemTypeNameHandlingSetTypeNameHandling">
            <summary>Legt die Shim von JsonContainerAttribute.set_ItemTypeNameHandling(JsonContainerAttribute this, TypeNameHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.NamingStrategyInstanceGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_NamingStrategyInstance(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.NamingStrategyInstanceSetNamingStrategy">
            <summary>Legt die Shim von JsonContainerAttribute.set_NamingStrategyInstance(JsonContainerAttribute this, NamingStrategy value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.NamingStrategyParametersGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_NamingStrategyParameters(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.NamingStrategyParametersSetObjectArray">
            <summary>Legt die Shim von JsonContainerAttribute.set_NamingStrategyParameters(JsonContainerAttribute this, Object[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.NamingStrategyTypeGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_NamingStrategyType(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.NamingStrategyTypeSetType">
            <summary>Legt die Shim von JsonContainerAttribute.set_NamingStrategyType(JsonContainerAttribute this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.TitleGet">
            <summary>Legt die Shim von JsonContainerAttribute.get_Title(JsonContainerAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonContainerAttribute.TitleSetString">
            <summary>Legt die Shim von JsonContainerAttribute.set_Title(JsonContainerAttribute this, String value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonConvert">
            <summary>Shim-Typ von Newtonsoft.Json.JsonConvert</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConvert.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConvert.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConvert.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DefaultSettingsGet">
            <summary>Legt die Shim von JsonConvert.get_DefaultSettings() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DefaultSettingsSetFuncOfJsonSerializerSettings">
            <summary>Legt die Shim von JsonConvert.set_DefaultSettings(Func`1 value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeAnonymousTypeOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>Legt die Shim von JsonConvert.DeserializeAnonymousType(String value, !!0 anonymousTypeObject) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeAnonymousTypeOf1StringM0JsonSerializerSettings``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,Newtonsoft.Json.JsonSerializerSettings,``0})">
            <summary>Legt die Shim von JsonConvert.DeserializeAnonymousType(String value, !!0 anonymousTypeObject, JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeObjectOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Legt die Shim von JsonConvert.DeserializeObject(String value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeObjectOf1StringJsonConverterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Newtonsoft.Json.JsonConverter[],``0})">
            <summary>Legt die Shim von JsonConvert.DeserializeObject(String value, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeObjectOf1StringJsonSerializerSettings``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Newtonsoft.Json.JsonSerializerSettings,``0})">
            <summary>Legt die Shim von JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeObjectString">
            <summary>Legt die Shim von JsonConvert.DeserializeObject(String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeObjectStringJsonSerializerSettings">
            <summary>Legt die Shim von JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeObjectStringType">
            <summary>Legt die Shim von JsonConvert.DeserializeObject(String value, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeObjectStringTypeJsonConverterArray">
            <summary>Legt die Shim von JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeObjectStringTypeJsonSerializerSettings">
            <summary>Legt die Shim von JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeXNodeString">
            <summary>Legt die Shim von JsonConvert.DeserializeXNode(String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeXNodeStringString">
            <summary>Legt die Shim von JsonConvert.DeserializeXNode(String value, String deserializeRootElementName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeXNodeStringStringBoolean">
            <summary>Legt die Shim von JsonConvert.DeserializeXNode(String value, String deserializeRootElementName, Boolean writeArrayAttribute) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeXmlNodeString">
            <summary>Legt die Shim von JsonConvert.DeserializeXmlNode(String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeXmlNodeStringString">
            <summary>Legt die Shim von JsonConvert.DeserializeXmlNode(String value, String deserializeRootElementName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.DeserializeXmlNodeStringStringBoolean">
            <summary>Legt die Shim von JsonConvert.DeserializeXmlNode(String value, String deserializeRootElementName, Boolean writeArrayAttribute) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.EnsureDecimalPlaceDoubleString">
            <summary>Legt die Shim von JsonConvert.EnsureDecimalPlace(Double value, String text) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.EnsureDecimalPlaceString">
            <summary>Legt die Shim von JsonConvert.EnsureDecimalPlace(String text) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.EnsureFloatFormatDoubleStringFloatFormatHandlingCharBoolean">
            <summary>Legt die Shim von JsonConvert.EnsureFloatFormat(Double value, String text, FloatFormatHandling floatFormatHandling, Char quoteChar, Boolean nullable) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.PopulateObjectStringObject">
            <summary>Legt die Shim von JsonConvert.PopulateObject(String value, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.PopulateObjectStringObjectJsonSerializerSettings">
            <summary>Legt die Shim von JsonConvert.PopulateObject(String value, Object target, JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeObjectInternalObjectTypeJsonSerializer">
            <summary>Legt die Shim von JsonConvert.SerializeObjectInternal(Object value, Type type, JsonSerializer jsonSerializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeObjectObject">
            <summary>Legt die Shim von JsonConvert.SerializeObject(Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeObjectObjectFormatting">
            <summary>Legt die Shim von JsonConvert.SerializeObject(Object value, Formatting formatting) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeObjectObjectFormattingJsonConverterArray">
            <summary>Legt die Shim von JsonConvert.SerializeObject(Object value, Formatting formatting, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeObjectObjectFormattingJsonSerializerSettings">
            <summary>Legt die Shim von JsonConvert.SerializeObject(Object value, Formatting formatting, JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeObjectObjectJsonConverterArray">
            <summary>Legt die Shim von JsonConvert.SerializeObject(Object value, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeObjectObjectJsonSerializerSettings">
            <summary>Legt die Shim von JsonConvert.SerializeObject(Object value, JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeObjectObjectTypeFormattingJsonSerializerSettings">
            <summary>Legt die Shim von JsonConvert.SerializeObject(Object value, Type type, Formatting formatting, JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeObjectObjectTypeJsonSerializerSettings">
            <summary>Legt die Shim von JsonConvert.SerializeObject(Object value, Type type, JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeXNodeXObject">
            <summary>Legt die Shim von JsonConvert.SerializeXNode(XObject node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeXNodeXObjectFormatting">
            <summary>Legt die Shim von JsonConvert.SerializeXNode(XObject node, Formatting formatting) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeXNodeXObjectFormattingBoolean">
            <summary>Legt die Shim von JsonConvert.SerializeXNode(XObject node, Formatting formatting, Boolean omitRootObject) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeXmlNodeXmlNode">
            <summary>Legt die Shim von JsonConvert.SerializeXmlNode(XmlNode node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeXmlNodeXmlNodeFormatting">
            <summary>Legt die Shim von JsonConvert.SerializeXmlNode(XmlNode node, Formatting formatting) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.SerializeXmlNodeXmlNodeFormattingBoolean">
            <summary>Legt die Shim von JsonConvert.SerializeXmlNode(XmlNode node, Formatting formatting, Boolean omitRootObject) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.StaticConstructor">
            <summary>Legt die Shim von JsonConvert.JsonConvert() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringBoolean">
            <summary>Legt die Shim von JsonConvert.ToString(Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringByte">
            <summary>Legt die Shim von JsonConvert.ToString(Byte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringChar">
            <summary>Legt die Shim von JsonConvert.ToString(Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringDateTime">
            <summary>Legt die Shim von JsonConvert.ToString(DateTime value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringDateTimeDateFormatHandlingDateTimeZoneHandling">
            <summary>Legt die Shim von JsonConvert.ToString(DateTime value, DateFormatHandling format, DateTimeZoneHandling timeZoneHandling) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringDateTimeOffset">
            <summary>Legt die Shim von JsonConvert.ToString(DateTimeOffset value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringDateTimeOffsetDateFormatHandling">
            <summary>Legt die Shim von JsonConvert.ToString(DateTimeOffset value, DateFormatHandling format) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringDecimal">
            <summary>Legt die Shim von JsonConvert.ToString(Decimal value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringDouble">
            <summary>Legt die Shim von JsonConvert.ToString(Double value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringDoubleFloatFormatHandlingCharBoolean">
            <summary>Legt die Shim von JsonConvert.ToString(Double value, FloatFormatHandling floatFormatHandling, Char quoteChar, Boolean nullable) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringEnum">
            <summary>Legt die Shim von JsonConvert.ToString(Enum value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringGuid">
            <summary>Legt die Shim von JsonConvert.ToString(Guid value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringGuidChar">
            <summary>Legt die Shim von JsonConvert.ToString(Guid value, Char quoteChar) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringInt16">
            <summary>Legt die Shim von JsonConvert.ToString(Int16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringInt32">
            <summary>Legt die Shim von JsonConvert.ToString(Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringInt64">
            <summary>Legt die Shim von JsonConvert.ToString(Int64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringInternalBigInteger">
            <summary>Legt die Shim von JsonConvert.ToStringInternal(BigInteger value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringObject">
            <summary>Legt die Shim von JsonConvert.ToString(Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringSByte">
            <summary>Legt die Shim von JsonConvert.ToString(SByte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringSingle">
            <summary>Legt die Shim von JsonConvert.ToString(Single value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringSingleFloatFormatHandlingCharBoolean">
            <summary>Legt die Shim von JsonConvert.ToString(Single value, FloatFormatHandling floatFormatHandling, Char quoteChar, Boolean nullable) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringString">
            <summary>Legt die Shim von JsonConvert.ToString(String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringStringChar">
            <summary>Legt die Shim von JsonConvert.ToString(String value, Char delimiter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringStringCharStringEscapeHandling">
            <summary>Legt die Shim von JsonConvert.ToString(String value, Char delimiter, StringEscapeHandling stringEscapeHandling) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringTimeSpan">
            <summary>Legt die Shim von JsonConvert.ToString(TimeSpan value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringTimeSpanChar">
            <summary>Legt die Shim von JsonConvert.ToString(TimeSpan value, Char quoteChar) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringUInt16">
            <summary>Legt die Shim von JsonConvert.ToString(UInt16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringUInt32">
            <summary>Legt die Shim von JsonConvert.ToString(UInt32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringUInt64">
            <summary>Legt die Shim von JsonConvert.ToString(UInt64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringUri">
            <summary>Legt die Shim von JsonConvert.ToString(Uri value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConvert.ToStringUriChar">
            <summary>Legt die Shim von JsonConvert.ToString(Uri value, Char quoteChar) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonConverter">
            <summary>Shim-Typ von Newtonsoft.Json.JsonConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverter.#ctor(Newtonsoft.Json.JsonConverter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonConverter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverter.AllInstances.CanReadGet">
            <summary>Legt die Shim von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverter.AllInstances.CanWriteGet">
            <summary>Legt die Shim von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverter.CanReadGet">
            <summary>Legt die Shim von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverter.CanWriteGet">
            <summary>Legt die Shim von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverter.Constructor">
            <summary>Legt die Shim von JsonConverter.JsonConverter(JsonConverter this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute">
            <summary>Shim-Typ von Newtonsoft.Json.JsonConverterAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.#ctor(Newtonsoft.Json.JsonConverterAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.AllInstances.ConverterParametersGet">
            <summary>Legt die Shim von JsonConverterAttribute.get_ConverterParameters(JsonConverterAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.AllInstances.ConverterTypeGet">
            <summary>Legt die Shim von JsonConverterAttribute.get_ConverterType(JsonConverterAttribute this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.ConstructorType">
            <summary>Legt die Shim von JsonConverterAttribute.JsonConverterAttribute(JsonConverterAttribute this, Type converterType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.ConstructorTypeObjectArray">
            <summary>Legt die Shim von JsonConverterAttribute.JsonConverterAttribute(JsonConverterAttribute this, Type converterType, Object[] converterParameters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.ConverterParametersGet">
            <summary>Legt die Shim von JsonConverterAttribute.get_ConverterParameters(JsonConverterAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverterAttribute.ConverterTypeGet">
            <summary>Legt die Shim von JsonConverterAttribute.get_ConverterType(JsonConverterAttribute this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonConverterCollection">
            <summary>Shim-Typ von Newtonsoft.Json.JsonConverterCollection</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.#ctor(Newtonsoft.Json.JsonConverterCollection)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.Bind(System.Collections.ICollection)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.Bind(System.Collections.IList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.Bind(System.Collections.Generic.ICollection{Newtonsoft.Json.JsonConverter})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.Bind(System.Collections.Generic.IEnumerable{Newtonsoft.Json.JsonConverter})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.Bind(System.Collections.Generic.IList{Newtonsoft.Json.JsonConverter})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.Bind(System.Collections.Generic.IReadOnlyCollection{Newtonsoft.Json.JsonConverter})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.Bind(System.Collections.Generic.IReadOnlyList{Newtonsoft.Json.JsonConverter})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonConverterCollection.Constructor">
            <summary>Legt die Shim von JsonConverterCollection.JsonConverterCollection(JsonConverterCollection this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonDictionaryAttribute">
            <summary>Shim-Typ von Newtonsoft.Json.JsonDictionaryAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonDictionaryAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonDictionaryAttribute.#ctor(Newtonsoft.Json.JsonDictionaryAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonDictionaryAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonDictionaryAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonDictionaryAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonDictionaryAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonDictionaryAttribute.Constructor">
            <summary>Legt die Shim von JsonDictionaryAttribute.JsonDictionaryAttribute(JsonDictionaryAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonDictionaryAttribute.ConstructorString">
            <summary>Legt die Shim von JsonDictionaryAttribute.JsonDictionaryAttribute(JsonDictionaryAttribute this, String id) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonException">
            <summary>Shim-Typ von Newtonsoft.Json.JsonException</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonException.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonException.#ctor(Newtonsoft.Json.JsonException)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonException.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonException.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonException.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonException.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonException.Constructor">
            <summary>Legt die Shim von JsonException.JsonException(JsonException this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonException.ConstructorSerializationInfoStreamingContext">
            <summary>Legt die Shim von JsonException.JsonException(JsonException this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonException.ConstructorString">
            <summary>Legt die Shim von JsonException.JsonException(JsonException this, String message) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonException.ConstructorStringException">
            <summary>Legt die Shim von JsonException.JsonException(JsonException this, String message, Exception innerException) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonException.CreateIJsonLineInfoStringString">
            <summary>Legt die Shim von JsonException.Create(IJsonLineInfo lineInfo, String path, String message) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute">
            <summary>Shim-Typ von Newtonsoft.Json.JsonExtensionDataAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.#ctor(Newtonsoft.Json.JsonExtensionDataAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.AllInstances.ReadDataGet">
            <summary>Legt die Shim von JsonExtensionDataAttribute.get_ReadData(JsonExtensionDataAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.AllInstances.ReadDataSetBoolean">
            <summary>Legt die Shim von JsonExtensionDataAttribute.set_ReadData(JsonExtensionDataAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.AllInstances.WriteDataGet">
            <summary>Legt die Shim von JsonExtensionDataAttribute.get_WriteData(JsonExtensionDataAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.AllInstances.WriteDataSetBoolean">
            <summary>Legt die Shim von JsonExtensionDataAttribute.set_WriteData(JsonExtensionDataAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.Constructor">
            <summary>Legt die Shim von JsonExtensionDataAttribute.JsonExtensionDataAttribute(JsonExtensionDataAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.ReadDataGet">
            <summary>Legt die Shim von JsonExtensionDataAttribute.get_ReadData(JsonExtensionDataAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.ReadDataSetBoolean">
            <summary>Legt die Shim von JsonExtensionDataAttribute.set_ReadData(JsonExtensionDataAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.WriteDataGet">
            <summary>Legt die Shim von JsonExtensionDataAttribute.get_WriteData(JsonExtensionDataAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonExtensionDataAttribute.WriteDataSetBoolean">
            <summary>Legt die Shim von JsonExtensionDataAttribute.set_WriteData(JsonExtensionDataAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonIgnoreAttribute">
            <summary>Shim-Typ von Newtonsoft.Json.JsonIgnoreAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonIgnoreAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonIgnoreAttribute.#ctor(Newtonsoft.Json.JsonIgnoreAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonIgnoreAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonIgnoreAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonIgnoreAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonIgnoreAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonIgnoreAttribute.Constructor">
            <summary>Legt die Shim von JsonIgnoreAttribute.JsonIgnoreAttribute(JsonIgnoreAttribute this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute">
            <summary>Shim-Typ von Newtonsoft.Json.JsonObjectAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.#ctor(Newtonsoft.Json.JsonObjectAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.AllInstances.ItemRequiredGet">
            <summary>Legt die Shim von JsonObjectAttribute.get_ItemRequired(JsonObjectAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.AllInstances.ItemRequiredSetRequired">
            <summary>Legt die Shim von JsonObjectAttribute.set_ItemRequired(JsonObjectAttribute this, Required value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.AllInstances.MemberSerializationGet">
            <summary>Legt die Shim von JsonObjectAttribute.get_MemberSerialization(JsonObjectAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.AllInstances.MemberSerializationSetMemberSerialization">
            <summary>Legt die Shim von JsonObjectAttribute.set_MemberSerialization(JsonObjectAttribute this, MemberSerialization value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.Constructor">
            <summary>Legt die Shim von JsonObjectAttribute.JsonObjectAttribute(JsonObjectAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.ConstructorMemberSerialization">
            <summary>Legt die Shim von JsonObjectAttribute.JsonObjectAttribute(JsonObjectAttribute this, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.ConstructorString">
            <summary>Legt die Shim von JsonObjectAttribute.JsonObjectAttribute(JsonObjectAttribute this, String id) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.ItemRequiredGet">
            <summary>Legt die Shim von JsonObjectAttribute.get_ItemRequired(JsonObjectAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.ItemRequiredSetRequired">
            <summary>Legt die Shim von JsonObjectAttribute.set_ItemRequired(JsonObjectAttribute this, Required value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.MemberSerializationGet">
            <summary>Legt die Shim von JsonObjectAttribute.get_MemberSerialization(JsonObjectAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonObjectAttribute.MemberSerializationSetMemberSerialization">
            <summary>Legt die Shim von JsonObjectAttribute.set_MemberSerialization(JsonObjectAttribute this, MemberSerialization value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute">
            <summary>Shim-Typ von Newtonsoft.Json.JsonPropertyAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.#ctor(Newtonsoft.Json.JsonPropertyAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.DefaultValueHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_DefaultValueHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.DefaultValueHandlingSetDefaultValueHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_DefaultValueHandling(JsonPropertyAttribute this, DefaultValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.IsReferenceGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_IsReference(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.IsReferenceSetBoolean">
            <summary>Legt die Shim von JsonPropertyAttribute.set_IsReference(JsonPropertyAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ItemConverterParametersGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ItemConverterParameters(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ItemConverterParametersSetObjectArray">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ItemConverterParameters(JsonPropertyAttribute this, Object[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ItemConverterTypeGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ItemConverterType(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ItemConverterTypeSetType">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ItemConverterType(JsonPropertyAttribute this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ItemIsReferenceGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ItemIsReference(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ItemIsReferenceSetBoolean">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ItemIsReference(JsonPropertyAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ItemReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ItemReferenceLoopHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ItemReferenceLoopHandlingSetReferenceLoopHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ItemReferenceLoopHandling(JsonPropertyAttribute this, ReferenceLoopHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ItemTypeNameHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ItemTypeNameHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ItemTypeNameHandlingSetTypeNameHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ItemTypeNameHandling(JsonPropertyAttribute this, TypeNameHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.NamingStrategyParametersGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_NamingStrategyParameters(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.NamingStrategyParametersSetObjectArray">
            <summary>Legt die Shim von JsonPropertyAttribute.set_NamingStrategyParameters(JsonPropertyAttribute this, Object[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.NamingStrategyTypeGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_NamingStrategyType(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.NamingStrategyTypeSetType">
            <summary>Legt die Shim von JsonPropertyAttribute.set_NamingStrategyType(JsonPropertyAttribute this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.NullValueHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_NullValueHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.NullValueHandlingSetNullValueHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_NullValueHandling(JsonPropertyAttribute this, NullValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ObjectCreationHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ObjectCreationHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ObjectCreationHandlingSetObjectCreationHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ObjectCreationHandling(JsonPropertyAttribute this, ObjectCreationHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.OrderGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_Order(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.OrderSetInt32">
            <summary>Legt die Shim von JsonPropertyAttribute.set_Order(JsonPropertyAttribute this, Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.PropertyNameGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_PropertyName(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.PropertyNameSetString">
            <summary>Legt die Shim von JsonPropertyAttribute.set_PropertyName(JsonPropertyAttribute this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ReferenceLoopHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.ReferenceLoopHandlingSetReferenceLoopHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ReferenceLoopHandling(JsonPropertyAttribute this, ReferenceLoopHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.RequiredGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_Required(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.RequiredSetRequired">
            <summary>Legt die Shim von JsonPropertyAttribute.set_Required(JsonPropertyAttribute this, Required value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.TypeNameHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_TypeNameHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.AllInstances.TypeNameHandlingSetTypeNameHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_TypeNameHandling(JsonPropertyAttribute this, TypeNameHandling value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.Constructor">
            <summary>Legt die Shim von JsonPropertyAttribute.JsonPropertyAttribute(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ConstructorString">
            <summary>Legt die Shim von JsonPropertyAttribute.JsonPropertyAttribute(JsonPropertyAttribute this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.DefaultValueHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_DefaultValueHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.DefaultValueHandlingSetDefaultValueHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_DefaultValueHandling(JsonPropertyAttribute this, DefaultValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.IsReferenceGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_IsReference(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.IsReferenceSetBoolean">
            <summary>Legt die Shim von JsonPropertyAttribute.set_IsReference(JsonPropertyAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ItemConverterParametersGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ItemConverterParameters(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ItemConverterParametersSetObjectArray">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ItemConverterParameters(JsonPropertyAttribute this, Object[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ItemConverterTypeGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ItemConverterType(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ItemConverterTypeSetType">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ItemConverterType(JsonPropertyAttribute this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ItemIsReferenceGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ItemIsReference(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ItemIsReferenceSetBoolean">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ItemIsReference(JsonPropertyAttribute this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ItemReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ItemReferenceLoopHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ItemReferenceLoopHandlingSetReferenceLoopHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ItemReferenceLoopHandling(JsonPropertyAttribute this, ReferenceLoopHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ItemTypeNameHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ItemTypeNameHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ItemTypeNameHandlingSetTypeNameHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ItemTypeNameHandling(JsonPropertyAttribute this, TypeNameHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.NamingStrategyParametersGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_NamingStrategyParameters(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.NamingStrategyParametersSetObjectArray">
            <summary>Legt die Shim von JsonPropertyAttribute.set_NamingStrategyParameters(JsonPropertyAttribute this, Object[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.NamingStrategyTypeGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_NamingStrategyType(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.NamingStrategyTypeSetType">
            <summary>Legt die Shim von JsonPropertyAttribute.set_NamingStrategyType(JsonPropertyAttribute this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.NullValueHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_NullValueHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.NullValueHandlingSetNullValueHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_NullValueHandling(JsonPropertyAttribute this, NullValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ObjectCreationHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ObjectCreationHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ObjectCreationHandlingSetObjectCreationHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ObjectCreationHandling(JsonPropertyAttribute this, ObjectCreationHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.OrderGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_Order(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.OrderSetInt32">
            <summary>Legt die Shim von JsonPropertyAttribute.set_Order(JsonPropertyAttribute this, Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.PropertyNameGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_PropertyName(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.PropertyNameSetString">
            <summary>Legt die Shim von JsonPropertyAttribute.set_PropertyName(JsonPropertyAttribute this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_ReferenceLoopHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.ReferenceLoopHandlingSetReferenceLoopHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_ReferenceLoopHandling(JsonPropertyAttribute this, ReferenceLoopHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.RequiredGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_Required(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.RequiredSetRequired">
            <summary>Legt die Shim von JsonPropertyAttribute.set_Required(JsonPropertyAttribute this, Required value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.TypeNameHandlingGet">
            <summary>Legt die Shim von JsonPropertyAttribute.get_TypeNameHandling(JsonPropertyAttribute this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonPropertyAttribute.TypeNameHandlingSetTypeNameHandling">
            <summary>Legt die Shim von JsonPropertyAttribute.set_TypeNameHandling(JsonPropertyAttribute this, TypeNameHandling value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonReader">
            <summary>Shim-Typ von Newtonsoft.Json.JsonReader</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonReader.#ctor(Newtonsoft.Json.JsonReader)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.Close">
            <summary>Legt die Shim von JsonReader.Close(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.CloseInputGet">
            <summary>Legt die Shim von JsonReader.get_CloseInput(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.CloseInputSetBoolean">
            <summary>Legt die Shim von JsonReader.set_CloseInput(JsonReader this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.CreateUnexpectedEndException">
            <summary>Legt die Shim von JsonReader.CreateUnexpectedEndException(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.CultureGet">
            <summary>Legt die Shim von JsonReader.get_Culture(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.CultureSetCultureInfo">
            <summary>Legt die Shim von JsonReader.set_Culture(JsonReader this, CultureInfo value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.DateFormatStringGet">
            <summary>Legt die Shim von JsonReader.get_DateFormatString(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.DateFormatStringSetString">
            <summary>Legt die Shim von JsonReader.set_DateFormatString(JsonReader this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.DateParseHandlingGet">
            <summary>Legt die Shim von JsonReader.get_DateParseHandling(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.DateParseHandlingSetDateParseHandling">
            <summary>Legt die Shim von JsonReader.set_DateParseHandling(JsonReader this, DateParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.DateTimeZoneHandlingGet">
            <summary>Legt die Shim von JsonReader.get_DateTimeZoneHandling(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.DateTimeZoneHandlingSetDateTimeZoneHandling">
            <summary>Legt die Shim von JsonReader.set_DateTimeZoneHandling(JsonReader this, DateTimeZoneHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.DepthGet">
            <summary>Legt die Shim von JsonReader.get_Depth(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.DisposeBoolean">
            <summary>Legt die Shim von JsonReader.Dispose(JsonReader this, Boolean disposing) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.FloatParseHandlingGet">
            <summary>Legt die Shim von JsonReader.get_FloatParseHandling(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.FloatParseHandlingSetFloatParseHandling">
            <summary>Legt die Shim von JsonReader.set_FloatParseHandling(JsonReader this, FloatParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.GetContentToken">
            <summary>Legt die Shim von JsonReader.GetContentToken(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.MaxDepthGet">
            <summary>Legt die Shim von JsonReader.get_MaxDepth(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.MaxDepthSetNullableOfInt32">
            <summary>Legt die Shim von JsonReader.set_MaxDepth(JsonReader this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.MoveToContent">
            <summary>Legt die Shim von JsonReader.MoveToContent(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.MoveToContentAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.MoveToContentAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.MoveToContentFromNonContentAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.MoveToContentFromNonContentAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.PathGet">
            <summary>Legt die Shim von JsonReader.get_Path(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.QuoteCharGet">
            <summary>Legt die Shim von JsonReader.get_QuoteChar(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.QuoteCharSetChar">
            <summary>Legt die Shim von JsonReader.set_QuoteChar(JsonReader this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAndAssert">
            <summary>Legt die Shim von JsonReader.ReadAndAssert(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAndMoveToContent">
            <summary>Legt die Shim von JsonReader.ReadAndMoveToContent(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAndMoveToContentAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAndMoveToContentAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadArrayElementIntoByteArrayReportDoneListOfByte">
            <summary>Legt die Shim von JsonReader.ReadArrayElementIntoByteArrayReportDone(JsonReader this, List`1 buffer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadArrayIntoByteArray">
            <summary>Legt die Shim von JsonReader.ReadArrayIntoByteArray(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadArrayIntoByteArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadArrayIntoByteArrayAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsBoolean">
            <summary>Legt die Shim von JsonReader.ReadAsBoolean(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsBooleanAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsBooleanAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsBytes">
            <summary>Legt die Shim von JsonReader.ReadAsBytes(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsBytesAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsBytesAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsDateTime">
            <summary>Legt die Shim von JsonReader.ReadAsDateTime(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsDateTimeAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsDateTimeAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsDateTimeOffset">
            <summary>Legt die Shim von JsonReader.ReadAsDateTimeOffset(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsDateTimeOffsetAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsDateTimeOffsetAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsDecimal">
            <summary>Legt die Shim von JsonReader.ReadAsDecimal(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsDecimalAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsDecimalAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsDouble">
            <summary>Legt die Shim von JsonReader.ReadAsDouble(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsDoubleAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsDoubleAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsInt32">
            <summary>Legt die Shim von JsonReader.ReadAsInt32(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsInt32AsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsInt32Async(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsString">
            <summary>Legt die Shim von JsonReader.ReadAsString(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsStringAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsStringAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadBooleanStringString">
            <summary>Legt die Shim von JsonReader.ReadBooleanString(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadDateTimeOffsetStringString">
            <summary>Legt die Shim von JsonReader.ReadDateTimeOffsetString(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadDateTimeStringString">
            <summary>Legt die Shim von JsonReader.ReadDateTimeString(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadDecimalStringString">
            <summary>Legt die Shim von JsonReader.ReadDecimalString(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadDoubleStringString">
            <summary>Legt die Shim von JsonReader.ReadDoubleString(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadForTypeAndAssertJsonContractBoolean">
            <summary>Legt die Shim von JsonReader.ReadForTypeAndAssert(JsonReader this, JsonContract contract, Boolean hasConverter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadForTypeJsonContractBoolean">
            <summary>Legt die Shim von JsonReader.ReadForType(JsonReader this, JsonContract contract, Boolean hasConverter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadInt32StringString">
            <summary>Legt die Shim von JsonReader.ReadInt32String(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReadIntoWrappedTypeObject">
            <summary>Legt die Shim von JsonReader.ReadIntoWrappedTypeObject(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReaderReadAndAssert">
            <summary>Legt die Shim von JsonReader.ReaderReadAndAssert(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ReaderReadAndAssertAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReaderReadAndAssertAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.SetFinished">
            <summary>Legt die Shim von JsonReader.SetFinished(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.SetPostValueStateBoolean">
            <summary>Legt die Shim von JsonReader.SetPostValueState(JsonReader this, Boolean updateIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.SetStateBasedOnCurrent">
            <summary>Legt die Shim von JsonReader.SetStateBasedOnCurrent(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.SetTokenJsonToken">
            <summary>Legt die Shim von JsonReader.SetToken(JsonReader this, JsonToken newToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.SetTokenJsonTokenObject">
            <summary>Legt die Shim von JsonReader.SetToken(JsonReader this, JsonToken newToken, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.SetTokenJsonTokenObjectBoolean">
            <summary>Legt die Shim von JsonReader.SetToken(JsonReader this, JsonToken newToken, Object value, Boolean updateIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.Skip">
            <summary>Legt die Shim von JsonReader.Skip(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.SkipAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.SkipAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.SupportMultipleContentGet">
            <summary>Legt die Shim von JsonReader.get_SupportMultipleContent(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.SupportMultipleContentSetBoolean">
            <summary>Legt die Shim von JsonReader.set_SupportMultipleContent(JsonReader this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.SystemIDisposableDispose">
            <summary>Legt die Shim von JsonReader.System.IDisposable.Dispose(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.TokenTypeGet">
            <summary>Legt die Shim von JsonReader.get_TokenType(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.UpdateScopeWithFinishedValue">
            <summary>Legt die Shim von JsonReader.UpdateScopeWithFinishedValue(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ValidateEndJsonToken">
            <summary>Legt die Shim von JsonReader.ValidateEnd(JsonReader this, JsonToken endToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ValueGet">
            <summary>Legt die Shim von JsonReader.get_Value(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.AllInstances.ValueTypeGet">
            <summary>Legt die Shim von JsonReader.get_ValueType(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonReader.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonReader.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonReader.Bind(System.IDisposable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.Close">
            <summary>Legt die Shim von JsonReader.Close(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.CloseInputGet">
            <summary>Legt die Shim von JsonReader.get_CloseInput(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.CloseInputSetBoolean">
            <summary>Legt die Shim von JsonReader.set_CloseInput(JsonReader this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.Constructor">
            <summary>Legt die Shim von JsonReader.JsonReader(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.CreateUnexpectedEndException">
            <summary>Legt die Shim von JsonReader.CreateUnexpectedEndException(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.CultureGet">
            <summary>Legt die Shim von JsonReader.get_Culture(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.CultureSetCultureInfo">
            <summary>Legt die Shim von JsonReader.set_Culture(JsonReader this, CultureInfo value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.DateFormatStringGet">
            <summary>Legt die Shim von JsonReader.get_DateFormatString(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.DateFormatStringSetString">
            <summary>Legt die Shim von JsonReader.set_DateFormatString(JsonReader this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.DateParseHandlingGet">
            <summary>Legt die Shim von JsonReader.get_DateParseHandling(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.DateParseHandlingSetDateParseHandling">
            <summary>Legt die Shim von JsonReader.set_DateParseHandling(JsonReader this, DateParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.DateTimeZoneHandlingGet">
            <summary>Legt die Shim von JsonReader.get_DateTimeZoneHandling(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.DateTimeZoneHandlingSetDateTimeZoneHandling">
            <summary>Legt die Shim von JsonReader.set_DateTimeZoneHandling(JsonReader this, DateTimeZoneHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.DepthGet">
            <summary>Legt die Shim von JsonReader.get_Depth(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.DisposeBoolean">
            <summary>Legt die Shim von JsonReader.Dispose(JsonReader this, Boolean disposing) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.FloatParseHandlingGet">
            <summary>Legt die Shim von JsonReader.get_FloatParseHandling(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.FloatParseHandlingSetFloatParseHandling">
            <summary>Legt die Shim von JsonReader.set_FloatParseHandling(JsonReader this, FloatParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.GetContentToken">
            <summary>Legt die Shim von JsonReader.GetContentToken(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.MaxDepthGet">
            <summary>Legt die Shim von JsonReader.get_MaxDepth(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.MaxDepthSetNullableOfInt32">
            <summary>Legt die Shim von JsonReader.set_MaxDepth(JsonReader this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.MoveToContent">
            <summary>Legt die Shim von JsonReader.MoveToContent(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.MoveToContentAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.MoveToContentAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.MoveToContentFromNonContentAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.MoveToContentFromNonContentAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.PathGet">
            <summary>Legt die Shim von JsonReader.get_Path(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.QuoteCharGet">
            <summary>Legt die Shim von JsonReader.get_QuoteChar(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.QuoteCharSetChar">
            <summary>Legt die Shim von JsonReader.set_QuoteChar(JsonReader this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAndAssert">
            <summary>Legt die Shim von JsonReader.ReadAndAssert(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAndMoveToContent">
            <summary>Legt die Shim von JsonReader.ReadAndMoveToContent(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAndMoveToContentAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAndMoveToContentAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadArrayElementIntoByteArrayReportDoneListOfByte">
            <summary>Legt die Shim von JsonReader.ReadArrayElementIntoByteArrayReportDone(JsonReader this, List`1 buffer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadArrayIntoByteArray">
            <summary>Legt die Shim von JsonReader.ReadArrayIntoByteArray(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadArrayIntoByteArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadArrayIntoByteArrayAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsBoolean">
            <summary>Legt die Shim von JsonReader.ReadAsBoolean(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsBooleanAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsBooleanAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsBytes">
            <summary>Legt die Shim von JsonReader.ReadAsBytes(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsBytesAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsBytesAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsDateTime">
            <summary>Legt die Shim von JsonReader.ReadAsDateTime(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsDateTimeAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsDateTimeAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsDateTimeOffset">
            <summary>Legt die Shim von JsonReader.ReadAsDateTimeOffset(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsDateTimeOffsetAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsDateTimeOffsetAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsDecimal">
            <summary>Legt die Shim von JsonReader.ReadAsDecimal(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsDecimalAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsDecimalAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsDouble">
            <summary>Legt die Shim von JsonReader.ReadAsDouble(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsDoubleAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsDoubleAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsInt32">
            <summary>Legt die Shim von JsonReader.ReadAsInt32(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsInt32AsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsInt32Async(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsString">
            <summary>Legt die Shim von JsonReader.ReadAsString(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsStringAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsStringAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReadAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadBooleanStringString">
            <summary>Legt die Shim von JsonReader.ReadBooleanString(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadDateTimeOffsetStringString">
            <summary>Legt die Shim von JsonReader.ReadDateTimeOffsetString(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadDateTimeStringString">
            <summary>Legt die Shim von JsonReader.ReadDateTimeString(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadDecimalStringString">
            <summary>Legt die Shim von JsonReader.ReadDecimalString(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadDoubleStringString">
            <summary>Legt die Shim von JsonReader.ReadDoubleString(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadForTypeAndAssertJsonContractBoolean">
            <summary>Legt die Shim von JsonReader.ReadForTypeAndAssert(JsonReader this, JsonContract contract, Boolean hasConverter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadForTypeJsonContractBoolean">
            <summary>Legt die Shim von JsonReader.ReadForType(JsonReader this, JsonContract contract, Boolean hasConverter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadInt32StringString">
            <summary>Legt die Shim von JsonReader.ReadInt32String(JsonReader this, String s) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReadIntoWrappedTypeObject">
            <summary>Legt die Shim von JsonReader.ReadIntoWrappedTypeObject(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReaderReadAndAssert">
            <summary>Legt die Shim von JsonReader.ReaderReadAndAssert(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ReaderReadAndAssertAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.ReaderReadAndAssertAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.SetFinished">
            <summary>Legt die Shim von JsonReader.SetFinished(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.SetPostValueStateBoolean">
            <summary>Legt die Shim von JsonReader.SetPostValueState(JsonReader this, Boolean updateIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.SetStateBasedOnCurrent">
            <summary>Legt die Shim von JsonReader.SetStateBasedOnCurrent(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.SetTokenJsonToken">
            <summary>Legt die Shim von JsonReader.SetToken(JsonReader this, JsonToken newToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.SetTokenJsonTokenObject">
            <summary>Legt die Shim von JsonReader.SetToken(JsonReader this, JsonToken newToken, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.SetTokenJsonTokenObjectBoolean">
            <summary>Legt die Shim von JsonReader.SetToken(JsonReader this, JsonToken newToken, Object value, Boolean updateIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.Skip">
            <summary>Legt die Shim von JsonReader.Skip(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.SkipAsyncCancellationToken">
            <summary>Legt die Shim von JsonReader.SkipAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.SupportMultipleContentGet">
            <summary>Legt die Shim von JsonReader.get_SupportMultipleContent(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.SupportMultipleContentSetBoolean">
            <summary>Legt die Shim von JsonReader.set_SupportMultipleContent(JsonReader this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.SystemIDisposableDispose">
            <summary>Legt die Shim von JsonReader.System.IDisposable.Dispose(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.TokenTypeGet">
            <summary>Legt die Shim von JsonReader.get_TokenType(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.UpdateScopeWithFinishedValue">
            <summary>Legt die Shim von JsonReader.UpdateScopeWithFinishedValue(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ValidateEndJsonToken">
            <summary>Legt die Shim von JsonReader.ValidateEnd(JsonReader this, JsonToken endToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ValueGet">
            <summary>Legt die Shim von JsonReader.get_Value(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReader.ValueTypeGet">
            <summary>Legt die Shim von JsonReader.get_ValueType(JsonReader this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonReaderException">
            <summary>Shim-Typ von Newtonsoft.Json.JsonReaderException</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonReaderException.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonReaderException.#ctor(Newtonsoft.Json.JsonReaderException)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonReaderException.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.AllInstances.LineNumberGet">
            <summary>Legt die Shim von JsonReaderException.get_LineNumber(JsonReaderException this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.AllInstances.LinePositionGet">
            <summary>Legt die Shim von JsonReaderException.get_LinePosition(JsonReaderException this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.AllInstances.PathGet">
            <summary>Legt die Shim von JsonReaderException.get_Path(JsonReaderException this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonReaderException.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonReaderException.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonReaderException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.Constructor">
            <summary>Legt die Shim von JsonReaderException.JsonReaderException(JsonReaderException this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.ConstructorSerializationInfoStreamingContext">
            <summary>Legt die Shim von JsonReaderException.JsonReaderException(JsonReaderException this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.ConstructorString">
            <summary>Legt die Shim von JsonReaderException.JsonReaderException(JsonReaderException this, String message) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.ConstructorStringException">
            <summary>Legt die Shim von JsonReaderException.JsonReaderException(JsonReaderException this, String message, Exception innerException) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.ConstructorStringStringInt32Int32Exception">
            <summary>Legt die Shim von JsonReaderException.JsonReaderException(JsonReaderException this, String message, String path, Int32 lineNumber, Int32 linePosition, Exception innerException) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.CreateIJsonLineInfoStringStringException">
            <summary>Legt die Shim von JsonReaderException.Create(IJsonLineInfo lineInfo, String path, String message, Exception ex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.CreateJsonReaderString">
            <summary>Legt die Shim von JsonReaderException.Create(JsonReader reader, String message) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.CreateJsonReaderStringException">
            <summary>Legt die Shim von JsonReaderException.Create(JsonReader reader, String message, Exception ex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.LineNumberGet">
            <summary>Legt die Shim von JsonReaderException.get_LineNumber(JsonReaderException this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.LinePositionGet">
            <summary>Legt die Shim von JsonReaderException.get_LinePosition(JsonReaderException this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonReaderException.PathGet">
            <summary>Legt die Shim von JsonReaderException.get_Path(JsonReaderException this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonRequiredAttribute">
            <summary>Shim-Typ von Newtonsoft.Json.JsonRequiredAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonRequiredAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonRequiredAttribute.#ctor(Newtonsoft.Json.JsonRequiredAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonRequiredAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonRequiredAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonRequiredAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonRequiredAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonRequiredAttribute.Constructor">
            <summary>Legt die Shim von JsonRequiredAttribute.JsonRequiredAttribute(JsonRequiredAttribute this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonSerializationException">
            <summary>Shim-Typ von Newtonsoft.Json.JsonSerializationException</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializationException.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializationException.#ctor(Newtonsoft.Json.JsonSerializationException)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonSerializationException.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializationException.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializationException.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializationException.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializationException.Constructor">
            <summary>Legt die Shim von JsonSerializationException.JsonSerializationException(JsonSerializationException this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializationException.ConstructorSerializationInfoStreamingContext">
            <summary>Legt die Shim von JsonSerializationException.JsonSerializationException(JsonSerializationException this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializationException.ConstructorString">
            <summary>Legt die Shim von JsonSerializationException.JsonSerializationException(JsonSerializationException this, String message) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializationException.ConstructorStringException">
            <summary>Legt die Shim von JsonSerializationException.JsonSerializationException(JsonSerializationException this, String message, Exception innerException) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializationException.CreateIJsonLineInfoStringStringException">
            <summary>Legt die Shim von JsonSerializationException.Create(IJsonLineInfo lineInfo, String path, String message, Exception ex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializationException.CreateJsonReaderString">
            <summary>Legt die Shim von JsonSerializationException.Create(JsonReader reader, String message) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializationException.CreateJsonReaderStringException">
            <summary>Legt die Shim von JsonSerializationException.Create(JsonReader reader, String message, Exception ex) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonSerializer">
            <summary>Shim-Typ von Newtonsoft.Json.JsonSerializer</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializer.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializer.#ctor(Newtonsoft.Json.JsonSerializer)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.BinderGet">
            <summary>Legt die Shim von JsonSerializer.get_Binder(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.BinderSetSerializationBinder">
            <summary>Legt die Shim von JsonSerializer.set_Binder(JsonSerializer this, SerializationBinder value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.CheckAdditionalContentGet">
            <summary>Legt die Shim von JsonSerializer.get_CheckAdditionalContent(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.CheckAdditionalContentSetBoolean">
            <summary>Legt die Shim von JsonSerializer.set_CheckAdditionalContent(JsonSerializer this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ConstructorHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_ConstructorHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ConstructorHandlingSetConstructorHandling">
            <summary>Legt die Shim von JsonSerializer.set_ConstructorHandling(JsonSerializer this, ConstructorHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ContextGet">
            <summary>Legt die Shim von JsonSerializer.get_Context(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ContextSetStreamingContext">
            <summary>Legt die Shim von JsonSerializer.set_Context(JsonSerializer this, StreamingContext value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ContractResolverGet">
            <summary>Legt die Shim von JsonSerializer.get_ContractResolver(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ContractResolverSetIContractResolver">
            <summary>Legt die Shim von JsonSerializer.set_ContractResolver(JsonSerializer this, IContractResolver value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ConvertersGet">
            <summary>Legt die Shim von JsonSerializer.get_Converters(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.CultureGet">
            <summary>Legt die Shim von JsonSerializer.get_Culture(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.CultureSetCultureInfo">
            <summary>Legt die Shim von JsonSerializer.set_Culture(JsonSerializer this, CultureInfo value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DateFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_DateFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DateFormatHandlingSetDateFormatHandling">
            <summary>Legt die Shim von JsonSerializer.set_DateFormatHandling(JsonSerializer this, DateFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DateFormatStringGet">
            <summary>Legt die Shim von JsonSerializer.get_DateFormatString(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DateFormatStringSetString">
            <summary>Legt die Shim von JsonSerializer.set_DateFormatString(JsonSerializer this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DateParseHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_DateParseHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DateParseHandlingSetDateParseHandling">
            <summary>Legt die Shim von JsonSerializer.set_DateParseHandling(JsonSerializer this, DateParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DateTimeZoneHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_DateTimeZoneHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DateTimeZoneHandlingSetDateTimeZoneHandling">
            <summary>Legt die Shim von JsonSerializer.set_DateTimeZoneHandling(JsonSerializer this, DateTimeZoneHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DefaultValueHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_DefaultValueHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DefaultValueHandlingSetDefaultValueHandling">
            <summary>Legt die Shim von JsonSerializer.set_DefaultValueHandling(JsonSerializer this, DefaultValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DeserializeInternalJsonReaderType">
            <summary>Legt die Shim von JsonSerializer.DeserializeInternal(JsonSerializer this, JsonReader reader, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DeserializeJsonReader">
            <summary>Legt die Shim von JsonSerializer.Deserialize(JsonSerializer this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DeserializeJsonReaderType">
            <summary>Legt die Shim von JsonSerializer.Deserialize(JsonSerializer this, JsonReader reader, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DeserializeOf1JsonReader``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.JsonSerializer,Newtonsoft.Json.JsonReader,``0})">
            <summary>Legt die Shim von JsonSerializer.Deserialize(JsonSerializer this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.DeserializeTextReaderType">
            <summary>Legt die Shim von JsonSerializer.Deserialize(JsonSerializer this, TextReader reader, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.EqualityComparerGet">
            <summary>Legt die Shim von JsonSerializer.get_EqualityComparer(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.EqualityComparerSetIEqualityComparer">
            <summary>Legt die Shim von JsonSerializer.set_EqualityComparer(JsonSerializer this, IEqualityComparer value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ErrorAddEventHandlerOfErrorEventArgs">
            <summary>Legt die Shim von JsonSerializer.add_Error(JsonSerializer this, EventHandler`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ErrorRemoveEventHandlerOfErrorEventArgs">
            <summary>Legt die Shim von JsonSerializer.remove_Error(JsonSerializer this, EventHandler`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.FloatFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_FloatFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.FloatFormatHandlingSetFloatFormatHandling">
            <summary>Legt die Shim von JsonSerializer.set_FloatFormatHandling(JsonSerializer this, FloatFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.FloatParseHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_FloatParseHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.FloatParseHandlingSetFloatParseHandling">
            <summary>Legt die Shim von JsonSerializer.set_FloatParseHandling(JsonSerializer this, FloatParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.FormattingGet">
            <summary>Legt die Shim von JsonSerializer.get_Formatting(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.FormattingSetFormatting">
            <summary>Legt die Shim von JsonSerializer.set_Formatting(JsonSerializer this, Formatting value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.GetMatchingConverterType">
            <summary>Legt die Shim von JsonSerializer.GetMatchingConverter(JsonSerializer this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.GetReferenceResolver">
            <summary>Legt die Shim von JsonSerializer.GetReferenceResolver(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.IsCheckAdditionalContentSet">
            <summary>Legt die Shim von JsonSerializer.IsCheckAdditionalContentSet(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.MaxDepthGet">
            <summary>Legt die Shim von JsonSerializer.get_MaxDepth(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.MaxDepthSetNullableOfInt32">
            <summary>Legt die Shim von JsonSerializer.set_MaxDepth(JsonSerializer this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.MetadataPropertyHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_MetadataPropertyHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.MetadataPropertyHandlingSetMetadataPropertyHandling">
            <summary>Legt die Shim von JsonSerializer.set_MetadataPropertyHandling(JsonSerializer this, MetadataPropertyHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.MissingMemberHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_MissingMemberHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.MissingMemberHandlingSetMissingMemberHandling">
            <summary>Legt die Shim von JsonSerializer.set_MissingMemberHandling(JsonSerializer this, MissingMemberHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.NullValueHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_NullValueHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.NullValueHandlingSetNullValueHandling">
            <summary>Legt die Shim von JsonSerializer.set_NullValueHandling(JsonSerializer this, NullValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ObjectCreationHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_ObjectCreationHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ObjectCreationHandlingSetObjectCreationHandling">
            <summary>Legt die Shim von JsonSerializer.set_ObjectCreationHandling(JsonSerializer this, ObjectCreationHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.OnErrorErrorEventArgs">
            <summary>Legt die Shim von JsonSerializer.OnError(JsonSerializer this, ErrorEventArgs e) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.PopulateInternalJsonReaderObject">
            <summary>Legt die Shim von JsonSerializer.PopulateInternal(JsonSerializer this, JsonReader reader, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.PopulateJsonReaderObject">
            <summary>Legt die Shim von JsonSerializer.Populate(JsonSerializer this, JsonReader reader, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.PopulateTextReaderObject">
            <summary>Legt die Shim von JsonSerializer.Populate(JsonSerializer this, TextReader reader, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.PreserveReferencesHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_PreserveReferencesHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.PreserveReferencesHandlingSetPreserveReferencesHandling">
            <summary>Legt die Shim von JsonSerializer.set_PreserveReferencesHandling(JsonSerializer this, PreserveReferencesHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_ReferenceLoopHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ReferenceLoopHandlingSetReferenceLoopHandling">
            <summary>Legt die Shim von JsonSerializer.set_ReferenceLoopHandling(JsonSerializer this, ReferenceLoopHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ReferenceResolverGet">
            <summary>Legt die Shim von JsonSerializer.get_ReferenceResolver(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ReferenceResolverSetIReferenceResolver">
            <summary>Legt die Shim von JsonSerializer.set_ReferenceResolver(JsonSerializer this, IReferenceResolver value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.ResetReaderJsonReaderCultureInfoNullableOfDateTimeZoneHandlingNullableOfDateParseHandlingNullableOfFloatParseHandlingNullableOfInt32String">
            <summary>Legt die Shim von JsonSerializer.ResetReader(JsonSerializer this, JsonReader reader, CultureInfo previousCulture, Nullable`1 previousDateTimeZoneHandling, Nullable`1 previousDateParseHandling, Nullable`1 previousFloatParseHandling, Nullable`1 previousMaxDepth, String previousDateFormatString) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.SerializationBinderGet">
            <summary>Legt die Shim von JsonSerializer.get_SerializationBinder(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.SerializationBinderSetISerializationBinder">
            <summary>Legt die Shim von JsonSerializer.set_SerializationBinder(JsonSerializer this, ISerializationBinder value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.SerializeInternalJsonWriterObjectType">
            <summary>Legt die Shim von JsonSerializer.SerializeInternal(JsonSerializer this, JsonWriter jsonWriter, Object value, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.SerializeJsonWriterObject">
            <summary>Legt die Shim von JsonSerializer.Serialize(JsonSerializer this, JsonWriter jsonWriter, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.SerializeJsonWriterObjectType">
            <summary>Legt die Shim von JsonSerializer.Serialize(JsonSerializer this, JsonWriter jsonWriter, Object value, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.SerializeTextWriterObject">
            <summary>Legt die Shim von JsonSerializer.Serialize(JsonSerializer this, TextWriter textWriter, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.SerializeTextWriterObjectType">
            <summary>Legt die Shim von JsonSerializer.Serialize(JsonSerializer this, TextWriter textWriter, Object value, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.SetupReaderJsonReaderCultureInfoOutNullableOfDateTimeZoneHandlingOutNullableOfDateParseHandlingOutNullableOfFloatParseHandlingOutNullableOfInt32OutStringOut">
            <summary>Legt die Shim von JsonSerializer.SetupReader(JsonSerializer this, JsonReader reader, CultureInfo* previousCulture, Nullable`1* previousDateTimeZoneHandling, Nullable`1* previousDateParseHandling, Nullable`1* previousFloatParseHandling, Nullable`1* previousMaxDepth, String* previousDateFormatString) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.StringEscapeHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_StringEscapeHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.StringEscapeHandlingSetStringEscapeHandling">
            <summary>Legt die Shim von JsonSerializer.set_StringEscapeHandling(JsonSerializer this, StringEscapeHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.TraceWriterGet">
            <summary>Legt die Shim von JsonSerializer.get_TraceWriter(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.TraceWriterSetITraceWriter">
            <summary>Legt die Shim von JsonSerializer.set_TraceWriter(JsonSerializer this, ITraceWriter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.TypeNameAssemblyFormatGet">
            <summary>Legt die Shim von JsonSerializer.get_TypeNameAssemblyFormat(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.TypeNameAssemblyFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_TypeNameAssemblyFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.TypeNameAssemblyFormatHandlingSetTypeNameAssemblyFormatHandling">
            <summary>Legt die Shim von JsonSerializer.set_TypeNameAssemblyFormatHandling(JsonSerializer this, TypeNameAssemblyFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.TypeNameAssemblyFormatSetFormatterAssemblyStyle">
            <summary>Legt die Shim von JsonSerializer.set_TypeNameAssemblyFormat(JsonSerializer this, FormatterAssemblyStyle value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.TypeNameHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_TypeNameHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.AllInstances.TypeNameHandlingSetTypeNameHandling">
            <summary>Legt die Shim von JsonSerializer.set_TypeNameHandling(JsonSerializer this, TypeNameHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ApplySerializerSettingsJsonSerializerJsonSerializerSettings">
            <summary>Legt die Shim von JsonSerializer.ApplySerializerSettings(JsonSerializer serializer, JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializer.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializer.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.BinderGet">
            <summary>Legt die Shim von JsonSerializer.get_Binder(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.BinderSetSerializationBinder">
            <summary>Legt die Shim von JsonSerializer.set_Binder(JsonSerializer this, SerializationBinder value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.CheckAdditionalContentGet">
            <summary>Legt die Shim von JsonSerializer.get_CheckAdditionalContent(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.CheckAdditionalContentSetBoolean">
            <summary>Legt die Shim von JsonSerializer.set_CheckAdditionalContent(JsonSerializer this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.Constructor">
            <summary>Legt die Shim von JsonSerializer.JsonSerializer(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ConstructorHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_ConstructorHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ConstructorHandlingSetConstructorHandling">
            <summary>Legt die Shim von JsonSerializer.set_ConstructorHandling(JsonSerializer this, ConstructorHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ContextGet">
            <summary>Legt die Shim von JsonSerializer.get_Context(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ContextSetStreamingContext">
            <summary>Legt die Shim von JsonSerializer.set_Context(JsonSerializer this, StreamingContext value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ContractResolverGet">
            <summary>Legt die Shim von JsonSerializer.get_ContractResolver(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ContractResolverSetIContractResolver">
            <summary>Legt die Shim von JsonSerializer.set_ContractResolver(JsonSerializer this, IContractResolver value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ConvertersGet">
            <summary>Legt die Shim von JsonSerializer.get_Converters(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.Create">
            <summary>Legt die Shim von JsonSerializer.Create() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.CreateDefault">
            <summary>Legt die Shim von JsonSerializer.CreateDefault() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.CreateDefaultJsonSerializerSettings">
            <summary>Legt die Shim von JsonSerializer.CreateDefault(JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.CreateJsonSerializerSettings">
            <summary>Legt die Shim von JsonSerializer.Create(JsonSerializerSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.CultureGet">
            <summary>Legt die Shim von JsonSerializer.get_Culture(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.CultureSetCultureInfo">
            <summary>Legt die Shim von JsonSerializer.set_Culture(JsonSerializer this, CultureInfo value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DateFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_DateFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DateFormatHandlingSetDateFormatHandling">
            <summary>Legt die Shim von JsonSerializer.set_DateFormatHandling(JsonSerializer this, DateFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DateFormatStringGet">
            <summary>Legt die Shim von JsonSerializer.get_DateFormatString(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DateFormatStringSetString">
            <summary>Legt die Shim von JsonSerializer.set_DateFormatString(JsonSerializer this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DateParseHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_DateParseHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DateParseHandlingSetDateParseHandling">
            <summary>Legt die Shim von JsonSerializer.set_DateParseHandling(JsonSerializer this, DateParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DateTimeZoneHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_DateTimeZoneHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DateTimeZoneHandlingSetDateTimeZoneHandling">
            <summary>Legt die Shim von JsonSerializer.set_DateTimeZoneHandling(JsonSerializer this, DateTimeZoneHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DefaultValueHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_DefaultValueHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DefaultValueHandlingSetDefaultValueHandling">
            <summary>Legt die Shim von JsonSerializer.set_DefaultValueHandling(JsonSerializer this, DefaultValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DeserializeInternalJsonReaderType">
            <summary>Legt die Shim von JsonSerializer.DeserializeInternal(JsonSerializer this, JsonReader reader, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DeserializeJsonReader">
            <summary>Legt die Shim von JsonSerializer.Deserialize(JsonSerializer this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DeserializeJsonReaderType">
            <summary>Legt die Shim von JsonSerializer.Deserialize(JsonSerializer this, JsonReader reader, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializer.DeserializeOf1JsonReader``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.JsonReader,``0})">
            <summary>Legt die Shim von JsonSerializer.Deserialize(JsonSerializer this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.DeserializeTextReaderType">
            <summary>Legt die Shim von JsonSerializer.Deserialize(JsonSerializer this, TextReader reader, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.EqualityComparerGet">
            <summary>Legt die Shim von JsonSerializer.get_EqualityComparer(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.EqualityComparerSetIEqualityComparer">
            <summary>Legt die Shim von JsonSerializer.set_EqualityComparer(JsonSerializer this, IEqualityComparer value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ErrorAddEventHandlerOfErrorEventArgs">
            <summary>Legt die Shim von JsonSerializer.add_Error(JsonSerializer this, EventHandler`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ErrorRemoveEventHandlerOfErrorEventArgs">
            <summary>Legt die Shim von JsonSerializer.remove_Error(JsonSerializer this, EventHandler`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.FloatFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_FloatFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.FloatFormatHandlingSetFloatFormatHandling">
            <summary>Legt die Shim von JsonSerializer.set_FloatFormatHandling(JsonSerializer this, FloatFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.FloatParseHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_FloatParseHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.FloatParseHandlingSetFloatParseHandling">
            <summary>Legt die Shim von JsonSerializer.set_FloatParseHandling(JsonSerializer this, FloatParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.FormattingGet">
            <summary>Legt die Shim von JsonSerializer.get_Formatting(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.FormattingSetFormatting">
            <summary>Legt die Shim von JsonSerializer.set_Formatting(JsonSerializer this, Formatting value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.GetMatchingConverterIListOfJsonConverterType">
            <summary>Legt die Shim von JsonSerializer.GetMatchingConverter(IList`1 converters, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.GetMatchingConverterType">
            <summary>Legt die Shim von JsonSerializer.GetMatchingConverter(JsonSerializer this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.GetReferenceResolver">
            <summary>Legt die Shim von JsonSerializer.GetReferenceResolver(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.IsCheckAdditionalContentSet">
            <summary>Legt die Shim von JsonSerializer.IsCheckAdditionalContentSet(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.MaxDepthGet">
            <summary>Legt die Shim von JsonSerializer.get_MaxDepth(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.MaxDepthSetNullableOfInt32">
            <summary>Legt die Shim von JsonSerializer.set_MaxDepth(JsonSerializer this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.MetadataPropertyHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_MetadataPropertyHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.MetadataPropertyHandlingSetMetadataPropertyHandling">
            <summary>Legt die Shim von JsonSerializer.set_MetadataPropertyHandling(JsonSerializer this, MetadataPropertyHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.MissingMemberHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_MissingMemberHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.MissingMemberHandlingSetMissingMemberHandling">
            <summary>Legt die Shim von JsonSerializer.set_MissingMemberHandling(JsonSerializer this, MissingMemberHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.NullValueHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_NullValueHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.NullValueHandlingSetNullValueHandling">
            <summary>Legt die Shim von JsonSerializer.set_NullValueHandling(JsonSerializer this, NullValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ObjectCreationHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_ObjectCreationHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ObjectCreationHandlingSetObjectCreationHandling">
            <summary>Legt die Shim von JsonSerializer.set_ObjectCreationHandling(JsonSerializer this, ObjectCreationHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.OnErrorErrorEventArgs">
            <summary>Legt die Shim von JsonSerializer.OnError(JsonSerializer this, ErrorEventArgs e) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.PopulateInternalJsonReaderObject">
            <summary>Legt die Shim von JsonSerializer.PopulateInternal(JsonSerializer this, JsonReader reader, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.PopulateJsonReaderObject">
            <summary>Legt die Shim von JsonSerializer.Populate(JsonSerializer this, JsonReader reader, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.PopulateTextReaderObject">
            <summary>Legt die Shim von JsonSerializer.Populate(JsonSerializer this, TextReader reader, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.PreserveReferencesHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_PreserveReferencesHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.PreserveReferencesHandlingSetPreserveReferencesHandling">
            <summary>Legt die Shim von JsonSerializer.set_PreserveReferencesHandling(JsonSerializer this, PreserveReferencesHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_ReferenceLoopHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ReferenceLoopHandlingSetReferenceLoopHandling">
            <summary>Legt die Shim von JsonSerializer.set_ReferenceLoopHandling(JsonSerializer this, ReferenceLoopHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ReferenceResolverGet">
            <summary>Legt die Shim von JsonSerializer.get_ReferenceResolver(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ReferenceResolverSetIReferenceResolver">
            <summary>Legt die Shim von JsonSerializer.set_ReferenceResolver(JsonSerializer this, IReferenceResolver value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.ResetReaderJsonReaderCultureInfoNullableOfDateTimeZoneHandlingNullableOfDateParseHandlingNullableOfFloatParseHandlingNullableOfInt32String">
            <summary>Legt die Shim von JsonSerializer.ResetReader(JsonSerializer this, JsonReader reader, CultureInfo previousCulture, Nullable`1 previousDateTimeZoneHandling, Nullable`1 previousDateParseHandling, Nullable`1 previousFloatParseHandling, Nullable`1 previousMaxDepth, String previousDateFormatString) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.SerializationBinderGet">
            <summary>Legt die Shim von JsonSerializer.get_SerializationBinder(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.SerializationBinderSetISerializationBinder">
            <summary>Legt die Shim von JsonSerializer.set_SerializationBinder(JsonSerializer this, ISerializationBinder value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.SerializeInternalJsonWriterObjectType">
            <summary>Legt die Shim von JsonSerializer.SerializeInternal(JsonSerializer this, JsonWriter jsonWriter, Object value, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.SerializeJsonWriterObject">
            <summary>Legt die Shim von JsonSerializer.Serialize(JsonSerializer this, JsonWriter jsonWriter, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.SerializeJsonWriterObjectType">
            <summary>Legt die Shim von JsonSerializer.Serialize(JsonSerializer this, JsonWriter jsonWriter, Object value, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.SerializeTextWriterObject">
            <summary>Legt die Shim von JsonSerializer.Serialize(JsonSerializer this, TextWriter textWriter, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.SerializeTextWriterObjectType">
            <summary>Legt die Shim von JsonSerializer.Serialize(JsonSerializer this, TextWriter textWriter, Object value, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.StringEscapeHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_StringEscapeHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.StringEscapeHandlingSetStringEscapeHandling">
            <summary>Legt die Shim von JsonSerializer.set_StringEscapeHandling(JsonSerializer this, StringEscapeHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.TraceWriterGet">
            <summary>Legt die Shim von JsonSerializer.get_TraceWriter(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.TraceWriterSetITraceWriter">
            <summary>Legt die Shim von JsonSerializer.set_TraceWriter(JsonSerializer this, ITraceWriter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.TypeNameAssemblyFormatGet">
            <summary>Legt die Shim von JsonSerializer.get_TypeNameAssemblyFormat(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.TypeNameAssemblyFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_TypeNameAssemblyFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.TypeNameAssemblyFormatHandlingSetTypeNameAssemblyFormatHandling">
            <summary>Legt die Shim von JsonSerializer.set_TypeNameAssemblyFormatHandling(JsonSerializer this, TypeNameAssemblyFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.TypeNameAssemblyFormatSetFormatterAssemblyStyle">
            <summary>Legt die Shim von JsonSerializer.set_TypeNameAssemblyFormat(JsonSerializer this, FormatterAssemblyStyle value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.TypeNameHandlingGet">
            <summary>Legt die Shim von JsonSerializer.get_TypeNameHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializer.TypeNameHandlingSetTypeNameHandling">
            <summary>Legt die Shim von JsonSerializer.set_TypeNameHandling(JsonSerializer this, TypeNameHandling value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings">
            <summary>Shim-Typ von Newtonsoft.Json.JsonSerializerSettings</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.#ctor(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.BinderGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Binder(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.BinderSetSerializationBinder">
            <summary>Legt die Shim von JsonSerializerSettings.set_Binder(JsonSerializerSettings this, SerializationBinder value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.CheckAdditionalContentGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_CheckAdditionalContent(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.CheckAdditionalContentSetBoolean">
            <summary>Legt die Shim von JsonSerializerSettings.set_CheckAdditionalContent(JsonSerializerSettings this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ConstructorHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ConstructorHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ConstructorHandlingSetConstructorHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_ConstructorHandling(JsonSerializerSettings this, ConstructorHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ContextGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Context(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ContextSetStreamingContext">
            <summary>Legt die Shim von JsonSerializerSettings.set_Context(JsonSerializerSettings this, StreamingContext value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ContractResolverGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ContractResolver(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ContractResolverSetIContractResolver">
            <summary>Legt die Shim von JsonSerializerSettings.set_ContractResolver(JsonSerializerSettings this, IContractResolver value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ConvertersGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Converters(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ConvertersSetIListOfJsonConverter">
            <summary>Legt die Shim von JsonSerializerSettings.set_Converters(JsonSerializerSettings this, IList`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.CultureGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Culture(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.CultureSetCultureInfo">
            <summary>Legt die Shim von JsonSerializerSettings.set_Culture(JsonSerializerSettings this, CultureInfo value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.DateFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_DateFormatHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.DateFormatHandlingSetDateFormatHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_DateFormatHandling(JsonSerializerSettings this, DateFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.DateFormatStringGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_DateFormatString(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.DateFormatStringSetString">
            <summary>Legt die Shim von JsonSerializerSettings.set_DateFormatString(JsonSerializerSettings this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.DateParseHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_DateParseHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.DateParseHandlingSetDateParseHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_DateParseHandling(JsonSerializerSettings this, DateParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.DateTimeZoneHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_DateTimeZoneHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.DateTimeZoneHandlingSetDateTimeZoneHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_DateTimeZoneHandling(JsonSerializerSettings this, DateTimeZoneHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.DefaultValueHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_DefaultValueHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.DefaultValueHandlingSetDefaultValueHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_DefaultValueHandling(JsonSerializerSettings this, DefaultValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.EqualityComparerGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_EqualityComparer(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.EqualityComparerSetIEqualityComparer">
            <summary>Legt die Shim von JsonSerializerSettings.set_EqualityComparer(JsonSerializerSettings this, IEqualityComparer value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ErrorGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Error(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ErrorSetEventHandlerOfErrorEventArgs">
            <summary>Legt die Shim von JsonSerializerSettings.set_Error(JsonSerializerSettings this, EventHandler`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.FloatFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_FloatFormatHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.FloatFormatHandlingSetFloatFormatHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_FloatFormatHandling(JsonSerializerSettings this, FloatFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.FloatParseHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_FloatParseHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.FloatParseHandlingSetFloatParseHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_FloatParseHandling(JsonSerializerSettings this, FloatParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.FormattingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Formatting(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.FormattingSetFormatting">
            <summary>Legt die Shim von JsonSerializerSettings.set_Formatting(JsonSerializerSettings this, Formatting value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.MaxDepthGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_MaxDepth(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.MaxDepthSetNullableOfInt32">
            <summary>Legt die Shim von JsonSerializerSettings.set_MaxDepth(JsonSerializerSettings this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.MetadataPropertyHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_MetadataPropertyHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.MetadataPropertyHandlingSetMetadataPropertyHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_MetadataPropertyHandling(JsonSerializerSettings this, MetadataPropertyHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.MissingMemberHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_MissingMemberHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.MissingMemberHandlingSetMissingMemberHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_MissingMemberHandling(JsonSerializerSettings this, MissingMemberHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.NullValueHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_NullValueHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.NullValueHandlingSetNullValueHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_NullValueHandling(JsonSerializerSettings this, NullValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ObjectCreationHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ObjectCreationHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ObjectCreationHandlingSetObjectCreationHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_ObjectCreationHandling(JsonSerializerSettings this, ObjectCreationHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.PreserveReferencesHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_PreserveReferencesHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.PreserveReferencesHandlingSetPreserveReferencesHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_PreserveReferencesHandling(JsonSerializerSettings this, PreserveReferencesHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ReferenceLoopHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ReferenceLoopHandlingSetReferenceLoopHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_ReferenceLoopHandling(JsonSerializerSettings this, ReferenceLoopHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ReferenceResolverGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ReferenceResolver(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ReferenceResolverProviderGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ReferenceResolverProvider(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ReferenceResolverProviderSetFuncOfIReferenceResolver">
            <summary>Legt die Shim von JsonSerializerSettings.set_ReferenceResolverProvider(JsonSerializerSettings this, Func`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.ReferenceResolverSetIReferenceResolver">
            <summary>Legt die Shim von JsonSerializerSettings.set_ReferenceResolver(JsonSerializerSettings this, IReferenceResolver value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.SerializationBinderGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_SerializationBinder(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.SerializationBinderSetISerializationBinder">
            <summary>Legt die Shim von JsonSerializerSettings.set_SerializationBinder(JsonSerializerSettings this, ISerializationBinder value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.StringEscapeHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_StringEscapeHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.StringEscapeHandlingSetStringEscapeHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_StringEscapeHandling(JsonSerializerSettings this, StringEscapeHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.TraceWriterGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_TraceWriter(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.TraceWriterSetITraceWriter">
            <summary>Legt die Shim von JsonSerializerSettings.set_TraceWriter(JsonSerializerSettings this, ITraceWriter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.TypeNameAssemblyFormatGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_TypeNameAssemblyFormat(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.TypeNameAssemblyFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_TypeNameAssemblyFormatHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.TypeNameAssemblyFormatHandlingSetTypeNameAssemblyFormatHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_TypeNameAssemblyFormatHandling(JsonSerializerSettings this, TypeNameAssemblyFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.TypeNameAssemblyFormatSetFormatterAssemblyStyle">
            <summary>Legt die Shim von JsonSerializerSettings.set_TypeNameAssemblyFormat(JsonSerializerSettings this, FormatterAssemblyStyle value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.TypeNameHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_TypeNameHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.AllInstances.TypeNameHandlingSetTypeNameHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_TypeNameHandling(JsonSerializerSettings this, TypeNameHandling value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.BinderGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Binder(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.BinderSetSerializationBinder">
            <summary>Legt die Shim von JsonSerializerSettings.set_Binder(JsonSerializerSettings this, SerializationBinder value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.CheckAdditionalContentGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_CheckAdditionalContent(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.CheckAdditionalContentSetBoolean">
            <summary>Legt die Shim von JsonSerializerSettings.set_CheckAdditionalContent(JsonSerializerSettings this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.Constructor">
            <summary>Legt die Shim von JsonSerializerSettings.JsonSerializerSettings(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ConstructorHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ConstructorHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ConstructorHandlingSetConstructorHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_ConstructorHandling(JsonSerializerSettings this, ConstructorHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ContextGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Context(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ContextSetStreamingContext">
            <summary>Legt die Shim von JsonSerializerSettings.set_Context(JsonSerializerSettings this, StreamingContext value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ContractResolverGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ContractResolver(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ContractResolverSetIContractResolver">
            <summary>Legt die Shim von JsonSerializerSettings.set_ContractResolver(JsonSerializerSettings this, IContractResolver value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ConvertersGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Converters(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ConvertersSetIListOfJsonConverter">
            <summary>Legt die Shim von JsonSerializerSettings.set_Converters(JsonSerializerSettings this, IList`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.CultureGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Culture(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.CultureSetCultureInfo">
            <summary>Legt die Shim von JsonSerializerSettings.set_Culture(JsonSerializerSettings this, CultureInfo value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.DateFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_DateFormatHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.DateFormatHandlingSetDateFormatHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_DateFormatHandling(JsonSerializerSettings this, DateFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.DateFormatStringGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_DateFormatString(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.DateFormatStringSetString">
            <summary>Legt die Shim von JsonSerializerSettings.set_DateFormatString(JsonSerializerSettings this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.DateParseHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_DateParseHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.DateParseHandlingSetDateParseHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_DateParseHandling(JsonSerializerSettings this, DateParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.DateTimeZoneHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_DateTimeZoneHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.DateTimeZoneHandlingSetDateTimeZoneHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_DateTimeZoneHandling(JsonSerializerSettings this, DateTimeZoneHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.DefaultValueHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_DefaultValueHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.DefaultValueHandlingSetDefaultValueHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_DefaultValueHandling(JsonSerializerSettings this, DefaultValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.EqualityComparerGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_EqualityComparer(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.EqualityComparerSetIEqualityComparer">
            <summary>Legt die Shim von JsonSerializerSettings.set_EqualityComparer(JsonSerializerSettings this, IEqualityComparer value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ErrorGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Error(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ErrorSetEventHandlerOfErrorEventArgs">
            <summary>Legt die Shim von JsonSerializerSettings.set_Error(JsonSerializerSettings this, EventHandler`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.FloatFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_FloatFormatHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.FloatFormatHandlingSetFloatFormatHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_FloatFormatHandling(JsonSerializerSettings this, FloatFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.FloatParseHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_FloatParseHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.FloatParseHandlingSetFloatParseHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_FloatParseHandling(JsonSerializerSettings this, FloatParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.FormattingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_Formatting(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.FormattingSetFormatting">
            <summary>Legt die Shim von JsonSerializerSettings.set_Formatting(JsonSerializerSettings this, Formatting value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.MaxDepthGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_MaxDepth(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.MaxDepthSetNullableOfInt32">
            <summary>Legt die Shim von JsonSerializerSettings.set_MaxDepth(JsonSerializerSettings this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.MetadataPropertyHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_MetadataPropertyHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.MetadataPropertyHandlingSetMetadataPropertyHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_MetadataPropertyHandling(JsonSerializerSettings this, MetadataPropertyHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.MissingMemberHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_MissingMemberHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.MissingMemberHandlingSetMissingMemberHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_MissingMemberHandling(JsonSerializerSettings this, MissingMemberHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.NullValueHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_NullValueHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.NullValueHandlingSetNullValueHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_NullValueHandling(JsonSerializerSettings this, NullValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ObjectCreationHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ObjectCreationHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ObjectCreationHandlingSetObjectCreationHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_ObjectCreationHandling(JsonSerializerSettings this, ObjectCreationHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.PreserveReferencesHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_PreserveReferencesHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.PreserveReferencesHandlingSetPreserveReferencesHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_PreserveReferencesHandling(JsonSerializerSettings this, PreserveReferencesHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ReferenceLoopHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ReferenceLoopHandlingSetReferenceLoopHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_ReferenceLoopHandling(JsonSerializerSettings this, ReferenceLoopHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ReferenceResolverGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ReferenceResolver(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ReferenceResolverProviderGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_ReferenceResolverProvider(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ReferenceResolverProviderSetFuncOfIReferenceResolver">
            <summary>Legt die Shim von JsonSerializerSettings.set_ReferenceResolverProvider(JsonSerializerSettings this, Func`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.ReferenceResolverSetIReferenceResolver">
            <summary>Legt die Shim von JsonSerializerSettings.set_ReferenceResolver(JsonSerializerSettings this, IReferenceResolver value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.SerializationBinderGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_SerializationBinder(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.SerializationBinderSetISerializationBinder">
            <summary>Legt die Shim von JsonSerializerSettings.set_SerializationBinder(JsonSerializerSettings this, ISerializationBinder value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.StaticConstructor">
            <summary>Legt die Shim von JsonSerializerSettings.JsonSerializerSettings() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.StringEscapeHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_StringEscapeHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.StringEscapeHandlingSetStringEscapeHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_StringEscapeHandling(JsonSerializerSettings this, StringEscapeHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.TraceWriterGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_TraceWriter(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.TraceWriterSetITraceWriter">
            <summary>Legt die Shim von JsonSerializerSettings.set_TraceWriter(JsonSerializerSettings this, ITraceWriter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.TypeNameAssemblyFormatGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_TypeNameAssemblyFormat(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.TypeNameAssemblyFormatHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_TypeNameAssemblyFormatHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.TypeNameAssemblyFormatHandlingSetTypeNameAssemblyFormatHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_TypeNameAssemblyFormatHandling(JsonSerializerSettings this, TypeNameAssemblyFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.TypeNameAssemblyFormatSetFormatterAssemblyStyle">
            <summary>Legt die Shim von JsonSerializerSettings.set_TypeNameAssemblyFormat(JsonSerializerSettings this, FormatterAssemblyStyle value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.TypeNameHandlingGet">
            <summary>Legt die Shim von JsonSerializerSettings.get_TypeNameHandling(JsonSerializerSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonSerializerSettings.TypeNameHandlingSetTypeNameHandling">
            <summary>Legt die Shim von JsonSerializerSettings.set_TypeNameHandling(JsonSerializerSettings this, TypeNameHandling value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonTextReader">
            <summary>Shim-Typ von Newtonsoft.Json.JsonTextReader</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonTextReader.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonTextReader.#ctor(Newtonsoft.Json.JsonTextReader)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ArrayPoolGet">
            <summary>Legt die Shim von JsonTextReader.get_ArrayPool(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ArrayPoolSetIArrayPoolOfChar">
            <summary>Legt die Shim von JsonTextReader.set_ArrayPool(JsonTextReader this, IArrayPool`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ClearRecentString">
            <summary>Legt die Shim von JsonTextReader.ClearRecentString(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.Close">
            <summary>Legt die Shim von JsonTextReader.Close(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ConvertUnicodeBoolean">
            <summary>Legt die Shim von JsonTextReader.ConvertUnicode(JsonTextReader this, Boolean enoughChars) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.CreateUnexpectedCharacterExceptionChar">
            <summary>Legt die Shim von JsonTextReader.CreateUnexpectedCharacterException(JsonTextReader this, Char c) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.DoReadAsBooleanAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsBooleanAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.DoReadAsBytesAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsBytesAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.DoReadAsDateTimeAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsDateTimeAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.DoReadAsDateTimeOffsetAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsDateTimeOffsetAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.DoReadAsDecimalAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsDecimalAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.DoReadAsDoubleAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsDoubleAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.DoReadAsInt32AsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsInt32Async(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.DoReadAsStringAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsStringAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.DoReadAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.DoReadAsyncTaskOfBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsync(JsonTextReader this, Task`1 task, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.EatWhitespace">
            <summary>Legt die Shim von JsonTextReader.EatWhitespace(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.EatWhitespaceAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.EatWhitespaceAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.EndCommentBooleanInt32Int32">
            <summary>Legt die Shim von JsonTextReader.EndComment(JsonTextReader this, Boolean setToken, Int32 initialPosition, Int32 endPosition) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.EnsureBuffer">
            <summary>Legt die Shim von JsonTextReader.EnsureBuffer(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.EnsureBufferNotEmpty">
            <summary>Legt die Shim von JsonTextReader.EnsureBufferNotEmpty(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.EnsureCharsAsyncInt32BooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.EnsureCharsAsync(JsonTextReader this, Int32 relativePosition, Boolean append, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.EnsureCharsInt32Boolean">
            <summary>Legt die Shim von JsonTextReader.EnsureChars(JsonTextReader this, Int32 relativePosition, Boolean append) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.FinishReadStringIntoBufferInt32Int32Int32">
            <summary>Legt die Shim von JsonTextReader.FinishReadStringIntoBuffer(JsonTextReader this, Int32 charPos, Int32 initialPosition, Int32 lastWritePosition) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.HandleNull">
            <summary>Legt die Shim von JsonTextReader.HandleNull(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.HandleNullAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.HandleNullAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.HasLineInfo">
            <summary>Legt die Shim von JsonTextReader.HasLineInfo(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.IsSeparatorChar">
            <summary>Legt die Shim von JsonTextReader.IsSeparator(JsonTextReader this, Char c) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.LineNumberGet">
            <summary>Legt die Shim von JsonTextReader.get_LineNumber(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.LinePositionGet">
            <summary>Legt die Shim von JsonTextReader.get_LinePosition(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.MatchAndSetAsyncStringJsonTokenObjectCancellationToken">
            <summary>Legt die Shim von JsonTextReader.MatchAndSetAsync(JsonTextReader this, String value, JsonToken newToken, Object tokenValue, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.MatchValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextReader.MatchValueAsync(JsonTextReader this, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.MatchValueBooleanString">
            <summary>Legt die Shim von JsonTextReader.MatchValue(JsonTextReader this, Boolean enoughChars, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.MatchValueString">
            <summary>Legt die Shim von JsonTextReader.MatchValue(JsonTextReader this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.MatchValueWithTrailingSeparatorAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextReader.MatchValueWithTrailingSeparatorAsync(JsonTextReader this, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.MatchValueWithTrailingSeparatorString">
            <summary>Legt die Shim von JsonTextReader.MatchValueWithTrailingSeparator(JsonTextReader this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.OnNewLineInt32">
            <summary>Legt die Shim von JsonTextReader.OnNewLine(JsonTextReader this, Int32 pos) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseCommentAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseCommentAsync(JsonTextReader this, Boolean setToken, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseCommentBoolean">
            <summary>Legt die Shim von JsonTextReader.ParseComment(JsonTextReader this, Boolean setToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseConstructor">
            <summary>Legt die Shim von JsonTextReader.ParseConstructor(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseConstructorAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseConstructorAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseFalse">
            <summary>Legt die Shim von JsonTextReader.ParseFalse(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseFalseAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseFalseAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseNull">
            <summary>Legt die Shim von JsonTextReader.ParseNull(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseNullAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseNullAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseObject">
            <summary>Legt die Shim von JsonTextReader.ParseObject(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseObjectAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParsePostValueAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParsePostValueAsync(JsonTextReader this, Boolean ignoreComments, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParsePostValueBoolean">
            <summary>Legt die Shim von JsonTextReader.ParsePostValue(JsonTextReader this, Boolean ignoreComments) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseProperty">
            <summary>Legt die Shim von JsonTextReader.ParseProperty(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParsePropertyAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParsePropertyAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseTrue">
            <summary>Legt die Shim von JsonTextReader.ParseTrue(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseTrueAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseTrueAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseUndefined">
            <summary>Legt die Shim von JsonTextReader.ParseUndefined(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseUndefinedAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseUndefinedAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseUnicode">
            <summary>Legt die Shim von JsonTextReader.ParseUnicode(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseUnicodeAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseUnicodeAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseUnquotedProperty">
            <summary>Legt die Shim von JsonTextReader.ParseUnquotedProperty(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseUnquotedPropertyAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseUnquotedPropertyAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseValue">
            <summary>Legt die Shim von JsonTextReader.ParseValue(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ParseValueAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseValueAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.PrepareBufferForReadDataBooleanInt32">
            <summary>Legt die Shim von JsonTextReader.PrepareBufferForReadData(JsonTextReader this, Boolean append, Int32 charsRequired) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ProcessCarriageReturnAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ProcessCarriageReturnAsync(JsonTextReader this, Boolean append, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ProcessCarriageReturnAsyncTaskOfBoolean">
            <summary>Legt die Shim von JsonTextReader.ProcessCarriageReturnAsync(JsonTextReader this, Task`1 task) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ProcessCarriageReturnBoolean">
            <summary>Legt die Shim von JsonTextReader.ProcessCarriageReturn(JsonTextReader this, Boolean append) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ProcessLineFeed">
            <summary>Legt die Shim von JsonTextReader.ProcessLineFeed(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ProcessValueComma">
            <summary>Legt die Shim von JsonTextReader.ProcessValueComma(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.Read">
            <summary>Legt die Shim von JsonTextReader.Read(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsBoolean">
            <summary>Legt die Shim von JsonTextReader.ReadAsBoolean(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsBooleanAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsBooleanAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsBytes">
            <summary>Legt die Shim von JsonTextReader.ReadAsBytes(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsBytesAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsBytesAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsDateTime">
            <summary>Legt die Shim von JsonTextReader.ReadAsDateTime(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsDateTimeAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsDateTimeAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsDateTimeOffset">
            <summary>Legt die Shim von JsonTextReader.ReadAsDateTimeOffset(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsDateTimeOffsetAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsDateTimeOffsetAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsDecimal">
            <summary>Legt die Shim von JsonTextReader.ReadAsDecimal(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsDecimalAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsDecimalAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsDouble">
            <summary>Legt die Shim von JsonTextReader.ReadAsDouble(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsDoubleAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsDoubleAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsInt32">
            <summary>Legt die Shim von JsonTextReader.ReadAsInt32(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsInt32AsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsInt32Async(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsString">
            <summary>Legt die Shim von JsonTextReader.ReadAsString(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsStringAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsStringAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadCharsAsyncInt32BooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadCharsAsync(JsonTextReader this, Int32 relativePosition, Boolean append, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadCharsInt32Boolean">
            <summary>Legt die Shim von JsonTextReader.ReadChars(JsonTextReader this, Int32 relativePosition, Boolean append) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadDataAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadDataAsync(JsonTextReader this, Boolean append, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadDataAsyncBooleanInt32CancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadDataAsync(JsonTextReader this, Boolean append, Int32 charsRequired, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadDataBoolean">
            <summary>Legt die Shim von JsonTextReader.ReadData(JsonTextReader this, Boolean append) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadDataBooleanInt32">
            <summary>Legt die Shim von JsonTextReader.ReadData(JsonTextReader this, Boolean append, Int32 charsRequired) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadFinished">
            <summary>Legt die Shim von JsonTextReader.ReadFinished(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadFinishedAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadFinishedAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadFromFinishedAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadFromFinishedAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadIntoWrappedTypeObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadIntoWrappedTypeObjectAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadNullChar">
            <summary>Legt die Shim von JsonTextReader.ReadNullChar(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadNullCharAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadNullCharAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadNumberCharIntoBufferCharInt32">
            <summary>Legt die Shim von JsonTextReader.ReadNumberCharIntoBuffer(JsonTextReader this, Char currentChar, Int32 charPos) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadNumberIntoBuffer">
            <summary>Legt die Shim von JsonTextReader.ReadNumberIntoBuffer(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadNumberIntoBufferAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadNumberIntoBufferAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadStringIntoBufferAsyncCharCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadStringIntoBufferAsync(JsonTextReader this, Char quote, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadStringIntoBufferChar">
            <summary>Legt die Shim von JsonTextReader.ReadStringIntoBuffer(JsonTextReader this, Char quote) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ReadUnquotedPropertyReportIfDoneCharInt32">
            <summary>Legt die Shim von JsonTextReader.ReadUnquotedPropertyReportIfDone(JsonTextReader this, Char currentChar, Int32 initialPosition) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.SetNewLineBoolean">
            <summary>Legt die Shim von JsonTextReader.SetNewLine(JsonTextReader this, Boolean hasNextChar) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ShiftBufferIfNeeded">
            <summary>Legt die Shim von JsonTextReader.ShiftBufferIfNeeded(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ThrowReaderErrorStringException">
            <summary>Legt die Shim von JsonTextReader.ThrowReaderError(JsonTextReader this, String message, Exception ex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.ValidIdentifierCharChar">
            <summary>Legt die Shim von JsonTextReader.ValidIdentifierChar(JsonTextReader this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.AllInstances.WriteCharToBufferCharInt32Int32">
            <summary>Legt die Shim von JsonTextReader.WriteCharToBuffer(JsonTextReader this, Char writeChar, Int32 lastWritePosition, Int32 writeToPosition) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ArrayPoolGet">
            <summary>Legt die Shim von JsonTextReader.get_ArrayPool(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ArrayPoolSetIArrayPoolOfChar">
            <summary>Legt die Shim von JsonTextReader.set_ArrayPool(JsonTextReader this, IArrayPool`1 value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonTextReader.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonTextReader.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.BigIntegerParseStringCultureInfo">
            <summary>Legt die Shim von JsonTextReader.BigIntegerParse(String number, CultureInfo culture) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonTextReader.Bind(Newtonsoft.Json.IJsonLineInfo)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonTextReader.Bind(System.IDisposable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.BlockCopyCharsCharArrayInt32CharArrayInt32Int32">
            <summary>Legt die Shim von JsonTextReader.BlockCopyChars(Char[] src, Int32 srcOffset, Char[] dst, Int32 dstOffset, Int32 count) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ClearRecentString">
            <summary>Legt die Shim von JsonTextReader.ClearRecentString(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.Close">
            <summary>Legt die Shim von JsonTextReader.Close(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ConstructorTextReader">
            <summary>Legt die Shim von JsonTextReader.JsonTextReader(JsonTextReader this, TextReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ConvertUnicodeBoolean">
            <summary>Legt die Shim von JsonTextReader.ConvertUnicode(JsonTextReader this, Boolean enoughChars) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.CreateUnexpectedCharacterExceptionChar">
            <summary>Legt die Shim von JsonTextReader.CreateUnexpectedCharacterException(JsonTextReader this, Char c) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.DoReadAsBooleanAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsBooleanAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.DoReadAsBytesAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsBytesAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.DoReadAsDateTimeAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsDateTimeAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.DoReadAsDateTimeOffsetAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsDateTimeOffsetAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.DoReadAsDecimalAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsDecimalAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.DoReadAsDoubleAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsDoubleAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.DoReadAsInt32AsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsInt32Async(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.DoReadAsStringAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsStringAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.DoReadAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.DoReadAsyncTaskOfBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.DoReadAsync(JsonTextReader this, Task`1 task, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.EatWhitespace">
            <summary>Legt die Shim von JsonTextReader.EatWhitespace(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.EatWhitespaceAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.EatWhitespaceAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.EndCommentBooleanInt32Int32">
            <summary>Legt die Shim von JsonTextReader.EndComment(JsonTextReader this, Boolean setToken, Int32 initialPosition, Int32 endPosition) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.EnsureBuffer">
            <summary>Legt die Shim von JsonTextReader.EnsureBuffer(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.EnsureBufferNotEmpty">
            <summary>Legt die Shim von JsonTextReader.EnsureBufferNotEmpty(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.EnsureCharsAsyncInt32BooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.EnsureCharsAsync(JsonTextReader this, Int32 relativePosition, Boolean append, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.EnsureCharsInt32Boolean">
            <summary>Legt die Shim von JsonTextReader.EnsureChars(JsonTextReader this, Int32 relativePosition, Boolean append) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.FinishReadStringIntoBufferInt32Int32Int32">
            <summary>Legt die Shim von JsonTextReader.FinishReadStringIntoBuffer(JsonTextReader this, Int32 charPos, Int32 initialPosition, Int32 lastWritePosition) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.HandleNull">
            <summary>Legt die Shim von JsonTextReader.HandleNull(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.HandleNullAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.HandleNullAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.HasLineInfo">
            <summary>Legt die Shim von JsonTextReader.HasLineInfo(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.IsSeparatorChar">
            <summary>Legt die Shim von JsonTextReader.IsSeparator(JsonTextReader this, Char c) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.LineNumberGet">
            <summary>Legt die Shim von JsonTextReader.get_LineNumber(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.LinePositionGet">
            <summary>Legt die Shim von JsonTextReader.get_LinePosition(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.MatchAndSetAsyncStringJsonTokenObjectCancellationToken">
            <summary>Legt die Shim von JsonTextReader.MatchAndSetAsync(JsonTextReader this, String value, JsonToken newToken, Object tokenValue, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.MatchValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextReader.MatchValueAsync(JsonTextReader this, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.MatchValueBooleanString">
            <summary>Legt die Shim von JsonTextReader.MatchValue(JsonTextReader this, Boolean enoughChars, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.MatchValueString">
            <summary>Legt die Shim von JsonTextReader.MatchValue(JsonTextReader this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.MatchValueWithTrailingSeparatorAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextReader.MatchValueWithTrailingSeparatorAsync(JsonTextReader this, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.MatchValueWithTrailingSeparatorString">
            <summary>Legt die Shim von JsonTextReader.MatchValueWithTrailingSeparator(JsonTextReader this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.OnNewLineInt32">
            <summary>Legt die Shim von JsonTextReader.OnNewLine(JsonTextReader this, Int32 pos) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseCommentAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseCommentAsync(JsonTextReader this, Boolean setToken, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseCommentBoolean">
            <summary>Legt die Shim von JsonTextReader.ParseComment(JsonTextReader this, Boolean setToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseConstructor">
            <summary>Legt die Shim von JsonTextReader.ParseConstructor(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseConstructorAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseConstructorAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseFalse">
            <summary>Legt die Shim von JsonTextReader.ParseFalse(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseFalseAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseFalseAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseNull">
            <summary>Legt die Shim von JsonTextReader.ParseNull(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseNullAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseNullAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseObject">
            <summary>Legt die Shim von JsonTextReader.ParseObject(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseObjectAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParsePostValueAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParsePostValueAsync(JsonTextReader this, Boolean ignoreComments, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParsePostValueBoolean">
            <summary>Legt die Shim von JsonTextReader.ParsePostValue(JsonTextReader this, Boolean ignoreComments) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseProperty">
            <summary>Legt die Shim von JsonTextReader.ParseProperty(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParsePropertyAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParsePropertyAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseTrue">
            <summary>Legt die Shim von JsonTextReader.ParseTrue(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseTrueAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseTrueAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseUndefined">
            <summary>Legt die Shim von JsonTextReader.ParseUndefined(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseUndefinedAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseUndefinedAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseUnicode">
            <summary>Legt die Shim von JsonTextReader.ParseUnicode(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseUnicodeAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseUnicodeAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseUnquotedProperty">
            <summary>Legt die Shim von JsonTextReader.ParseUnquotedProperty(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseUnquotedPropertyAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseUnquotedPropertyAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseValue">
            <summary>Legt die Shim von JsonTextReader.ParseValue(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ParseValueAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ParseValueAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.PrepareBufferForReadDataBooleanInt32">
            <summary>Legt die Shim von JsonTextReader.PrepareBufferForReadData(JsonTextReader this, Boolean append, Int32 charsRequired) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ProcessCarriageReturnAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ProcessCarriageReturnAsync(JsonTextReader this, Boolean append, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ProcessCarriageReturnAsyncTaskOfBoolean">
            <summary>Legt die Shim von JsonTextReader.ProcessCarriageReturnAsync(JsonTextReader this, Task`1 task) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ProcessCarriageReturnBoolean">
            <summary>Legt die Shim von JsonTextReader.ProcessCarriageReturn(JsonTextReader this, Boolean append) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ProcessLineFeed">
            <summary>Legt die Shim von JsonTextReader.ProcessLineFeed(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ProcessValueComma">
            <summary>Legt die Shim von JsonTextReader.ProcessValueComma(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.Read">
            <summary>Legt die Shim von JsonTextReader.Read(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsBoolean">
            <summary>Legt die Shim von JsonTextReader.ReadAsBoolean(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsBooleanAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsBooleanAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsBytes">
            <summary>Legt die Shim von JsonTextReader.ReadAsBytes(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsBytesAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsBytesAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsDateTime">
            <summary>Legt die Shim von JsonTextReader.ReadAsDateTime(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsDateTimeAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsDateTimeAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsDateTimeOffset">
            <summary>Legt die Shim von JsonTextReader.ReadAsDateTimeOffset(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsDateTimeOffsetAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsDateTimeOffsetAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsDecimal">
            <summary>Legt die Shim von JsonTextReader.ReadAsDecimal(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsDecimalAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsDecimalAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsDouble">
            <summary>Legt die Shim von JsonTextReader.ReadAsDouble(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsDoubleAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsDoubleAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsInt32">
            <summary>Legt die Shim von JsonTextReader.ReadAsInt32(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsInt32AsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsInt32Async(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsString">
            <summary>Legt die Shim von JsonTextReader.ReadAsString(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsStringAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsStringAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadCharsAsyncInt32BooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadCharsAsync(JsonTextReader this, Int32 relativePosition, Boolean append, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadCharsInt32Boolean">
            <summary>Legt die Shim von JsonTextReader.ReadChars(JsonTextReader this, Int32 relativePosition, Boolean append) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadDataAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadDataAsync(JsonTextReader this, Boolean append, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadDataAsyncBooleanInt32CancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadDataAsync(JsonTextReader this, Boolean append, Int32 charsRequired, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadDataBoolean">
            <summary>Legt die Shim von JsonTextReader.ReadData(JsonTextReader this, Boolean append) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadDataBooleanInt32">
            <summary>Legt die Shim von JsonTextReader.ReadData(JsonTextReader this, Boolean append, Int32 charsRequired) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadFinished">
            <summary>Legt die Shim von JsonTextReader.ReadFinished(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadFinishedAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadFinishedAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadFromFinishedAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadFromFinishedAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadIntoWrappedTypeObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadIntoWrappedTypeObjectAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadNullChar">
            <summary>Legt die Shim von JsonTextReader.ReadNullChar(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadNullCharAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadNullCharAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadNumberCharIntoBufferCharInt32">
            <summary>Legt die Shim von JsonTextReader.ReadNumberCharIntoBuffer(JsonTextReader this, Char currentChar, Int32 charPos) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadNumberIntoBuffer">
            <summary>Legt die Shim von JsonTextReader.ReadNumberIntoBuffer(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadNumberIntoBufferAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadNumberIntoBufferAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadStringIntoBufferAsyncCharCancellationToken">
            <summary>Legt die Shim von JsonTextReader.ReadStringIntoBufferAsync(JsonTextReader this, Char quote, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadStringIntoBufferChar">
            <summary>Legt die Shim von JsonTextReader.ReadStringIntoBuffer(JsonTextReader this, Char quote) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ReadUnquotedPropertyReportIfDoneCharInt32">
            <summary>Legt die Shim von JsonTextReader.ReadUnquotedPropertyReportIfDone(JsonTextReader this, Char currentChar, Int32 initialPosition) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.SetNewLineBoolean">
            <summary>Legt die Shim von JsonTextReader.SetNewLine(JsonTextReader this, Boolean hasNextChar) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ShiftBufferIfNeeded">
            <summary>Legt die Shim von JsonTextReader.ShiftBufferIfNeeded(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ThrowReaderErrorStringException">
            <summary>Legt die Shim von JsonTextReader.ThrowReaderError(JsonTextReader this, String message, Exception ex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.ValidIdentifierCharChar">
            <summary>Legt die Shim von JsonTextReader.ValidIdentifierChar(JsonTextReader this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextReader.WriteCharToBufferCharInt32Int32">
            <summary>Legt die Shim von JsonTextReader.WriteCharToBuffer(JsonTextReader this, Char writeChar, Int32 lastWritePosition, Int32 writeToPosition) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonTextWriter">
            <summary>Shim-Typ von Newtonsoft.Json.JsonTextWriter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonTextWriter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonTextWriter.#ctor(Newtonsoft.Json.JsonTextWriter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.ArrayPoolGet">
            <summary>Legt die Shim von JsonTextWriter.get_ArrayPool(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.ArrayPoolSetIArrayPoolOfChar">
            <summary>Legt die Shim von JsonTextWriter.set_ArrayPool(JsonTextWriter this, IArrayPool`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.Close">
            <summary>Legt die Shim von JsonTextWriter.Close(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.CloseAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.CloseAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.CloseBufferAndWriter">
            <summary>Legt die Shim von JsonTextWriter.CloseBufferAndWriter(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoCloseAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoCloseAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoFlushAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoFlushAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteCommentAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteCommentAsync(JsonTextWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteEndAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteEndAsync(JsonTextWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteIndentAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteIndentAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteIndentSpaceAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteIndentSpaceAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteNullAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteNullAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWritePropertyNameAsyncStringBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWritePropertyNameAsync(JsonTextWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWritePropertyNameAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWritePropertyNameAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWritePropertyNameAsyncTaskStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWritePropertyNameAsync(JsonTextWriter this, Task task, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteRawAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteRawAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteRawValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteRawValueAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteRawValueAsyncTaskStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteRawValueAsync(JsonTextWriter this, Task task, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteStartArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteStartArrayAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteStartArrayAsyncTaskCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteStartArrayAsync(JsonTextWriter this, Task task, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteStartConstructorAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteStartConstructorAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteStartObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteStartObjectAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteStartObjectAsyncTaskCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteStartObjectAsync(JsonTextWriter this, Task task, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteUndefinedAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteUndefinedAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteUndefinedAsyncTaskCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteUndefinedAsync(JsonTextWriter this, Task task, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Boolean value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncCharCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Char value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncDateTimeCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, DateTime value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, DateTimeOffset value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncDecimalCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Decimal value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncGuidCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Guid value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfCharCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfDateTimeCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfDecimalCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfGuidCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfSByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfUInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfUInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncNullableOfUInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncTaskStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Task task, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueAsyncTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, TimeSpan value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteValueDelimiterAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueDelimiterAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.DoWriteWhitespaceAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteWhitespaceAsync(JsonTextWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.EnsureWriteBuffer">
            <summary>Legt die Shim von JsonTextWriter.EnsureWriteBuffer(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.EnsureWriteBufferInt32Int32">
            <summary>Legt die Shim von JsonTextWriter.EnsureWriteBuffer(JsonTextWriter this, Int32 length, Int32 copyTo) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.Flush">
            <summary>Legt die Shim von JsonTextWriter.Flush(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.FlushAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.FlushAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.IndentCharGet">
            <summary>Legt die Shim von JsonTextWriter.get_IndentChar(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.IndentCharSetChar">
            <summary>Legt die Shim von JsonTextWriter.set_IndentChar(JsonTextWriter this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.IndentationGet">
            <summary>Legt die Shim von JsonTextWriter.get_Indentation(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.IndentationSetInt32">
            <summary>Legt die Shim von JsonTextWriter.set_Indentation(JsonTextWriter this, Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.OnStringEscapeHandlingChanged">
            <summary>Legt die Shim von JsonTextWriter.OnStringEscapeHandlingChanged(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.QuoteCharGet">
            <summary>Legt die Shim von JsonTextWriter.get_QuoteChar(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.QuoteCharSetChar">
            <summary>Legt die Shim von JsonTextWriter.set_QuoteChar(JsonTextWriter this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.QuoteNameGet">
            <summary>Legt die Shim von JsonTextWriter.get_QuoteName(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.QuoteNameSetBoolean">
            <summary>Legt die Shim von JsonTextWriter.set_QuoteName(JsonTextWriter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.SetIndentChars">
            <summary>Legt die Shim von JsonTextWriter.SetIndentChars(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.UpdateCharEscapeFlags">
            <summary>Legt die Shim von JsonTextWriter.UpdateCharEscapeFlags(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteCommentAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteCommentAsync(JsonTextWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteCommentString">
            <summary>Legt die Shim von JsonTextWriter.WriteComment(JsonTextWriter this, String text) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteDigitsAsyncUInt64BooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteDigitsAsync(JsonTextWriter this, UInt64 uvalue, Boolean negative, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteEndArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEndArrayAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteEndAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEndAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteEndAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEndAsync(JsonTextWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteEndConstructorAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEndConstructorAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteEndJsonToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEnd(JsonTextWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteEndObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEndObjectAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteEscapedStringAsyncStringBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEscapedStringAsync(JsonTextWriter this, String value, Boolean quote, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteEscapedStringStringBoolean">
            <summary>Legt die Shim von JsonTextWriter.WriteEscapedString(JsonTextWriter this, String value, Boolean quote) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteIndent">
            <summary>Legt die Shim von JsonTextWriter.WriteIndent(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteIndentAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIndentAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteIndentAsyncInt32Int32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIndentAsync(JsonTextWriter this, Int32 currentIndentCount, Int32 newLineLen, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteIndentSpace">
            <summary>Legt die Shim von JsonTextWriter.WriteIndentSpace(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteIndentSpaceAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIndentSpaceAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteIntegerValueAsyncInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValueAsync(JsonTextWriter this, Int64 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteIntegerValueAsyncTaskUInt64BooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValueAsync(JsonTextWriter this, Task task, UInt64 uvalue, Boolean negative, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteIntegerValueAsyncUInt64BooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValueAsync(JsonTextWriter this, UInt64 uvalue, Boolean negative, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteIntegerValueAsyncUInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValueAsync(JsonTextWriter this, UInt64 uvalue, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteIntegerValueInt64">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValue(JsonTextWriter this, Int64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteIntegerValueUInt64Boolean">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValue(JsonTextWriter this, UInt64 uvalue, Boolean negative) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteNull">
            <summary>Legt die Shim von JsonTextWriter.WriteNull(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteNullAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteNullAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteNumberToBufferUInt64Boolean">
            <summary>Legt die Shim von JsonTextWriter.WriteNumberToBuffer(JsonTextWriter this, UInt64 value, Boolean negative) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WritePropertyNameAsyncStringBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WritePropertyNameAsync(JsonTextWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WritePropertyNameAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WritePropertyNameAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WritePropertyNameString">
            <summary>Legt die Shim von JsonTextWriter.WritePropertyName(JsonTextWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WritePropertyNameStringBoolean">
            <summary>Legt die Shim von JsonTextWriter.WritePropertyName(JsonTextWriter this, String name, Boolean escape) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteRawAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteRawAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteRawString">
            <summary>Legt die Shim von JsonTextWriter.WriteRaw(JsonTextWriter this, String json) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteRawValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteRawValueAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteStartArray">
            <summary>Legt die Shim von JsonTextWriter.WriteStartArray(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteStartArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteStartArrayAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteStartConstructorAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteStartConstructorAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteStartConstructorString">
            <summary>Legt die Shim von JsonTextWriter.WriteStartConstructor(JsonTextWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteStartObject">
            <summary>Legt die Shim von JsonTextWriter.WriteStartObject(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteStartObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteStartObjectAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteUndefined">
            <summary>Legt die Shim von JsonTextWriter.WriteUndefined(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteUndefinedAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteUndefinedAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncBigIntegerCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, BigInteger value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Boolean value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncByteArrayCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Byte[] value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Byte value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncCharCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Char value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncDateTimeCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, DateTime value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, DateTimeOffset value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncDecimalCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Decimal value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncDoubleBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Double value, Boolean nullable, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncDoubleCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Double value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncGuidCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Guid value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Int16 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Int32 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Int64 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfCharCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfDateTimeCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfDecimalCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfDoubleCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfGuidCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfSByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfSingleCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfUInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfUInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncNullableOfUInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncObjectCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Object value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncSByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, SByte value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncSingleBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Single value, Boolean nullable, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncSingleCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Single value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, TimeSpan value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncUInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, UInt16 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncUInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, UInt32 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncUInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, UInt64 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueAsyncUriCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Uri value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueBoolean">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueByte">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Byte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueByteArray">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Byte[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueChar">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueDateTime">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, DateTime value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueDateTimeOffset">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, DateTimeOffset value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueDecimal">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Decimal value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueDelimiter">
            <summary>Legt die Shim von JsonTextWriter.WriteValueDelimiter(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueDelimiterAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueDelimiterAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueDouble">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Double value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueGuid">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Guid value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueInt16">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Int16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueInt32">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueInt64">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Int64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueInternalAsyncJsonTokenStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueInternalAsync(JsonTextWriter this, JsonToken token, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueInternalAsyncTaskStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueInternalAsync(JsonTextWriter this, Task task, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueInternalStringJsonToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueInternal(JsonTextWriter this, String value, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueNonNullAsyncByteArrayCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueNonNullAsync(JsonTextWriter this, Byte[] value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueNotNullAsyncTaskUriCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueNotNullAsync(JsonTextWriter this, Task task, Uri value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueNotNullAsyncUriCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueNotNullAsync(JsonTextWriter this, Uri value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueNullableOfDouble">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueNullableOfSingle">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueObject">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueSByte">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, SByte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueSingle">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Single value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueString">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueTimeSpan">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, TimeSpan value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueToBufferDateTime">
            <summary>Legt die Shim von JsonTextWriter.WriteValueToBuffer(JsonTextWriter this, DateTime value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueToBufferDateTimeOffset">
            <summary>Legt die Shim von JsonTextWriter.WriteValueToBuffer(JsonTextWriter this, DateTimeOffset value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueUInt16">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, UInt16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueUInt32">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, UInt32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueUInt64">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, UInt64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteValueUri">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Uri value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteWhitespaceAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteWhitespaceAsync(JsonTextWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.AllInstances.WriteWhitespaceString">
            <summary>Legt die Shim von JsonTextWriter.WriteWhitespace(JsonTextWriter this, String ws) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.ArrayPoolGet">
            <summary>Legt die Shim von JsonTextWriter.get_ArrayPool(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.ArrayPoolSetIArrayPoolOfChar">
            <summary>Legt die Shim von JsonTextWriter.set_ArrayPool(JsonTextWriter this, IArrayPool`1 value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonTextWriter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonTextWriter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonTextWriter.Bind(System.IDisposable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.Close">
            <summary>Legt die Shim von JsonTextWriter.Close(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.CloseAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.CloseAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.CloseBufferAndWriter">
            <summary>Legt die Shim von JsonTextWriter.CloseBufferAndWriter(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.ConstructorTextWriter">
            <summary>Legt die Shim von JsonTextWriter.JsonTextWriter(JsonTextWriter this, TextWriter textWriter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoCloseAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoCloseAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoFlushAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoFlushAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteCommentAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteCommentAsync(JsonTextWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteEndAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteEndAsync(JsonTextWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteIndentAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteIndentAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteIndentSpaceAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteIndentSpaceAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteNullAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteNullAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWritePropertyNameAsyncStringBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWritePropertyNameAsync(JsonTextWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWritePropertyNameAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWritePropertyNameAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWritePropertyNameAsyncTaskStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWritePropertyNameAsync(JsonTextWriter this, Task task, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteRawAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteRawAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteRawValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteRawValueAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteRawValueAsyncTaskStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteRawValueAsync(JsonTextWriter this, Task task, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteStartArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteStartArrayAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteStartArrayAsyncTaskCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteStartArrayAsync(JsonTextWriter this, Task task, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteStartConstructorAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteStartConstructorAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteStartObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteStartObjectAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteStartObjectAsyncTaskCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteStartObjectAsync(JsonTextWriter this, Task task, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteUndefinedAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteUndefinedAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteUndefinedAsyncTaskCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteUndefinedAsync(JsonTextWriter this, Task task, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Boolean value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncCharCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Char value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncDateTimeCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, DateTime value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, DateTimeOffset value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncDecimalCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Decimal value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncGuidCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Guid value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfCharCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfDateTimeCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfDecimalCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfGuidCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfSByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfUInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfUInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncNullableOfUInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncTaskStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, Task task, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueAsyncTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueAsync(JsonTextWriter this, TimeSpan value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteValueDelimiterAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteValueDelimiterAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.DoWriteWhitespaceAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.DoWriteWhitespaceAsync(JsonTextWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.EnsureWriteBuffer">
            <summary>Legt die Shim von JsonTextWriter.EnsureWriteBuffer(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.EnsureWriteBufferInt32Int32">
            <summary>Legt die Shim von JsonTextWriter.EnsureWriteBuffer(JsonTextWriter this, Int32 length, Int32 copyTo) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.Flush">
            <summary>Legt die Shim von JsonTextWriter.Flush(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.FlushAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.FlushAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.IndentCharGet">
            <summary>Legt die Shim von JsonTextWriter.get_IndentChar(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.IndentCharSetChar">
            <summary>Legt die Shim von JsonTextWriter.set_IndentChar(JsonTextWriter this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.IndentationGet">
            <summary>Legt die Shim von JsonTextWriter.get_Indentation(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.IndentationSetInt32">
            <summary>Legt die Shim von JsonTextWriter.set_Indentation(JsonTextWriter this, Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.OnStringEscapeHandlingChanged">
            <summary>Legt die Shim von JsonTextWriter.OnStringEscapeHandlingChanged(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.QuoteCharGet">
            <summary>Legt die Shim von JsonTextWriter.get_QuoteChar(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.QuoteCharSetChar">
            <summary>Legt die Shim von JsonTextWriter.set_QuoteChar(JsonTextWriter this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.QuoteNameGet">
            <summary>Legt die Shim von JsonTextWriter.get_QuoteName(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.QuoteNameSetBoolean">
            <summary>Legt die Shim von JsonTextWriter.set_QuoteName(JsonTextWriter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.SetIndentChars">
            <summary>Legt die Shim von JsonTextWriter.SetIndentChars(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.UpdateCharEscapeFlags">
            <summary>Legt die Shim von JsonTextWriter.UpdateCharEscapeFlags(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteCommentAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteCommentAsync(JsonTextWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteCommentString">
            <summary>Legt die Shim von JsonTextWriter.WriteComment(JsonTextWriter this, String text) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteDigitsAsyncUInt64BooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteDigitsAsync(JsonTextWriter this, UInt64 uvalue, Boolean negative, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteEndArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEndArrayAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteEndAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEndAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteEndAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEndAsync(JsonTextWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteEndConstructorAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEndConstructorAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteEndJsonToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEnd(JsonTextWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteEndObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEndObjectAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteEscapedStringAsyncStringBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteEscapedStringAsync(JsonTextWriter this, String value, Boolean quote, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteEscapedStringStringBoolean">
            <summary>Legt die Shim von JsonTextWriter.WriteEscapedString(JsonTextWriter this, String value, Boolean quote) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteIndent">
            <summary>Legt die Shim von JsonTextWriter.WriteIndent(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteIndentAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIndentAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteIndentAsyncInt32Int32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIndentAsync(JsonTextWriter this, Int32 currentIndentCount, Int32 newLineLen, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteIndentSpace">
            <summary>Legt die Shim von JsonTextWriter.WriteIndentSpace(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteIndentSpaceAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIndentSpaceAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteIntegerValueAsyncInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValueAsync(JsonTextWriter this, Int64 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteIntegerValueAsyncTaskUInt64BooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValueAsync(JsonTextWriter this, Task task, UInt64 uvalue, Boolean negative, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteIntegerValueAsyncUInt64BooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValueAsync(JsonTextWriter this, UInt64 uvalue, Boolean negative, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteIntegerValueAsyncUInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValueAsync(JsonTextWriter this, UInt64 uvalue, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteIntegerValueInt64">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValue(JsonTextWriter this, Int64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteIntegerValueUInt64Boolean">
            <summary>Legt die Shim von JsonTextWriter.WriteIntegerValue(JsonTextWriter this, UInt64 uvalue, Boolean negative) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteNull">
            <summary>Legt die Shim von JsonTextWriter.WriteNull(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteNullAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteNullAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteNumberToBufferUInt64Boolean">
            <summary>Legt die Shim von JsonTextWriter.WriteNumberToBuffer(JsonTextWriter this, UInt64 value, Boolean negative) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WritePropertyNameAsyncStringBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WritePropertyNameAsync(JsonTextWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WritePropertyNameAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WritePropertyNameAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WritePropertyNameString">
            <summary>Legt die Shim von JsonTextWriter.WritePropertyName(JsonTextWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WritePropertyNameStringBoolean">
            <summary>Legt die Shim von JsonTextWriter.WritePropertyName(JsonTextWriter this, String name, Boolean escape) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteRawAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteRawAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteRawString">
            <summary>Legt die Shim von JsonTextWriter.WriteRaw(JsonTextWriter this, String json) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteRawValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteRawValueAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteStartArray">
            <summary>Legt die Shim von JsonTextWriter.WriteStartArray(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteStartArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteStartArrayAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteStartConstructorAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteStartConstructorAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteStartConstructorString">
            <summary>Legt die Shim von JsonTextWriter.WriteStartConstructor(JsonTextWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteStartObject">
            <summary>Legt die Shim von JsonTextWriter.WriteStartObject(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteStartObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteStartObjectAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteUndefined">
            <summary>Legt die Shim von JsonTextWriter.WriteUndefined(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteUndefinedAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteUndefinedAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncBigIntegerCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, BigInteger value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Boolean value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncByteArrayCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Byte[] value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Byte value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncCharCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Char value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncDateTimeCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, DateTime value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, DateTimeOffset value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncDecimalCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Decimal value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncDoubleBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Double value, Boolean nullable, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncDoubleCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Double value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncGuidCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Guid value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Int16 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Int32 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Int64 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfCharCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfDateTimeCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfDecimalCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfDoubleCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfGuidCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfSByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfSingleCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfUInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfUInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncNullableOfUInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncObjectCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Object value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncSByteCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, SByte value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncSingleBooleanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Single value, Boolean nullable, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncSingleCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Single value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, TimeSpan value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncUInt16CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, UInt16 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncUInt32CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, UInt32 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncUInt64CancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, UInt64 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueAsyncUriCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueAsync(JsonTextWriter this, Uri value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueBoolean">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueByte">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Byte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueByteArray">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Byte[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueChar">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueDateTime">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, DateTime value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueDateTimeOffset">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, DateTimeOffset value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueDecimal">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Decimal value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueDelimiter">
            <summary>Legt die Shim von JsonTextWriter.WriteValueDelimiter(JsonTextWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueDelimiterAsyncCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueDelimiterAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueDouble">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Double value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueGuid">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Guid value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueInt16">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Int16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueInt32">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueInt64">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Int64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueInternalAsyncJsonTokenStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueInternalAsync(JsonTextWriter this, JsonToken token, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueInternalAsyncTaskStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueInternalAsync(JsonTextWriter this, Task task, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueInternalStringJsonToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueInternal(JsonTextWriter this, String value, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueNonNullAsyncByteArrayCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueNonNullAsync(JsonTextWriter this, Byte[] value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueNotNullAsyncTaskUriCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueNotNullAsync(JsonTextWriter this, Task task, Uri value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueNotNullAsyncUriCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteValueNotNullAsync(JsonTextWriter this, Uri value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueNullableOfDouble">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueNullableOfSingle">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueObject">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueSByte">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, SByte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueSingle">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Single value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueString">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueTimeSpan">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, TimeSpan value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueToBufferDateTime">
            <summary>Legt die Shim von JsonTextWriter.WriteValueToBuffer(JsonTextWriter this, DateTime value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueToBufferDateTimeOffset">
            <summary>Legt die Shim von JsonTextWriter.WriteValueToBuffer(JsonTextWriter this, DateTimeOffset value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueUInt16">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, UInt16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueUInt32">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, UInt32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueUInt64">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, UInt64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteValueUri">
            <summary>Legt die Shim von JsonTextWriter.WriteValue(JsonTextWriter this, Uri value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteWhitespaceAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonTextWriter.WriteWhitespaceAsync(JsonTextWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonTextWriter.WriteWhitespaceString">
            <summary>Legt die Shim von JsonTextWriter.WriteWhitespace(JsonTextWriter this, String ws) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonWriter">
            <summary>Shim-Typ von Newtonsoft.Json.JsonWriter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonWriter.#ctor(Newtonsoft.Json.JsonWriter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.AutoCompleteAll">
            <summary>Legt die Shim von JsonWriter.AutoCompleteAll(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.AutoCompleteAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.AutoCompleteAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.AutoCompleteAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonWriter.AutoCompleteAsync(JsonWriter this, JsonToken tokenBeingWritten, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.AutoCompleteJsonToken">
            <summary>Legt die Shim von JsonWriter.AutoComplete(JsonWriter this, JsonToken tokenBeingWritten) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.AutoCompleteOnCloseGet">
            <summary>Legt die Shim von JsonWriter.get_AutoCompleteOnClose(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.AutoCompleteOnCloseSetBoolean">
            <summary>Legt die Shim von JsonWriter.set_AutoCompleteOnClose(JsonWriter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.CalculateWriteTokenFinalDepthJsonReader">
            <summary>Legt die Shim von JsonWriter.CalculateWriteTokenFinalDepth(JsonWriter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.CalculateWriteTokenInitialDepthJsonReader">
            <summary>Legt die Shim von JsonWriter.CalculateWriteTokenInitialDepth(JsonWriter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.Close">
            <summary>Legt die Shim von JsonWriter.Close(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.CloseAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.CloseAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.CloseOutputGet">
            <summary>Legt die Shim von JsonWriter.get_CloseOutput(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.CloseOutputSetBoolean">
            <summary>Legt die Shim von JsonWriter.set_CloseOutput(JsonWriter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.ContainerPathGet">
            <summary>Legt die Shim von JsonWriter.get_ContainerPath(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.CultureGet">
            <summary>Legt die Shim von JsonWriter.get_Culture(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.CultureSetCultureInfo">
            <summary>Legt die Shim von JsonWriter.set_Culture(JsonWriter this, CultureInfo value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.DateFormatHandlingGet">
            <summary>Legt die Shim von JsonWriter.get_DateFormatHandling(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.DateFormatHandlingSetDateFormatHandling">
            <summary>Legt die Shim von JsonWriter.set_DateFormatHandling(JsonWriter this, DateFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.DateFormatStringGet">
            <summary>Legt die Shim von JsonWriter.get_DateFormatString(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.DateFormatStringSetString">
            <summary>Legt die Shim von JsonWriter.set_DateFormatString(JsonWriter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.DateTimeZoneHandlingGet">
            <summary>Legt die Shim von JsonWriter.get_DateTimeZoneHandling(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.DateTimeZoneHandlingSetDateTimeZoneHandling">
            <summary>Legt die Shim von JsonWriter.set_DateTimeZoneHandling(JsonWriter this, DateTimeZoneHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.DisposeBoolean">
            <summary>Legt die Shim von JsonWriter.Dispose(JsonWriter this, Boolean disposing) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.FloatFormatHandlingGet">
            <summary>Legt die Shim von JsonWriter.get_FloatFormatHandling(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.FloatFormatHandlingSetFloatFormatHandling">
            <summary>Legt die Shim von JsonWriter.set_FloatFormatHandling(JsonWriter this, FloatFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.FlushAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.FlushAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.FormattingGet">
            <summary>Legt die Shim von JsonWriter.get_Formatting(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.FormattingSetFormatting">
            <summary>Legt die Shim von JsonWriter.set_Formatting(JsonWriter this, Formatting value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.InternalWriteComment">
            <summary>Legt die Shim von JsonWriter.InternalWriteComment(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.InternalWriteCommentAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.InternalWriteCommentAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.InternalWritePropertyNameAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.InternalWritePropertyNameAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.InternalWritePropertyNameString">
            <summary>Legt die Shim von JsonWriter.InternalWritePropertyName(JsonWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.InternalWriteRaw">
            <summary>Legt die Shim von JsonWriter.InternalWriteRaw(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.InternalWriteValueAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonWriter.InternalWriteValueAsync(JsonWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.InternalWriteValueJsonToken">
            <summary>Legt die Shim von JsonWriter.InternalWriteValue(JsonWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.InternalWriteWhitespaceString">
            <summary>Legt die Shim von JsonWriter.InternalWriteWhitespace(JsonWriter this, String ws) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.OnStringEscapeHandlingChanged">
            <summary>Legt die Shim von JsonWriter.OnStringEscapeHandlingChanged(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.PathGet">
            <summary>Legt die Shim von JsonWriter.get_Path(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.SetWriteStateAsyncJsonTokenObjectCancellationToken">
            <summary>Legt die Shim von JsonWriter.SetWriteStateAsync(JsonWriter this, JsonToken token, Object value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.SetWriteStateJsonTokenObject">
            <summary>Legt die Shim von JsonWriter.SetWriteState(JsonWriter this, JsonToken token, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.StringEscapeHandlingGet">
            <summary>Legt die Shim von JsonWriter.get_StringEscapeHandling(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.StringEscapeHandlingSetStringEscapeHandling">
            <summary>Legt die Shim von JsonWriter.set_StringEscapeHandling(JsonWriter this, StringEscapeHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.SystemIDisposableDispose">
            <summary>Legt die Shim von JsonWriter.System.IDisposable.Dispose(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.TopGet">
            <summary>Legt die Shim von JsonWriter.get_Top(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.UpdateCurrentState">
            <summary>Legt die Shim von JsonWriter.UpdateCurrentState(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.UpdateScopeWithFinishedValue">
            <summary>Legt die Shim von JsonWriter.UpdateScopeWithFinishedValue(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteCommentAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteCommentAsync(JsonWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteCommentString">
            <summary>Legt die Shim von JsonWriter.WriteComment(JsonWriter this, String text) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteConstructorDateAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteConstructorDateAsync(JsonWriter this, JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteConstructorDateJsonReader">
            <summary>Legt die Shim von JsonWriter.WriteConstructorDate(JsonWriter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteEnd">
            <summary>Legt die Shim von JsonWriter.WriteEnd(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteEndArray">
            <summary>Legt die Shim von JsonWriter.WriteEndArray(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteEndArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteEndAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteEndAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndAsync(JsonWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteEndConstructor">
            <summary>Legt die Shim von JsonWriter.WriteEndConstructor(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteEndConstructorAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndConstructorAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteEndInternalAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndInternalAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteEndJsonToken">
            <summary>Legt die Shim von JsonWriter.WriteEnd(JsonWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteEndObject">
            <summary>Legt die Shim von JsonWriter.WriteEndObject(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteEndObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteIndent">
            <summary>Legt die Shim von JsonWriter.WriteIndent(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteIndentAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteIndentAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteIndentSpace">
            <summary>Legt die Shim von JsonWriter.WriteIndentSpace(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteIndentSpaceAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteIndentSpaceAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteNull">
            <summary>Legt die Shim von JsonWriter.WriteNull(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteNullAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteNullAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WritePropertyNameAsyncStringBooleanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WritePropertyNameAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WritePropertyNameString">
            <summary>Legt die Shim von JsonWriter.WritePropertyName(JsonWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WritePropertyNameStringBoolean">
            <summary>Legt die Shim von JsonWriter.WritePropertyName(JsonWriter this, String name, Boolean escape) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteRawAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteRawAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteRawString">
            <summary>Legt die Shim von JsonWriter.WriteRaw(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteRawValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteRawValueAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteRawValueString">
            <summary>Legt die Shim von JsonWriter.WriteRawValue(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteStartArray">
            <summary>Legt die Shim von JsonWriter.WriteStartArray(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteStartArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteStartArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteStartConstructorAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteStartConstructorAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteStartConstructorString">
            <summary>Legt die Shim von JsonWriter.WriteStartConstructor(JsonWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteStartObject">
            <summary>Legt die Shim von JsonWriter.WriteStartObject(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteStartObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteStartObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteStateGet">
            <summary>Legt die Shim von JsonWriter.get_WriteState(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteTokenAsyncJsonReaderBooleanBooleanBooleanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenAsync(JsonWriter this, JsonReader reader, Boolean writeChildren, Boolean writeDateConstructorAsDate, Boolean writeComments, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteTokenAsyncJsonReaderBooleanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenAsync(JsonWriter this, JsonReader reader, Boolean writeChildren, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteTokenAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenAsync(JsonWriter this, JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteTokenAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenAsync(JsonWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteTokenAsyncJsonTokenObjectCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenAsync(JsonWriter this, JsonToken token, Object value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteTokenJsonReader">
            <summary>Legt die Shim von JsonWriter.WriteToken(JsonWriter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteTokenJsonReaderBoolean">
            <summary>Legt die Shim von JsonWriter.WriteToken(JsonWriter this, JsonReader reader, Boolean writeChildren) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteTokenJsonReaderBooleanBooleanBoolean">
            <summary>Legt die Shim von JsonWriter.WriteToken(JsonWriter this, JsonReader reader, Boolean writeChildren, Boolean writeDateConstructorAsDate, Boolean writeComments) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteTokenJsonToken">
            <summary>Legt die Shim von JsonWriter.WriteToken(JsonWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteTokenJsonTokenObject">
            <summary>Legt die Shim von JsonWriter.WriteToken(JsonWriter this, JsonToken token, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteTokenSyncReadingAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenSyncReadingAsync(JsonWriter this, JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteUndefined">
            <summary>Legt die Shim von JsonWriter.WriteUndefined(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteUndefinedAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteUndefinedAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Boolean value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncByteArrayCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Byte[] value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncByteCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Byte value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncCharCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Char value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncDateTimeCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, DateTime value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, DateTimeOffset value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncDecimalCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Decimal value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncDoubleCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Double value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncGuidCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Guid value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncInt16CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Int16 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncInt32CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Int32 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncInt64CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Int64 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfBooleanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfByteCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfCharCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfDateTimeCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfDecimalCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfDoubleCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfGuidCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfInt16CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfInt32CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfInt64CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfSByteCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfSingleCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfUInt16CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfUInt32CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncNullableOfUInt64CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncObjectCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Object value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncSByteCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, SByte value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncSingleCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Single value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, TimeSpan value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncUInt16CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, UInt16 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncUInt32CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, UInt32 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncUInt64CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, UInt64 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueAsyncUriCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Uri value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueBoolean">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueByte">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Byte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueByteArray">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Byte[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueChar">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueDateTime">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, DateTime value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueDateTimeOffset">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, DateTimeOffset value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueDecimal">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Decimal value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueDelimiter">
            <summary>Legt die Shim von JsonWriter.WriteValueDelimiter(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueDelimiterAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueDelimiterAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueDouble">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Double value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueGuid">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Guid value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueInt16">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Int16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueInt32">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueInt64">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Int64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfBoolean">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfByte">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfChar">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfDateTime">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfDateTimeOffset">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfDecimal">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfDouble">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfGuid">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfInt16">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfInt32">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfInt64">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfSByte">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfSingle">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfTimeSpan">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfUInt16">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfUInt32">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueNullableOfUInt64">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueObject">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueSByte">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, SByte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueSingle">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Single value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueString">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueTimeSpan">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, TimeSpan value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueUInt16">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, UInt16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueUInt32">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, UInt32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueUInt64">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, UInt64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteValueUri">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Uri value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteWhitespaceAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteWhitespaceAsync(JsonWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AllInstances.WriteWhitespaceString">
            <summary>Legt die Shim von JsonWriter.WriteWhitespace(JsonWriter this, String ws) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AutoCompleteAll">
            <summary>Legt die Shim von JsonWriter.AutoCompleteAll(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AutoCompleteAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.AutoCompleteAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AutoCompleteAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonWriter.AutoCompleteAsync(JsonWriter this, JsonToken tokenBeingWritten, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AutoCompleteJsonToken">
            <summary>Legt die Shim von JsonWriter.AutoComplete(JsonWriter this, JsonToken tokenBeingWritten) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AutoCompleteOnCloseGet">
            <summary>Legt die Shim von JsonWriter.get_AutoCompleteOnClose(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.AutoCompleteOnCloseSetBoolean">
            <summary>Legt die Shim von JsonWriter.set_AutoCompleteOnClose(JsonWriter this, Boolean value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonWriter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonWriter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonWriter.Bind(System.IDisposable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.CalculateWriteTokenFinalDepthJsonReader">
            <summary>Legt die Shim von JsonWriter.CalculateWriteTokenFinalDepth(JsonWriter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.CalculateWriteTokenInitialDepthJsonReader">
            <summary>Legt die Shim von JsonWriter.CalculateWriteTokenInitialDepth(JsonWriter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.Close">
            <summary>Legt die Shim von JsonWriter.Close(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.CloseAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.CloseAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.CloseOutputGet">
            <summary>Legt die Shim von JsonWriter.get_CloseOutput(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.CloseOutputSetBoolean">
            <summary>Legt die Shim von JsonWriter.set_CloseOutput(JsonWriter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.Constructor">
            <summary>Legt die Shim von JsonWriter.JsonWriter(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.ContainerPathGet">
            <summary>Legt die Shim von JsonWriter.get_ContainerPath(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.CreateUnsupportedTypeExceptionJsonWriterObject">
            <summary>Legt die Shim von JsonWriter.CreateUnsupportedTypeException(JsonWriter writer, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.CultureGet">
            <summary>Legt die Shim von JsonWriter.get_Culture(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.CultureSetCultureInfo">
            <summary>Legt die Shim von JsonWriter.set_Culture(JsonWriter this, CultureInfo value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.DateFormatHandlingGet">
            <summary>Legt die Shim von JsonWriter.get_DateFormatHandling(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.DateFormatHandlingSetDateFormatHandling">
            <summary>Legt die Shim von JsonWriter.set_DateFormatHandling(JsonWriter this, DateFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.DateFormatStringGet">
            <summary>Legt die Shim von JsonWriter.get_DateFormatString(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.DateFormatStringSetString">
            <summary>Legt die Shim von JsonWriter.set_DateFormatString(JsonWriter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.DateTimeZoneHandlingGet">
            <summary>Legt die Shim von JsonWriter.get_DateTimeZoneHandling(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.DateTimeZoneHandlingSetDateTimeZoneHandling">
            <summary>Legt die Shim von JsonWriter.set_DateTimeZoneHandling(JsonWriter this, DateTimeZoneHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.DisposeBoolean">
            <summary>Legt die Shim von JsonWriter.Dispose(JsonWriter this, Boolean disposing) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.FloatFormatHandlingGet">
            <summary>Legt die Shim von JsonWriter.get_FloatFormatHandling(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.FloatFormatHandlingSetFloatFormatHandling">
            <summary>Legt die Shim von JsonWriter.set_FloatFormatHandling(JsonWriter this, FloatFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.FlushAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.FlushAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.FormattingGet">
            <summary>Legt die Shim von JsonWriter.get_Formatting(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.FormattingSetFormatting">
            <summary>Legt die Shim von JsonWriter.set_Formatting(JsonWriter this, Formatting value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.InternalWriteComment">
            <summary>Legt die Shim von JsonWriter.InternalWriteComment(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.InternalWriteCommentAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.InternalWriteCommentAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.InternalWritePropertyNameAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.InternalWritePropertyNameAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.InternalWritePropertyNameString">
            <summary>Legt die Shim von JsonWriter.InternalWritePropertyName(JsonWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.InternalWriteRaw">
            <summary>Legt die Shim von JsonWriter.InternalWriteRaw(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.InternalWriteValueAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonWriter.InternalWriteValueAsync(JsonWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.InternalWriteValueJsonToken">
            <summary>Legt die Shim von JsonWriter.InternalWriteValue(JsonWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.InternalWriteWhitespaceString">
            <summary>Legt die Shim von JsonWriter.InternalWriteWhitespace(JsonWriter this, String ws) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.OnStringEscapeHandlingChanged">
            <summary>Legt die Shim von JsonWriter.OnStringEscapeHandlingChanged(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.PathGet">
            <summary>Legt die Shim von JsonWriter.get_Path(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.SetWriteStateAsyncJsonTokenObjectCancellationToken">
            <summary>Legt die Shim von JsonWriter.SetWriteStateAsync(JsonWriter this, JsonToken token, Object value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.SetWriteStateJsonTokenObject">
            <summary>Legt die Shim von JsonWriter.SetWriteState(JsonWriter this, JsonToken token, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.StaticConstructor">
            <summary>Legt die Shim von JsonWriter.JsonWriter() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.StringEscapeHandlingGet">
            <summary>Legt die Shim von JsonWriter.get_StringEscapeHandling(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.StringEscapeHandlingSetStringEscapeHandling">
            <summary>Legt die Shim von JsonWriter.set_StringEscapeHandling(JsonWriter this, StringEscapeHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.SystemIDisposableDispose">
            <summary>Legt die Shim von JsonWriter.System.IDisposable.Dispose(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.TopGet">
            <summary>Legt die Shim von JsonWriter.get_Top(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.UpdateCurrentState">
            <summary>Legt die Shim von JsonWriter.UpdateCurrentState(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.UpdateScopeWithFinishedValue">
            <summary>Legt die Shim von JsonWriter.UpdateScopeWithFinishedValue(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteCommentAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteCommentAsync(JsonWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteCommentString">
            <summary>Legt die Shim von JsonWriter.WriteComment(JsonWriter this, String text) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteConstructorDateAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteConstructorDateAsync(JsonWriter this, JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteConstructorDateJsonReader">
            <summary>Legt die Shim von JsonWriter.WriteConstructorDate(JsonWriter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteEnd">
            <summary>Legt die Shim von JsonWriter.WriteEnd(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteEndArray">
            <summary>Legt die Shim von JsonWriter.WriteEndArray(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteEndArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteEndAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteEndAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndAsync(JsonWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteEndConstructor">
            <summary>Legt die Shim von JsonWriter.WriteEndConstructor(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteEndConstructorAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndConstructorAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteEndInternalAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndInternalAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteEndJsonToken">
            <summary>Legt die Shim von JsonWriter.WriteEnd(JsonWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteEndObject">
            <summary>Legt die Shim von JsonWriter.WriteEndObject(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteEndObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteEndObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteIndent">
            <summary>Legt die Shim von JsonWriter.WriteIndent(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteIndentAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteIndentAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteIndentSpace">
            <summary>Legt die Shim von JsonWriter.WriteIndentSpace(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteIndentSpaceAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteIndentSpaceAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteNull">
            <summary>Legt die Shim von JsonWriter.WriteNull(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteNullAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteNullAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WritePropertyNameAsyncStringBooleanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WritePropertyNameAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WritePropertyNameString">
            <summary>Legt die Shim von JsonWriter.WritePropertyName(JsonWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WritePropertyNameStringBoolean">
            <summary>Legt die Shim von JsonWriter.WritePropertyName(JsonWriter this, String name, Boolean escape) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteRawAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteRawAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteRawString">
            <summary>Legt die Shim von JsonWriter.WriteRaw(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteRawValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteRawValueAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteRawValueString">
            <summary>Legt die Shim von JsonWriter.WriteRawValue(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteStartArray">
            <summary>Legt die Shim von JsonWriter.WriteStartArray(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteStartArrayAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteStartArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteStartConstructorAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteStartConstructorAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteStartConstructorString">
            <summary>Legt die Shim von JsonWriter.WriteStartConstructor(JsonWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteStartObject">
            <summary>Legt die Shim von JsonWriter.WriteStartObject(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteStartObjectAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteStartObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteStateGet">
            <summary>Legt die Shim von JsonWriter.get_WriteState(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteTokenAsyncJsonReaderBooleanBooleanBooleanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenAsync(JsonWriter this, JsonReader reader, Boolean writeChildren, Boolean writeDateConstructorAsDate, Boolean writeComments, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteTokenAsyncJsonReaderBooleanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenAsync(JsonWriter this, JsonReader reader, Boolean writeChildren, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteTokenAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenAsync(JsonWriter this, JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteTokenAsyncJsonTokenCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenAsync(JsonWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteTokenAsyncJsonTokenObjectCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenAsync(JsonWriter this, JsonToken token, Object value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteTokenJsonReader">
            <summary>Legt die Shim von JsonWriter.WriteToken(JsonWriter this, JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteTokenJsonReaderBoolean">
            <summary>Legt die Shim von JsonWriter.WriteToken(JsonWriter this, JsonReader reader, Boolean writeChildren) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteTokenJsonReaderBooleanBooleanBoolean">
            <summary>Legt die Shim von JsonWriter.WriteToken(JsonWriter this, JsonReader reader, Boolean writeChildren, Boolean writeDateConstructorAsDate, Boolean writeComments) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteTokenJsonToken">
            <summary>Legt die Shim von JsonWriter.WriteToken(JsonWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteTokenJsonTokenObject">
            <summary>Legt die Shim von JsonWriter.WriteToken(JsonWriter this, JsonToken token, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteTokenSyncReadingAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteTokenSyncReadingAsync(JsonWriter this, JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteUndefined">
            <summary>Legt die Shim von JsonWriter.WriteUndefined(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteUndefinedAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteUndefinedAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncBooleanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Boolean value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncByteArrayCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Byte[] value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncByteCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Byte value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncCharCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Char value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncDateTimeCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, DateTime value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, DateTimeOffset value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncDecimalCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Decimal value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncDoubleCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Double value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncGuidCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Guid value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncInt16CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Int16 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncInt32CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Int32 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncInt64CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Int64 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfBooleanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfByteCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfCharCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfDateTimeCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfDateTimeOffsetCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfDecimalCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfDoubleCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfGuidCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfInt16CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfInt32CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfInt64CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfSByteCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfSingleCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfUInt16CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfUInt32CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncNullableOfUInt64CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Nullable`1 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncObjectCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Object value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncSByteCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, SByte value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncSingleCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Single value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, String value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncTimeSpanCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, TimeSpan value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncUInt16CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, UInt16 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncUInt32CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, UInt32 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncUInt64CancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, UInt64 value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueAsyncUriCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueAsync(JsonWriter this, Uri value, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueBoolean">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueByte">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Byte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueByteArray">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Byte[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueChar">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueDateTime">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, DateTime value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueDateTimeOffset">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, DateTimeOffset value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueDecimal">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Decimal value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueDelimiter">
            <summary>Legt die Shim von JsonWriter.WriteValueDelimiter(JsonWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueDelimiterAsyncCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteValueDelimiterAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueDouble">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Double value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueGuid">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Guid value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueInt16">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Int16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueInt32">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueInt64">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Int64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfBoolean">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfByte">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfChar">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfDateTime">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfDateTimeOffset">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfDecimal">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfDouble">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfGuid">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfInt16">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfInt32">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfInt64">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfSByte">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfSingle">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfTimeSpan">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfUInt16">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfUInt32">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueNullableOfUInt64">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueObject">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueSByte">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, SByte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueSingle">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Single value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueString">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueTimeSpan">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, TimeSpan value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueUInt16">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, UInt16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueUInt32">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, UInt32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueUInt64">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, UInt64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteValueUri">
            <summary>Legt die Shim von JsonWriter.WriteValue(JsonWriter this, Uri value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteWhitespaceAsyncStringCancellationToken">
            <summary>Legt die Shim von JsonWriter.WriteWhitespaceAsync(JsonWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriter.WriteWhitespaceString">
            <summary>Legt die Shim von JsonWriter.WriteWhitespace(JsonWriter this, String ws) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonWriterException">
            <summary>Shim-Typ von Newtonsoft.Json.JsonWriterException</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonWriterException.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonWriterException.#ctor(Newtonsoft.Json.JsonWriterException)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.ShimJsonWriterException.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriterException.AllInstances.PathGet">
            <summary>Legt die Shim von JsonWriterException.get_Path(JsonWriterException this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonWriterException.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonWriterException.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriterException.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.ShimJsonWriterException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriterException.Constructor">
            <summary>Legt die Shim von JsonWriterException.JsonWriterException(JsonWriterException this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriterException.ConstructorSerializationInfoStreamingContext">
            <summary>Legt die Shim von JsonWriterException.JsonWriterException(JsonWriterException this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriterException.ConstructorString">
            <summary>Legt die Shim von JsonWriterException.JsonWriterException(JsonWriterException this, String message) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriterException.ConstructorStringException">
            <summary>Legt die Shim von JsonWriterException.JsonWriterException(JsonWriterException this, String message, Exception innerException) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriterException.ConstructorStringStringException">
            <summary>Legt die Shim von JsonWriterException.JsonWriterException(JsonWriterException this, String message, String path, Exception innerException) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriterException.CreateJsonWriterStringException">
            <summary>Legt die Shim von JsonWriterException.Create(JsonWriter writer, String message, Exception ex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriterException.CreateStringStringException">
            <summary>Legt die Shim von JsonWriterException.Create(String path, String message, Exception ex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.ShimJsonWriterException.PathGet">
            <summary>Legt die Shim von JsonWriterException.get_Path(JsonWriterException this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubIArrayPool`1">
            <summary>Stub-Typ von Newtonsoft.Json.IArrayPool&lt;T&gt;</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubIArrayPool`1.#ctor">
            <summary>Initialisiert eine neue Instanz von type StubIArrayPool.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubIArrayPool`1.Newtonsoft#Json#IArrayPool{T}#Rent(System.Int32)">
            <summary>Legt die Stub von IArrayPool`1.Rent(IArrayPool`1 this, Int32 minimumLength) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubIArrayPool`1.Newtonsoft#Json#IArrayPool{T}#Return(`0[])">
            <summary>Legt die Stub von IArrayPool`1.Return(IArrayPool`1 this, !0[] array) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubIArrayPool`1.RentInt32">
            <summary>Legt die stub von IArrayPool`1.Rent(IArrayPool`1 this, Int32 minimumLength) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubIArrayPool`1.ReturnT0Array">
            <summary>Legt die stub von IArrayPool`1.Return(IArrayPool`1 this, !0[] array) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubIJsonLineInfo">
            <summary>Stub-Typ von Newtonsoft.Json.IJsonLineInfo</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubIJsonLineInfo.#ctor">
            <summary>Initialisiert eine neue Instanz von type StubIJsonLineInfo.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubIJsonLineInfo.HasLineInfo">
            <summary>Legt die stub von IJsonLineInfo.HasLineInfo(IJsonLineInfo this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubIJsonLineInfo.Newtonsoft#Json#IJsonLineInfo#LineNumber">
            <summary>Legt die stub von IJsonLineInfo.get_LineNumber(IJsonLineInfo this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubIJsonLineInfo.LineNumberGet">
            <summary>Legt die stub von IJsonLineInfo.get_LineNumber(IJsonLineInfo this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubIJsonLineInfo.Newtonsoft#Json#IJsonLineInfo#LinePosition">
            <summary>Legt die stub von IJsonLineInfo.get_LinePosition(IJsonLineInfo this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubIJsonLineInfo.LinePositionGet">
            <summary>Legt die stub von IJsonLineInfo.get_LinePosition(IJsonLineInfo this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubIJsonLineInfo.Newtonsoft#Json#IJsonLineInfo#HasLineInfo">
            <summary>Legt die Stub von IJsonLineInfo.HasLineInfo(IJsonLineInfo this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonContainerAttribute">
            <summary>Stub-Typ von Newtonsoft.Json.JsonContainerAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.Equals(System.Object)">
            <summary>Legt die Stub von Attribute.Equals(Attribute this, Object obj) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.EqualsObject">
            <summary>Legt die stub von Attribute.Equals(Attribute this, Object obj) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.GetHashCode">
            <summary>Legt die Stub von Attribute.GetHashCode(Attribute this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.GetHashCode01">
            <summary>Legt die stub von Attribute.GetHashCode(Attribute this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonContainerAttribute.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.IsDefaultAttribute">
            <summary>Legt die Stub von Attribute.IsDefaultAttribute(Attribute this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.IsDefaultAttribute01">
            <summary>Legt die stub von Attribute.IsDefaultAttribute(Attribute this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.Match(System.Object)">
            <summary>Legt die Stub von Attribute.Match(Attribute this, Object obj) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.MatchObject">
            <summary>Legt die stub von Attribute.Match(Attribute this, Object obj) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.TypeId">
            <summary>Legt die stub von Attribute.get_TypeId(Attribute this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonContainerAttribute.TypeIdGet">
            <summary>Legt die stub von Attribute.get_TypeId(Attribute this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonConverter">
            <summary>Stub-Typ von Newtonsoft.Json.JsonConverter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonConverter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonConverter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonConverter.CanConvert(System.Type)">
            <summary>Legt die Stub von JsonConverter.CanConvert(JsonConverter this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonConverter.CanConvertType">
            <summary>Legt die stub von JsonConverter.CanConvert(JsonConverter this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonConverter.CanRead">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonConverter.CanReadGet">
            <summary>Legt die stub von JsonConverter.get_CanRead(JsonConverter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonConverter.CanWrite">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonConverter.CanWriteGet">
            <summary>Legt die stub von JsonConverter.get_CanWrite(JsonConverter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonConverter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonConverter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonConverter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonConverter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von JsonConverter.ReadJson(JsonConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonConverter.ReadJsonJsonReaderTypeObjectJsonSerializer">
            <summary>Legt die stub von JsonConverter.ReadJson(JsonConverter this, JsonReader reader, Type objectType, Object existingValue, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Legt die Stub von JsonConverter.WriteJson(JsonConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonConverter.WriteJsonJsonWriterObjectJsonSerializer">
            <summary>Legt die stub von JsonConverter.WriteJson(JsonConverter this, JsonWriter writer, Object value, JsonSerializer serializer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonConverterCollection">
            <summary>Stub-Typ von Newtonsoft.Json.JsonConverterCollection</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonConverterCollection.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonConverterCollection.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonConverterCollection.ClearItems">
            <summary>Legt die Stub von Collection`1.ClearItems(Collection`1 this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonConverterCollection.ClearItems01">
            <summary>Legt die stub von Collection`1.ClearItems(Collection`1 this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonConverterCollection.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonConverterCollection.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonConverterCollection.InsertItem(System.Int32,Newtonsoft.Json.JsonConverter)">
            <summary>Legt die Stub von Collection`1.InsertItem(Collection`1 this, Int32 index, JsonConverter item) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonConverterCollection.InsertItemInt32JsonConverter">
            <summary>Legt die stub von Collection`1.InsertItem(Collection`1 this, Int32 index, JsonConverter item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonConverterCollection.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonConverterCollection.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonConverterCollection.RemoveItem(System.Int32)">
            <summary>Legt die Stub von Collection`1.RemoveItem(Collection`1 this, Int32 index) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonConverterCollection.RemoveItemInt32">
            <summary>Legt die stub von Collection`1.RemoveItem(Collection`1 this, Int32 index) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonConverterCollection.SetItem(System.Int32,Newtonsoft.Json.JsonConverter)">
            <summary>Legt die Stub von Collection`1.SetItem(Collection`1 this, Int32 index, JsonConverter item) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonConverterCollection.SetItemInt32JsonConverter">
            <summary>Legt die stub von Collection`1.SetItem(Collection`1 this, Int32 index, JsonConverter item) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonException">
            <summary>Stub-Typ von Newtonsoft.Json.JsonException</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonException.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonException.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonException.#ctor(System.String,System.Exception)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonException.AttachBackingFieldToHelpLink">
            <summary>Fügt Delegate an, um StubJsonException.HelpLink als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonException.AttachBackingFieldToSource">
            <summary>Fügt Delegate an, um StubJsonException.Source als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonException.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonException.Data">
            <summary>Legt die stub von Exception.get_Data(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonException.DataGet">
            <summary>Legt die stub von Exception.get_Data(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonException.GetBaseException">
            <summary>Legt die Stub von Exception.GetBaseException(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonException.GetBaseException01">
            <summary>Legt die stub von Exception.GetBaseException(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Legt die Stub von Exception.GetObjectData(Exception this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Legt die stub von Exception.GetObjectData(Exception this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonException.HelpLink">
            <summary>Legt die stub von Exception.get_HelpLink(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonException.HelpLinkGet">
            <summary>Legt die stub von Exception.get_HelpLink(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonException.HelpLinkSetString">
            <summary>Legt die stub von Exception.set_HelpLink(Exception this, String value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonException.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonException.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonException.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonException.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonException.Message">
            <summary>Legt die stub von Exception.get_Message(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonException.MessageGet">
            <summary>Legt die stub von Exception.get_Message(Exception this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonException.Source">
            <summary>Legt die stub von Exception.get_Source(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonException.SourceGet">
            <summary>Legt die stub von Exception.get_Source(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonException.SourceSetString">
            <summary>Legt die stub von Exception.set_Source(Exception this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonException.StackTrace">
            <summary>Legt die stub von Exception.get_StackTrace(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonException.StackTraceGet">
            <summary>Legt die stub von Exception.get_StackTrace(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonException.ToString">
            <summary>Legt die Stub von Exception.ToString(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonException.ToString01">
            <summary>Legt die stub von Exception.ToString(Exception this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute">
            <summary>Stub-Typ von Newtonsoft.Json.JsonExtensionDataAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.Equals(System.Object)">
            <summary>Legt die Stub von Attribute.Equals(Attribute this, Object obj) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.EqualsObject">
            <summary>Legt die stub von Attribute.Equals(Attribute this, Object obj) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.GetHashCode">
            <summary>Legt die Stub von Attribute.GetHashCode(Attribute this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.GetHashCode01">
            <summary>Legt die stub von Attribute.GetHashCode(Attribute this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonExtensionDataAttribute.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.IsDefaultAttribute">
            <summary>Legt die Stub von Attribute.IsDefaultAttribute(Attribute this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.IsDefaultAttribute01">
            <summary>Legt die stub von Attribute.IsDefaultAttribute(Attribute this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.Match(System.Object)">
            <summary>Legt die Stub von Attribute.Match(Attribute this, Object obj) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.MatchObject">
            <summary>Legt die stub von Attribute.Match(Attribute this, Object obj) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.TypeId">
            <summary>Legt die stub von Attribute.get_TypeId(Attribute this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonExtensionDataAttribute.TypeIdGet">
            <summary>Legt die stub von Attribute.get_TypeId(Attribute this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonReader">
            <summary>Stub-Typ von Newtonsoft.Json.JsonReader</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.AttachBackingFieldToQuoteChar">
            <summary>Fügt Delegate an, um StubJsonReader.QuoteChar als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReader.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.Close">
            <summary>Legt die Stub von JsonReader.Close(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.Close01">
            <summary>Legt die stub von JsonReader.Close(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReader.Depth">
            <summary>Legt die stub von JsonReader.get_Depth(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.DepthGet">
            <summary>Legt die stub von JsonReader.get_Depth(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.Dispose(System.Boolean)">
            <summary>Legt die Stub von JsonReader.Dispose(JsonReader this, Boolean disposing) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.DisposeBoolean">
            <summary>Legt die stub von JsonReader.Dispose(JsonReader this, Boolean disposing) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonReader.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReader.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReader.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReader.Path">
            <summary>Legt die stub von JsonReader.get_Path(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.PathGet">
            <summary>Legt die stub von JsonReader.get_Path(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReader.QuoteChar">
            <summary>Legt die stub von JsonReader.get_QuoteChar(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.QuoteCharGet">
            <summary>Legt die stub von JsonReader.get_QuoteChar(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.QuoteCharSetChar">
            <summary>Legt die stub von JsonReader.set_QuoteChar(JsonReader this, Char value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.Read">
            <summary>Legt die Stub von JsonReader.Read(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.Read01">
            <summary>Legt die stub von JsonReader.Read(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsBoolean">
            <summary>Legt die Stub von JsonReader.ReadAsBoolean(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsBoolean01">
            <summary>Legt die stub von JsonReader.ReadAsBoolean(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsBooleanAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsBooleanAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsBooleanAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsBooleanAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsBytes">
            <summary>Legt die Stub von JsonReader.ReadAsBytes(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsBytes01">
            <summary>Legt die stub von JsonReader.ReadAsBytes(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsBytesAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsBytesAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsBytesAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsBytesAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDateTime">
            <summary>Legt die Stub von JsonReader.ReadAsDateTime(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDateTime01">
            <summary>Legt die stub von JsonReader.ReadAsDateTime(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDateTimeAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsDateTimeAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDateTimeAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsDateTimeAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDateTimeOffset">
            <summary>Legt die Stub von JsonReader.ReadAsDateTimeOffset(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDateTimeOffset01">
            <summary>Legt die stub von JsonReader.ReadAsDateTimeOffset(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDateTimeOffsetAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsDateTimeOffsetAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDateTimeOffsetAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsDateTimeOffsetAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDecimal">
            <summary>Legt die Stub von JsonReader.ReadAsDecimal(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDecimal01">
            <summary>Legt die stub von JsonReader.ReadAsDecimal(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDecimalAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsDecimalAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDecimalAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsDecimalAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDouble">
            <summary>Legt die Stub von JsonReader.ReadAsDouble(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDouble01">
            <summary>Legt die stub von JsonReader.ReadAsDouble(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDoubleAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsDoubleAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsDoubleAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsDoubleAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsInt32">
            <summary>Legt die Stub von JsonReader.ReadAsInt32(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsInt3201">
            <summary>Legt die stub von JsonReader.ReadAsInt32(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsInt32Async(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsInt32Async(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsInt32AsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsInt32Async(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsString">
            <summary>Legt die Stub von JsonReader.ReadAsString(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsString01">
            <summary>Legt die stub von JsonReader.ReadAsString(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsStringAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsStringAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsStringAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsStringAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ReadAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReader.TokenType">
            <summary>Legt die stub von JsonReader.get_TokenType(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.TokenTypeGet">
            <summary>Legt die stub von JsonReader.get_TokenType(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReader.Value">
            <summary>Legt die stub von JsonReader.get_Value(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ValueGet">
            <summary>Legt die stub von JsonReader.get_Value(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReader.ValueType">
            <summary>Legt die stub von JsonReader.get_ValueType(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReader.ValueTypeGet">
            <summary>Legt die stub von JsonReader.get_ValueType(JsonReader this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonReaderException">
            <summary>Stub-Typ von Newtonsoft.Json.JsonReaderException</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReaderException.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReaderException.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReaderException.#ctor(System.String,System.Exception)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReaderException.#ctor(System.String,System.String,System.Int32,System.Int32,System.Exception)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReaderException.AttachBackingFieldToHelpLink">
            <summary>Fügt Delegate an, um StubJsonReaderException.HelpLink als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReaderException.AttachBackingFieldToSource">
            <summary>Fügt Delegate an, um StubJsonReaderException.Source als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReaderException.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReaderException.Data">
            <summary>Legt die stub von Exception.get_Data(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReaderException.DataGet">
            <summary>Legt die stub von Exception.get_Data(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReaderException.GetBaseException">
            <summary>Legt die Stub von Exception.GetBaseException(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReaderException.GetBaseException01">
            <summary>Legt die stub von Exception.GetBaseException(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReaderException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Legt die Stub von Exception.GetObjectData(Exception this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReaderException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Legt die stub von Exception.GetObjectData(Exception this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReaderException.HelpLink">
            <summary>Legt die stub von Exception.get_HelpLink(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReaderException.HelpLinkGet">
            <summary>Legt die stub von Exception.get_HelpLink(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReaderException.HelpLinkSetString">
            <summary>Legt die stub von Exception.set_HelpLink(Exception this, String value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReaderException.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonReaderException.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReaderException.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReaderException.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReaderException.Message">
            <summary>Legt die stub von Exception.get_Message(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReaderException.MessageGet">
            <summary>Legt die stub von Exception.get_Message(Exception this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReaderException.Source">
            <summary>Legt die stub von Exception.get_Source(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReaderException.SourceGet">
            <summary>Legt die stub von Exception.get_Source(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReaderException.SourceSetString">
            <summary>Legt die stub von Exception.set_Source(Exception this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonReaderException.StackTrace">
            <summary>Legt die stub von Exception.get_StackTrace(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReaderException.StackTraceGet">
            <summary>Legt die stub von Exception.get_StackTrace(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonReaderException.ToString">
            <summary>Legt die Stub von Exception.ToString(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonReaderException.ToString01">
            <summary>Legt die stub von Exception.ToString(Exception this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonSerializationException">
            <summary>Stub-Typ von Newtonsoft.Json.JsonSerializationException</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializationException.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializationException.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializationException.#ctor(System.String,System.Exception)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializationException.AttachBackingFieldToHelpLink">
            <summary>Fügt Delegate an, um StubJsonSerializationException.HelpLink als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializationException.AttachBackingFieldToSource">
            <summary>Fügt Delegate an, um StubJsonSerializationException.Source als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializationException.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializationException.Data">
            <summary>Legt die stub von Exception.get_Data(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializationException.DataGet">
            <summary>Legt die stub von Exception.get_Data(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializationException.GetBaseException">
            <summary>Legt die Stub von Exception.GetBaseException(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializationException.GetBaseException01">
            <summary>Legt die stub von Exception.GetBaseException(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Legt die Stub von Exception.GetObjectData(Exception this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Legt die stub von Exception.GetObjectData(Exception this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializationException.HelpLink">
            <summary>Legt die stub von Exception.get_HelpLink(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializationException.HelpLinkGet">
            <summary>Legt die stub von Exception.get_HelpLink(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializationException.HelpLinkSetString">
            <summary>Legt die stub von Exception.set_HelpLink(Exception this, String value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializationException.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonSerializationException.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializationException.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializationException.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializationException.Message">
            <summary>Legt die stub von Exception.get_Message(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializationException.MessageGet">
            <summary>Legt die stub von Exception.get_Message(Exception this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializationException.Source">
            <summary>Legt die stub von Exception.get_Source(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializationException.SourceGet">
            <summary>Legt die stub von Exception.get_Source(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializationException.SourceSetString">
            <summary>Legt die stub von Exception.set_Source(Exception this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializationException.StackTrace">
            <summary>Legt die stub von Exception.get_StackTrace(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializationException.StackTraceGet">
            <summary>Legt die stub von Exception.get_StackTrace(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializationException.ToString">
            <summary>Legt die Stub von Exception.ToString(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializationException.ToString01">
            <summary>Legt die stub von Exception.ToString(Exception this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonSerializer">
            <summary>Stub-Typ von Newtonsoft.Json.JsonSerializer</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToBinder">
            <summary>Fügt Delegate an, um StubJsonSerializer.Binder als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToCheckAdditionalContent">
            <summary>Fügt Delegate an, um StubJsonSerializer.CheckAdditionalContent als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToConstructorHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.ConstructorHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToContext">
            <summary>Fügt Delegate an, um StubJsonSerializer.Context als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToContractResolver">
            <summary>Fügt Delegate an, um StubJsonSerializer.ContractResolver als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToCulture">
            <summary>Fügt Delegate an, um StubJsonSerializer.Culture als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToDateFormatHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.DateFormatHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToDateFormatString">
            <summary>Fügt Delegate an, um StubJsonSerializer.DateFormatString als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToDateParseHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.DateParseHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToDateTimeZoneHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.DateTimeZoneHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToDefaultValueHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.DefaultValueHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToEqualityComparer">
            <summary>Fügt Delegate an, um StubJsonSerializer.EqualityComparer als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToFloatFormatHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.FloatFormatHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToFloatParseHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.FloatParseHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToFormatting">
            <summary>Fügt Delegate an, um StubJsonSerializer.Formatting als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToMaxDepth">
            <summary>Fügt Delegate an, um StubJsonSerializer.MaxDepth als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToMetadataPropertyHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.MetadataPropertyHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToMissingMemberHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.MissingMemberHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToNullValueHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.NullValueHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToObjectCreationHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.ObjectCreationHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToPreserveReferencesHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.PreserveReferencesHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToReferenceLoopHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.ReferenceLoopHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToReferenceResolver">
            <summary>Fügt Delegate an, um StubJsonSerializer.ReferenceResolver als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToSerializationBinder">
            <summary>Fügt Delegate an, um StubJsonSerializer.SerializationBinder als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToStringEscapeHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.StringEscapeHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToTraceWriter">
            <summary>Fügt Delegate an, um StubJsonSerializer.TraceWriter als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToTypeNameAssemblyFormat">
            <summary>Fügt Delegate an, um StubJsonSerializer.TypeNameAssemblyFormat als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToTypeNameAssemblyFormatHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.TypeNameAssemblyFormatHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.AttachBackingFieldToTypeNameHandling">
            <summary>Fügt Delegate an, um StubJsonSerializer.TypeNameHandling als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.Binder">
            <summary>Legt die stub von JsonSerializer.get_Binder(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.BinderGet">
            <summary>Legt die stub von JsonSerializer.get_Binder(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.BinderSetSerializationBinder">
            <summary>Legt die stub von JsonSerializer.set_Binder(JsonSerializer this, SerializationBinder value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.CheckAdditionalContent">
            <summary>Legt die stub von JsonSerializer.get_CheckAdditionalContent(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.CheckAdditionalContentGet">
            <summary>Legt die stub von JsonSerializer.get_CheckAdditionalContent(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.CheckAdditionalContentSetBoolean">
            <summary>Legt die stub von JsonSerializer.set_CheckAdditionalContent(JsonSerializer this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.ConstructorHandling">
            <summary>Legt die stub von JsonSerializer.get_ConstructorHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ConstructorHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_ConstructorHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ConstructorHandlingSetConstructorHandling">
            <summary>Legt die stub von JsonSerializer.set_ConstructorHandling(JsonSerializer this, ConstructorHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.Context">
            <summary>Legt die stub von JsonSerializer.get_Context(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ContextGet">
            <summary>Legt die stub von JsonSerializer.get_Context(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ContextSetStreamingContext">
            <summary>Legt die stub von JsonSerializer.set_Context(JsonSerializer this, StreamingContext value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.ContractResolver">
            <summary>Legt die stub von JsonSerializer.get_ContractResolver(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ContractResolverGet">
            <summary>Legt die stub von JsonSerializer.get_ContractResolver(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ContractResolverSetIContractResolver">
            <summary>Legt die stub von JsonSerializer.set_ContractResolver(JsonSerializer this, IContractResolver value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.Converters">
            <summary>Legt die stub von JsonSerializer.get_Converters(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ConvertersGet">
            <summary>Legt die stub von JsonSerializer.get_Converters(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.Culture">
            <summary>Legt die stub von JsonSerializer.get_Culture(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.CultureGet">
            <summary>Legt die stub von JsonSerializer.get_Culture(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.CultureSetCultureInfo">
            <summary>Legt die stub von JsonSerializer.set_Culture(JsonSerializer this, CultureInfo value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.DateFormatHandling">
            <summary>Legt die stub von JsonSerializer.get_DateFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.DateFormatHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_DateFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.DateFormatHandlingSetDateFormatHandling">
            <summary>Legt die stub von JsonSerializer.set_DateFormatHandling(JsonSerializer this, DateFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.DateFormatString">
            <summary>Legt die stub von JsonSerializer.get_DateFormatString(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.DateFormatStringGet">
            <summary>Legt die stub von JsonSerializer.get_DateFormatString(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.DateFormatStringSetString">
            <summary>Legt die stub von JsonSerializer.set_DateFormatString(JsonSerializer this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.DateParseHandling">
            <summary>Legt die stub von JsonSerializer.get_DateParseHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.DateParseHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_DateParseHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.DateParseHandlingSetDateParseHandling">
            <summary>Legt die stub von JsonSerializer.set_DateParseHandling(JsonSerializer this, DateParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.DateTimeZoneHandling">
            <summary>Legt die stub von JsonSerializer.get_DateTimeZoneHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.DateTimeZoneHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_DateTimeZoneHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.DateTimeZoneHandlingSetDateTimeZoneHandling">
            <summary>Legt die stub von JsonSerializer.set_DateTimeZoneHandling(JsonSerializer this, DateTimeZoneHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.DefaultValueHandling">
            <summary>Legt die stub von JsonSerializer.get_DefaultValueHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.DefaultValueHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_DefaultValueHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.DefaultValueHandlingSetDefaultValueHandling">
            <summary>Legt die stub von JsonSerializer.set_DefaultValueHandling(JsonSerializer this, DefaultValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.EqualityComparer">
            <summary>Legt die stub von JsonSerializer.get_EqualityComparer(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.EqualityComparerGet">
            <summary>Legt die stub von JsonSerializer.get_EqualityComparer(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.EqualityComparerSetIEqualityComparer">
            <summary>Legt die stub von JsonSerializer.set_EqualityComparer(JsonSerializer this, IEqualityComparer value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.FloatFormatHandling">
            <summary>Legt die stub von JsonSerializer.get_FloatFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.FloatFormatHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_FloatFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.FloatFormatHandlingSetFloatFormatHandling">
            <summary>Legt die stub von JsonSerializer.set_FloatFormatHandling(JsonSerializer this, FloatFormatHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.FloatParseHandling">
            <summary>Legt die stub von JsonSerializer.get_FloatParseHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.FloatParseHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_FloatParseHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.FloatParseHandlingSetFloatParseHandling">
            <summary>Legt die stub von JsonSerializer.set_FloatParseHandling(JsonSerializer this, FloatParseHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.Formatting">
            <summary>Legt die stub von JsonSerializer.get_Formatting(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.FormattingGet">
            <summary>Legt die stub von JsonSerializer.get_Formatting(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.FormattingSetFormatting">
            <summary>Legt die stub von JsonSerializer.set_Formatting(JsonSerializer this, Formatting value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializer.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonSerializer.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.MaxDepth">
            <summary>Legt die stub von JsonSerializer.get_MaxDepth(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.MaxDepthGet">
            <summary>Legt die stub von JsonSerializer.get_MaxDepth(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.MaxDepthSetNullableOfInt32">
            <summary>Legt die stub von JsonSerializer.set_MaxDepth(JsonSerializer this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.MetadataPropertyHandling">
            <summary>Legt die stub von JsonSerializer.get_MetadataPropertyHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.MetadataPropertyHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_MetadataPropertyHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.MetadataPropertyHandlingSetMetadataPropertyHandling">
            <summary>Legt die stub von JsonSerializer.set_MetadataPropertyHandling(JsonSerializer this, MetadataPropertyHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.MissingMemberHandling">
            <summary>Legt die stub von JsonSerializer.get_MissingMemberHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.MissingMemberHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_MissingMemberHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.MissingMemberHandlingSetMissingMemberHandling">
            <summary>Legt die stub von JsonSerializer.set_MissingMemberHandling(JsonSerializer this, MissingMemberHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.NullValueHandling">
            <summary>Legt die stub von JsonSerializer.get_NullValueHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.NullValueHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_NullValueHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.NullValueHandlingSetNullValueHandling">
            <summary>Legt die stub von JsonSerializer.set_NullValueHandling(JsonSerializer this, NullValueHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.ObjectCreationHandling">
            <summary>Legt die stub von JsonSerializer.get_ObjectCreationHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ObjectCreationHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_ObjectCreationHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ObjectCreationHandlingSetObjectCreationHandling">
            <summary>Legt die stub von JsonSerializer.set_ObjectCreationHandling(JsonSerializer this, ObjectCreationHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.PreserveReferencesHandling">
            <summary>Legt die stub von JsonSerializer.get_PreserveReferencesHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.PreserveReferencesHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_PreserveReferencesHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.PreserveReferencesHandlingSetPreserveReferencesHandling">
            <summary>Legt die stub von JsonSerializer.set_PreserveReferencesHandling(JsonSerializer this, PreserveReferencesHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.ReferenceLoopHandling">
            <summary>Legt die stub von JsonSerializer.get_ReferenceLoopHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ReferenceLoopHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_ReferenceLoopHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ReferenceLoopHandlingSetReferenceLoopHandling">
            <summary>Legt die stub von JsonSerializer.set_ReferenceLoopHandling(JsonSerializer this, ReferenceLoopHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.ReferenceResolver">
            <summary>Legt die stub von JsonSerializer.get_ReferenceResolver(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ReferenceResolverGet">
            <summary>Legt die stub von JsonSerializer.get_ReferenceResolver(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.ReferenceResolverSetIReferenceResolver">
            <summary>Legt die stub von JsonSerializer.set_ReferenceResolver(JsonSerializer this, IReferenceResolver value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.SerializationBinder">
            <summary>Legt die stub von JsonSerializer.get_SerializationBinder(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.SerializationBinderGet">
            <summary>Legt die stub von JsonSerializer.get_SerializationBinder(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.SerializationBinderSetISerializationBinder">
            <summary>Legt die stub von JsonSerializer.set_SerializationBinder(JsonSerializer this, ISerializationBinder value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.StringEscapeHandling">
            <summary>Legt die stub von JsonSerializer.get_StringEscapeHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.StringEscapeHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_StringEscapeHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.StringEscapeHandlingSetStringEscapeHandling">
            <summary>Legt die stub von JsonSerializer.set_StringEscapeHandling(JsonSerializer this, StringEscapeHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.TraceWriter">
            <summary>Legt die stub von JsonSerializer.get_TraceWriter(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.TraceWriterGet">
            <summary>Legt die stub von JsonSerializer.get_TraceWriter(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.TraceWriterSetITraceWriter">
            <summary>Legt die stub von JsonSerializer.set_TraceWriter(JsonSerializer this, ITraceWriter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.TypeNameAssemblyFormat">
            <summary>Legt die stub von JsonSerializer.get_TypeNameAssemblyFormat(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.TypeNameAssemblyFormatGet">
            <summary>Legt die stub von JsonSerializer.get_TypeNameAssemblyFormat(JsonSerializer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.TypeNameAssemblyFormatHandling">
            <summary>Legt die stub von JsonSerializer.get_TypeNameAssemblyFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.TypeNameAssemblyFormatHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_TypeNameAssemblyFormatHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.TypeNameAssemblyFormatHandlingSetTypeNameAssemblyFormatHandling">
            <summary>Legt die stub von JsonSerializer.set_TypeNameAssemblyFormatHandling(JsonSerializer this, TypeNameAssemblyFormatHandling value) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.TypeNameAssemblyFormatSetFormatterAssemblyStyle">
            <summary>Legt die stub von JsonSerializer.set_TypeNameAssemblyFormat(JsonSerializer this, FormatterAssemblyStyle value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializer.TypeNameHandling">
            <summary>Legt die stub von JsonSerializer.get_TypeNameHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.TypeNameHandlingGet">
            <summary>Legt die stub von JsonSerializer.get_TypeNameHandling(JsonSerializer this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonSerializer.TypeNameHandlingSetTypeNameHandling">
            <summary>Legt die stub von JsonSerializer.set_TypeNameHandling(JsonSerializer this, TypeNameHandling value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonSerializerSettings">
            <summary>Stub-Typ von Newtonsoft.Json.JsonSerializerSettings</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializerSettings.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializerSettings.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonSerializerSettings.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonSerializerSettings.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializerSettings.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonSerializerSettings.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonTextReader">
            <summary>Stub-Typ von Newtonsoft.Json.JsonTextReader</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.#ctor(System.IO.TextReader)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.AttachBackingFieldToQuoteChar">
            <summary>Fügt Delegate an, um StubJsonTextReader.QuoteChar als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextReader.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.Close">
            <summary>Legt die Stub von JsonTextReader.Close(JsonTextReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.Close01">
            <summary>Legt die stub von JsonTextReader.Close(JsonTextReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextReader.Depth">
            <summary>Legt die stub von JsonReader.get_Depth(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.DepthGet">
            <summary>Legt die stub von JsonReader.get_Depth(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.Dispose(System.Boolean)">
            <summary>Legt die Stub von JsonReader.Dispose(JsonReader this, Boolean disposing) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.DisposeBoolean">
            <summary>Legt die stub von JsonReader.Dispose(JsonReader this, Boolean disposing) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonTextReader.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextReader.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextReader.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextReader.Path">
            <summary>Legt die stub von JsonReader.get_Path(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.PathGet">
            <summary>Legt die stub von JsonReader.get_Path(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextReader.QuoteChar">
            <summary>Legt die stub von JsonReader.get_QuoteChar(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.QuoteCharGet">
            <summary>Legt die stub von JsonReader.get_QuoteChar(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.QuoteCharSetChar">
            <summary>Legt die stub von JsonReader.set_QuoteChar(JsonReader this, Char value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.Read">
            <summary>Legt die Stub von JsonTextReader.Read(JsonTextReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.Read01">
            <summary>Legt die stub von JsonTextReader.Read(JsonTextReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsBoolean">
            <summary>Legt die Stub von JsonTextReader.ReadAsBoolean(JsonTextReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsBoolean01">
            <summary>Legt die stub von JsonTextReader.ReadAsBoolean(JsonTextReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsBooleanAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextReader.ReadAsBooleanAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsBooleanAsyncCancellationToken">
            <summary>Legt die stub von JsonTextReader.ReadAsBooleanAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsBytes">
            <summary>Legt die Stub von JsonTextReader.ReadAsBytes(JsonTextReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsBytes01">
            <summary>Legt die stub von JsonTextReader.ReadAsBytes(JsonTextReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsBytesAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextReader.ReadAsBytesAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsBytesAsyncCancellationToken">
            <summary>Legt die stub von JsonTextReader.ReadAsBytesAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDateTime">
            <summary>Legt die Stub von JsonTextReader.ReadAsDateTime(JsonTextReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDateTime01">
            <summary>Legt die stub von JsonTextReader.ReadAsDateTime(JsonTextReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDateTimeAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextReader.ReadAsDateTimeAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDateTimeAsyncCancellationToken">
            <summary>Legt die stub von JsonTextReader.ReadAsDateTimeAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDateTimeOffset">
            <summary>Legt die Stub von JsonTextReader.ReadAsDateTimeOffset(JsonTextReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDateTimeOffset01">
            <summary>Legt die stub von JsonTextReader.ReadAsDateTimeOffset(JsonTextReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDateTimeOffsetAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextReader.ReadAsDateTimeOffsetAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDateTimeOffsetAsyncCancellationToken">
            <summary>Legt die stub von JsonTextReader.ReadAsDateTimeOffsetAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDecimal">
            <summary>Legt die Stub von JsonTextReader.ReadAsDecimal(JsonTextReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDecimal01">
            <summary>Legt die stub von JsonTextReader.ReadAsDecimal(JsonTextReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDecimalAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextReader.ReadAsDecimalAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDecimalAsyncCancellationToken">
            <summary>Legt die stub von JsonTextReader.ReadAsDecimalAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDouble">
            <summary>Legt die Stub von JsonTextReader.ReadAsDouble(JsonTextReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDouble01">
            <summary>Legt die stub von JsonTextReader.ReadAsDouble(JsonTextReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDoubleAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextReader.ReadAsDoubleAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsDoubleAsyncCancellationToken">
            <summary>Legt die stub von JsonTextReader.ReadAsDoubleAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsInt32">
            <summary>Legt die Stub von JsonTextReader.ReadAsInt32(JsonTextReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsInt3201">
            <summary>Legt die stub von JsonTextReader.ReadAsInt32(JsonTextReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsInt32Async(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextReader.ReadAsInt32Async(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsInt32AsyncCancellationToken">
            <summary>Legt die stub von JsonTextReader.ReadAsInt32Async(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsString">
            <summary>Legt die Stub von JsonTextReader.ReadAsString(JsonTextReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsString01">
            <summary>Legt die stub von JsonTextReader.ReadAsString(JsonTextReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsStringAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextReader.ReadAsStringAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsStringAsyncCancellationToken">
            <summary>Legt die stub von JsonTextReader.ReadAsStringAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextReader.ReadAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ReadAsyncCancellationToken">
            <summary>Legt die stub von JsonTextReader.ReadAsync(JsonTextReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextReader.TokenType">
            <summary>Legt die stub von JsonReader.get_TokenType(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.TokenTypeGet">
            <summary>Legt die stub von JsonReader.get_TokenType(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextReader.Value">
            <summary>Legt die stub von JsonReader.get_Value(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ValueGet">
            <summary>Legt die stub von JsonReader.get_Value(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextReader.ValueType">
            <summary>Legt die stub von JsonReader.get_ValueType(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextReader.ValueTypeGet">
            <summary>Legt die stub von JsonReader.get_ValueType(JsonReader this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonTextWriter">
            <summary>Stub-Typ von Newtonsoft.Json.JsonTextWriter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.#ctor(System.IO.TextWriter)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextWriter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.Close">
            <summary>Legt die Stub von JsonTextWriter.Close(JsonTextWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.Close01">
            <summary>Legt die stub von JsonTextWriter.Close(JsonTextWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.CloseAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.CloseAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.CloseAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.CloseAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.Dispose(System.Boolean)">
            <summary>Legt die Stub von JsonWriter.Dispose(JsonWriter this, Boolean disposing) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.DisposeBoolean">
            <summary>Legt die stub von JsonWriter.Dispose(JsonWriter this, Boolean disposing) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.Flush">
            <summary>Legt die Stub von JsonTextWriter.Flush(JsonTextWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.Flush01">
            <summary>Legt die stub von JsonTextWriter.Flush(JsonTextWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonTextWriter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextWriter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonTextWriter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteComment(System.String)">
            <summary>Legt die Stub von JsonTextWriter.WriteComment(JsonTextWriter this, String text) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteCommentAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteCommentAsync(JsonTextWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteCommentAsyncStringCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteCommentAsync(JsonTextWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteCommentString">
            <summary>Legt die stub von JsonTextWriter.WriteComment(JsonTextWriter this, String text) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEnd">
            <summary>Legt die Stub von JsonWriter.WriteEnd(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteEnd(JsonTextWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEnd01">
            <summary>Legt die stub von JsonWriter.WriteEnd(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndArray">
            <summary>Legt die Stub von JsonWriter.WriteEndArray(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndArray01">
            <summary>Legt die stub von JsonWriter.WriteEndArray(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteEndArrayAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndArrayAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteEndArrayAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteEndAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndAsync(Newtonsoft.Json.JsonToken,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteEndAsync(JsonTextWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteEndAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndAsyncJsonTokenCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteEndAsync(JsonTextWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndConstructor">
            <summary>Legt die Stub von JsonWriter.WriteEndConstructor(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndConstructor01">
            <summary>Legt die stub von JsonWriter.WriteEndConstructor(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteEndConstructorAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndConstructorAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteEndConstructorAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndJsonToken">
            <summary>Legt die stub von JsonTextWriter.WriteEnd(JsonTextWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndObject">
            <summary>Legt die Stub von JsonWriter.WriteEndObject(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndObject01">
            <summary>Legt die stub von JsonWriter.WriteEndObject(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteEndObjectAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteEndObjectAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteEndObjectAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteIndent">
            <summary>Legt die Stub von JsonTextWriter.WriteIndent(JsonTextWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteIndent01">
            <summary>Legt die stub von JsonTextWriter.WriteIndent(JsonTextWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteIndentAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteIndentAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteIndentAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteIndentSpace">
            <summary>Legt die Stub von JsonTextWriter.WriteIndentSpace(JsonTextWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteIndentSpace01">
            <summary>Legt die stub von JsonTextWriter.WriteIndentSpace(JsonTextWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteIndentSpaceAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteIndentSpaceAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteIndentSpaceAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteNull">
            <summary>Legt die Stub von JsonTextWriter.WriteNull(JsonTextWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteNull01">
            <summary>Legt die stub von JsonTextWriter.WriteNull(JsonTextWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteNullAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteNullAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteNullAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WritePropertyName(System.String)">
            <summary>Legt die Stub von JsonTextWriter.WritePropertyName(JsonTextWriter this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WritePropertyName(System.String,System.Boolean)">
            <summary>Legt die Stub von JsonTextWriter.WritePropertyName(JsonTextWriter this, String name, Boolean escape) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WritePropertyNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WritePropertyNameAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WritePropertyNameAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WritePropertyNameAsync(JsonTextWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WritePropertyNameAsyncStringBooleanCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WritePropertyNameAsync(JsonTextWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WritePropertyNameAsyncStringCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WritePropertyNameAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WritePropertyNameString">
            <summary>Legt die stub von JsonTextWriter.WritePropertyName(JsonTextWriter this, String name) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WritePropertyNameStringBoolean">
            <summary>Legt die stub von JsonTextWriter.WritePropertyName(JsonTextWriter this, String name, Boolean escape) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteRaw(System.String)">
            <summary>Legt die Stub von JsonTextWriter.WriteRaw(JsonTextWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteRawAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteRawAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteRawAsyncStringCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteRawAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteRawString">
            <summary>Legt die stub von JsonTextWriter.WriteRaw(JsonTextWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteRawValue(System.String)">
            <summary>Legt die Stub von JsonWriter.WriteRawValue(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteRawValueAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteRawValueAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteRawValueAsyncStringCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteRawValueAsync(JsonTextWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteRawValueString">
            <summary>Legt die stub von JsonWriter.WriteRawValue(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartArray">
            <summary>Legt die Stub von JsonTextWriter.WriteStartArray(JsonTextWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartArray01">
            <summary>Legt die stub von JsonTextWriter.WriteStartArray(JsonTextWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartArrayAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteStartArrayAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartArrayAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteStartArrayAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartConstructor(System.String)">
            <summary>Legt die Stub von JsonTextWriter.WriteStartConstructor(JsonTextWriter this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartConstructorAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteStartConstructorAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartConstructorAsyncStringCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteStartConstructorAsync(JsonTextWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartConstructorString">
            <summary>Legt die stub von JsonTextWriter.WriteStartConstructor(JsonTextWriter this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartObject">
            <summary>Legt die Stub von JsonTextWriter.WriteStartObject(JsonTextWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartObject01">
            <summary>Legt die stub von JsonTextWriter.WriteStartObject(JsonTextWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartObjectAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteStartObjectAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteStartObjectAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteStartObjectAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteUndefined">
            <summary>Legt die Stub von JsonTextWriter.WriteUndefined(JsonTextWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteUndefined01">
            <summary>Legt die stub von JsonTextWriter.WriteUndefined(JsonTextWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteUndefinedAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteUndefinedAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteUndefinedAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteUndefinedAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteValueDelimiter">
            <summary>Legt die Stub von JsonTextWriter.WriteValueDelimiter(JsonTextWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteValueDelimiter01">
            <summary>Legt die stub von JsonTextWriter.WriteValueDelimiter(JsonTextWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteValueDelimiterAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteValueDelimiterAsyncCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteValueDelimiterAsync(JsonTextWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteWhitespace(System.String)">
            <summary>Legt die Stub von JsonTextWriter.WriteWhitespace(JsonTextWriter this, String ws) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteWhitespaceAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonTextWriter.WriteWhitespaceAsync(JsonTextWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteWhitespaceAsyncStringCancellationToken">
            <summary>Legt die stub von JsonTextWriter.WriteWhitespaceAsync(JsonTextWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonTextWriter.WriteWhitespaceString">
            <summary>Legt die stub von JsonTextWriter.WriteWhitespace(JsonTextWriter this, String ws) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonWriter">
            <summary>Stub-Typ von Newtonsoft.Json.JsonWriter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonWriter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.Close">
            <summary>Legt die Stub von JsonWriter.Close(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.Close01">
            <summary>Legt die stub von JsonWriter.Close(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.CloseAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.CloseAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.CloseAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.CloseAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.Dispose(System.Boolean)">
            <summary>Legt die Stub von JsonWriter.Dispose(JsonWriter this, Boolean disposing) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.DisposeBoolean">
            <summary>Legt die stub von JsonWriter.Dispose(JsonWriter this, Boolean disposing) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.Flush">
            <summary>Legt die Stub von JsonWriter.Flush(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.Flush01">
            <summary>Legt die stub von JsonWriter.Flush(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.FlushAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.FlushAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.FlushAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.FlushAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonWriter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonWriter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonWriter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteComment(System.String)">
            <summary>Legt die Stub von JsonWriter.WriteComment(JsonWriter this, String text) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteCommentAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteCommentAsync(JsonWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteCommentAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteCommentAsync(JsonWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteCommentString">
            <summary>Legt die stub von JsonWriter.WriteComment(JsonWriter this, String text) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEnd">
            <summary>Legt die Stub von JsonWriter.WriteEnd(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEnd(Newtonsoft.Json.JsonToken)">
            <summary>Legt die Stub von JsonWriter.WriteEnd(JsonWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEnd01">
            <summary>Legt die stub von JsonWriter.WriteEnd(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndArray">
            <summary>Legt die Stub von JsonWriter.WriteEndArray(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndArray01">
            <summary>Legt die stub von JsonWriter.WriteEndArray(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndArrayAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteEndArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndArrayAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteEndArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteEndAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndAsync(Newtonsoft.Json.JsonToken,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteEndAsync(JsonWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteEndAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndAsyncJsonTokenCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteEndAsync(JsonWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndConstructor">
            <summary>Legt die Stub von JsonWriter.WriteEndConstructor(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndConstructor01">
            <summary>Legt die stub von JsonWriter.WriteEndConstructor(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteEndConstructorAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndConstructorAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteEndConstructorAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndJsonToken">
            <summary>Legt die stub von JsonWriter.WriteEnd(JsonWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndObject">
            <summary>Legt die Stub von JsonWriter.WriteEndObject(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndObject01">
            <summary>Legt die stub von JsonWriter.WriteEndObject(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndObjectAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteEndObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteEndObjectAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteEndObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteIndent">
            <summary>Legt die Stub von JsonWriter.WriteIndent(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteIndent01">
            <summary>Legt die stub von JsonWriter.WriteIndent(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteIndentAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteIndentAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteIndentAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteIndentAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteIndentSpace">
            <summary>Legt die Stub von JsonWriter.WriteIndentSpace(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteIndentSpace01">
            <summary>Legt die stub von JsonWriter.WriteIndentSpace(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteIndentSpaceAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteIndentSpaceAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteIndentSpaceAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteNull">
            <summary>Legt die Stub von JsonWriter.WriteNull(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteNull01">
            <summary>Legt die stub von JsonWriter.WriteNull(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteNullAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteNullAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteNullAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteNullAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WritePropertyName(System.String)">
            <summary>Legt die Stub von JsonWriter.WritePropertyName(JsonWriter this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WritePropertyName(System.String,System.Boolean)">
            <summary>Legt die Stub von JsonWriter.WritePropertyName(JsonWriter this, String name, Boolean escape) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WritePropertyNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WritePropertyNameAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WritePropertyNameAsyncStringBooleanCancellationToken">
            <summary>Legt die stub von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WritePropertyNameAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WritePropertyNameString">
            <summary>Legt die stub von JsonWriter.WritePropertyName(JsonWriter this, String name) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WritePropertyNameStringBoolean">
            <summary>Legt die stub von JsonWriter.WritePropertyName(JsonWriter this, String name, Boolean escape) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteRaw(System.String)">
            <summary>Legt die Stub von JsonWriter.WriteRaw(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteRawAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteRawAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteRawAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteRawAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteRawString">
            <summary>Legt die stub von JsonWriter.WriteRaw(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteRawValue(System.String)">
            <summary>Legt die Stub von JsonWriter.WriteRawValue(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteRawValueAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteRawValueAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteRawValueAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteRawValueAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteRawValueString">
            <summary>Legt die stub von JsonWriter.WriteRawValue(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartArray">
            <summary>Legt die Stub von JsonWriter.WriteStartArray(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartArray01">
            <summary>Legt die stub von JsonWriter.WriteStartArray(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartArrayAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteStartArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartArrayAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteStartArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartConstructor(System.String)">
            <summary>Legt die Stub von JsonWriter.WriteStartConstructor(JsonWriter this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartConstructorAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteStartConstructorAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartConstructorAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteStartConstructorAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartConstructorString">
            <summary>Legt die stub von JsonWriter.WriteStartConstructor(JsonWriter this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartObject">
            <summary>Legt die Stub von JsonWriter.WriteStartObject(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartObject01">
            <summary>Legt die stub von JsonWriter.WriteStartObject(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartObjectAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteStartObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteStartObjectAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteStartObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteUndefined">
            <summary>Legt die Stub von JsonWriter.WriteUndefined(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteUndefined01">
            <summary>Legt die stub von JsonWriter.WriteUndefined(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteUndefinedAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteUndefinedAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteUndefinedAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteUndefinedAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteValueDelimiter">
            <summary>Legt die Stub von JsonWriter.WriteValueDelimiter(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteValueDelimiter01">
            <summary>Legt die stub von JsonWriter.WriteValueDelimiter(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteValueDelimiterAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteValueDelimiterAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteValueDelimiterAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteWhitespace(System.String)">
            <summary>Legt die Stub von JsonWriter.WriteWhitespace(JsonWriter this, String ws) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriter.WriteWhitespaceAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteWhitespaceAsync(JsonWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteWhitespaceAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteWhitespaceAsync(JsonWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriter.WriteWhitespaceString">
            <summary>Legt die stub von JsonWriter.WriteWhitespace(JsonWriter this, String ws) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Fakes.StubJsonWriterException">
            <summary>Stub-Typ von Newtonsoft.Json.JsonWriterException</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriterException.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriterException.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriterException.#ctor(System.String,System.Exception)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriterException.#ctor(System.String,System.String,System.Exception)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriterException.AttachBackingFieldToHelpLink">
            <summary>Fügt Delegate an, um StubJsonWriterException.HelpLink als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriterException.AttachBackingFieldToSource">
            <summary>Fügt Delegate an, um StubJsonWriterException.Source als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonWriterException.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonWriterException.Data">
            <summary>Legt die stub von Exception.get_Data(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriterException.DataGet">
            <summary>Legt die stub von Exception.get_Data(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriterException.GetBaseException">
            <summary>Legt die Stub von Exception.GetBaseException(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriterException.GetBaseException01">
            <summary>Legt die stub von Exception.GetBaseException(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Legt die Stub von Exception.GetObjectData(Exception this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriterException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Legt die stub von Exception.GetObjectData(Exception this, SerializationInfo info, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonWriterException.HelpLink">
            <summary>Legt die stub von Exception.get_HelpLink(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriterException.HelpLinkGet">
            <summary>Legt die stub von Exception.get_HelpLink(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriterException.HelpLinkSetString">
            <summary>Legt die stub von Exception.set_HelpLink(Exception this, String value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriterException.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonWriterException.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonWriterException.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonWriterException.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonWriterException.Message">
            <summary>Legt die stub von Exception.get_Message(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriterException.MessageGet">
            <summary>Legt die stub von Exception.get_Message(Exception this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonWriterException.Source">
            <summary>Legt die stub von Exception.get_Source(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriterException.SourceGet">
            <summary>Legt die stub von Exception.get_Source(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriterException.SourceSetString">
            <summary>Legt die stub von Exception.set_Source(Exception this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Fakes.StubJsonWriterException.StackTrace">
            <summary>Legt die stub von Exception.get_StackTrace(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriterException.StackTraceGet">
            <summary>Legt die stub von Exception.get_StackTrace(Exception this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Fakes.StubJsonWriterException.ToString">
            <summary>Legt die Stub von Exception.ToString(Exception this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Fakes.StubJsonWriterException.ToString01">
            <summary>Legt die stub von Exception.ToString(Exception this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimExtensions">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.Extensions</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.AncestorsAndSelfOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken}})">
            <summary>Legt die Shim von Extensions.AncestorsAndSelf(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.AncestorsOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken}})">
            <summary>Legt die Shim von Extensions.Ancestors(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimExtensions.AsJEnumerableIEnumerableOfJToken">
            <summary>Legt die Shim von Extensions.AsJEnumerable(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.AsJEnumerableOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},Newtonsoft.Json.Linq.IJEnumerable{``0}})">
            <summary>Legt die Shim von Extensions.AsJEnumerable(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimExtensions.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.ChildrenOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken}})">
            <summary>Legt die Shim von Extensions.Children(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.ChildrenOf2IEnumerableOfM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Legt die Shim von Extensions.Children(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.ConvertOf2IEnumerableOfM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Legt die Shim von Extensions.Convert(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.ConvertOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>Legt die Shim von Extensions.Convert(!!0 token) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.DescendantsAndSelfOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken}})">
            <summary>Legt die Shim von Extensions.DescendantsAndSelf(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.DescendantsOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken}})">
            <summary>Legt die Shim von Extensions.Descendants(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimExtensions.PropertiesIEnumerableOfJObject">
            <summary>Legt die Shim von Extensions.Properties(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.ValueOf1IEnumerableOfJToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken},``0})">
            <summary>Legt die Shim von Extensions.Value(IEnumerable`1 value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.ValueOf2IEnumerableOfM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``1})">
            <summary>Legt die Shim von Extensions.Value(IEnumerable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimExtensions.ValuesIEnumerableOfJToken">
            <summary>Legt die Shim von Extensions.Values(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimExtensions.ValuesIEnumerableOfJTokenObject">
            <summary>Legt die Shim von Extensions.Values(IEnumerable`1 source, Object key) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.ValuesOf1IEnumerableOfJToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Legt die Shim von Extensions.Values(IEnumerable`1 source) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.ValuesOf1IEnumerableOfJTokenObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken},System.Object,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Legt die Shim von Extensions.Values(IEnumerable`1 source, Object key) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimExtensions.ValuesOf2IEnumerableOfM0Object``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Object,System.Collections.Generic.IEnumerable{``1}})">
            <summary>Legt die Shim von Extensions.Values(IEnumerable`1 source, Object key) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJArray">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JArray</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.#ctor(Newtonsoft.Json.Linq.JArray)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AddJToken">
            <summary>Legt die Shim von JArray.Add(JArray this, JToken item) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.AddJToken">
            <summary>Legt die Shim von JArray.Add(JArray this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.ChildrenTokensGet">
            <summary>Legt die Shim von JArray.get_ChildrenTokens(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.Clear">
            <summary>Legt die Shim von JArray.Clear(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.CloneToken">
            <summary>Legt die Shim von JArray.CloneToken(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.ContainsJToken">
            <summary>Legt die Shim von JArray.Contains(JArray this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.CopyToJTokenArrayInt32">
            <summary>Legt die Shim von JArray.CopyTo(JArray this, JToken[] array, Int32 arrayIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.DeepEqualsJToken">
            <summary>Legt die Shim von JArray.DeepEquals(JArray this, JToken node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.GetDeepHashCode">
            <summary>Legt die Shim von JArray.GetDeepHashCode(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.GetEnumerator">
            <summary>Legt die Shim von JArray.GetEnumerator(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.IndexOfItemJToken">
            <summary>Legt die Shim von JArray.IndexOfItem(JArray this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.IndexOfJToken">
            <summary>Legt die Shim von JArray.IndexOf(JArray this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.InsertInt32JToken">
            <summary>Legt die Shim von JArray.Insert(JArray this, Int32 index, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.IsReadOnlyGet">
            <summary>Legt die Shim von JArray.get_IsReadOnly(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.ItemGetInt32">
            <summary>Legt die Shim von JArray.get_Item(JArray this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.ItemGetObject">
            <summary>Legt die Shim von JArray.get_Item(JArray this, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.ItemSetInt32JToken">
            <summary>Legt die Shim von JArray.set_Item(JArray this, Int32 index, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.ItemSetObjectJToken">
            <summary>Legt die Shim von JArray.set_Item(JArray this, Object key, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.MergeItemObjectJsonMergeSettings">
            <summary>Legt die Shim von JArray.MergeItem(JArray this, Object content, JsonMergeSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.RemoveAtInt32">
            <summary>Legt die Shim von JArray.RemoveAt(JArray this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.RemoveJToken">
            <summary>Legt die Shim von JArray.Remove(JArray this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.TypeGet">
            <summary>Legt die Shim von JArray.get_Type(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JArray.WriteToAsync(JArray this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.AllInstances.WriteToJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JArray.WriteTo(JArray this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(Newtonsoft.Json.IJsonLineInfo)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(System.Collections.ICollection)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(System.Collections.IList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(System.Collections.Generic.ICollection{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(System.Collections.Generic.IList{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(System.ComponentModel.IBindingList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(System.ComponentModel.ITypedList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJArray.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.ChildrenTokensGet">
            <summary>Legt die Shim von JArray.get_ChildrenTokens(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.Clear">
            <summary>Legt die Shim von JArray.Clear(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.CloneToken">
            <summary>Legt die Shim von JArray.CloneToken(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.Constructor">
            <summary>Legt die Shim von JArray.JArray(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.ConstructorJArray">
            <summary>Legt die Shim von JArray.JArray(JArray this, JArray other) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.ConstructorObject">
            <summary>Legt die Shim von JArray.JArray(JArray this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.ConstructorObjectArray">
            <summary>Legt die Shim von JArray.JArray(JArray this, Object[] content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.ContainsJToken">
            <summary>Legt die Shim von JArray.Contains(JArray this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.CopyToJTokenArrayInt32">
            <summary>Legt die Shim von JArray.CopyTo(JArray this, JToken[] array, Int32 arrayIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.DeepEqualsJToken">
            <summary>Legt die Shim von JArray.DeepEquals(JArray this, JToken node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.FromObjectObject">
            <summary>Legt die Shim von JArray.FromObject(Object o) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.FromObjectObjectJsonSerializer">
            <summary>Legt die Shim von JArray.FromObject(Object o, JsonSerializer jsonSerializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.GetDeepHashCode">
            <summary>Legt die Shim von JArray.GetDeepHashCode(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.GetEnumerator">
            <summary>Legt die Shim von JArray.GetEnumerator(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.IndexOfItemJToken">
            <summary>Legt die Shim von JArray.IndexOfItem(JArray this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.IndexOfJToken">
            <summary>Legt die Shim von JArray.IndexOf(JArray this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.InsertInt32JToken">
            <summary>Legt die Shim von JArray.Insert(JArray this, Int32 index, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.IsReadOnlyGet">
            <summary>Legt die Shim von JArray.get_IsReadOnly(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.ItemGetInt32">
            <summary>Legt die Shim von JArray.get_Item(JArray this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.ItemGetObject">
            <summary>Legt die Shim von JArray.get_Item(JArray this, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.ItemSetInt32JToken">
            <summary>Legt die Shim von JArray.set_Item(JArray this, Int32 index, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.ItemSetObjectJToken">
            <summary>Legt die Shim von JArray.set_Item(JArray this, Object key, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.LoadAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JArray.LoadAsync(JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.LoadAsyncJsonReaderJsonLoadSettingsCancellationToken">
            <summary>Legt die Shim von JArray.LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.LoadJsonReader">
            <summary>Legt die Shim von JArray.Load(JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.LoadJsonReaderJsonLoadSettings">
            <summary>Legt die Shim von JArray.Load(JsonReader reader, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.MergeItemObjectJsonMergeSettings">
            <summary>Legt die Shim von JArray.MergeItem(JArray this, Object content, JsonMergeSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.ParseString">
            <summary>Legt die Shim von JArray.Parse(String json) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.ParseStringJsonLoadSettings">
            <summary>Legt die Shim von JArray.Parse(String json, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.RemoveAtInt32">
            <summary>Legt die Shim von JArray.RemoveAt(JArray this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.RemoveJToken">
            <summary>Legt die Shim von JArray.Remove(JArray this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.TypeGet">
            <summary>Legt die Shim von JArray.get_Type(JArray this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JArray.WriteToAsync(JArray this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJArray.WriteToJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JArray.WriteTo(JArray this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJConstructor">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JConstructor</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.#ctor(Newtonsoft.Json.Linq.JConstructor)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.ChildrenTokensGet">
            <summary>Legt die Shim von JConstructor.get_ChildrenTokens(JConstructor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.CloneToken">
            <summary>Legt die Shim von JConstructor.CloneToken(JConstructor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.DeepEqualsJToken">
            <summary>Legt die Shim von JConstructor.DeepEquals(JConstructor this, JToken node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.GetDeepHashCode">
            <summary>Legt die Shim von JConstructor.GetDeepHashCode(JConstructor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.IndexOfItemJToken">
            <summary>Legt die Shim von JConstructor.IndexOfItem(JConstructor this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.ItemGetObject">
            <summary>Legt die Shim von JConstructor.get_Item(JConstructor this, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.ItemSetObjectJToken">
            <summary>Legt die Shim von JConstructor.set_Item(JConstructor this, Object key, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.MergeItemObjectJsonMergeSettings">
            <summary>Legt die Shim von JConstructor.MergeItem(JConstructor this, Object content, JsonMergeSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.NameGet">
            <summary>Legt die Shim von JConstructor.get_Name(JConstructor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.NameSetString">
            <summary>Legt die Shim von JConstructor.set_Name(JConstructor this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.TypeGet">
            <summary>Legt die Shim von JConstructor.get_Type(JConstructor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JConstructor.WriteToAsync(JConstructor this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.AllInstances.WriteToJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JConstructor.WriteTo(JConstructor this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(Newtonsoft.Json.IJsonLineInfo)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(System.Collections.ICollection)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(System.Collections.IList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(System.Collections.Generic.ICollection{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(System.Collections.Generic.IList{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(System.ComponentModel.IBindingList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(System.ComponentModel.ITypedList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.ChildrenTokensGet">
            <summary>Legt die Shim von JConstructor.get_ChildrenTokens(JConstructor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.CloneToken">
            <summary>Legt die Shim von JConstructor.CloneToken(JConstructor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.Constructor">
            <summary>Legt die Shim von JConstructor.JConstructor(JConstructor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.ConstructorJConstructor">
            <summary>Legt die Shim von JConstructor.JConstructor(JConstructor this, JConstructor other) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.ConstructorString">
            <summary>Legt die Shim von JConstructor.JConstructor(JConstructor this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.ConstructorStringObject">
            <summary>Legt die Shim von JConstructor.JConstructor(JConstructor this, String name, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.ConstructorStringObjectArray">
            <summary>Legt die Shim von JConstructor.JConstructor(JConstructor this, String name, Object[] content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.DeepEqualsJToken">
            <summary>Legt die Shim von JConstructor.DeepEquals(JConstructor this, JToken node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.GetDeepHashCode">
            <summary>Legt die Shim von JConstructor.GetDeepHashCode(JConstructor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.IndexOfItemJToken">
            <summary>Legt die Shim von JConstructor.IndexOfItem(JConstructor this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.ItemGetObject">
            <summary>Legt die Shim von JConstructor.get_Item(JConstructor this, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.ItemSetObjectJToken">
            <summary>Legt die Shim von JConstructor.set_Item(JConstructor this, Object key, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.LoadAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JConstructor.LoadAsync(JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.LoadAsyncJsonReaderJsonLoadSettingsCancellationToken">
            <summary>Legt die Shim von JConstructor.LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.LoadJsonReader">
            <summary>Legt die Shim von JConstructor.Load(JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.LoadJsonReaderJsonLoadSettings">
            <summary>Legt die Shim von JConstructor.Load(JsonReader reader, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.MergeItemObjectJsonMergeSettings">
            <summary>Legt die Shim von JConstructor.MergeItem(JConstructor this, Object content, JsonMergeSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.NameGet">
            <summary>Legt die Shim von JConstructor.get_Name(JConstructor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.NameSetString">
            <summary>Legt die Shim von JConstructor.set_Name(JConstructor this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.TypeGet">
            <summary>Legt die Shim von JConstructor.get_Type(JConstructor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JConstructor.WriteToAsync(JConstructor this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJConstructor.WriteToJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JConstructor.WriteTo(JConstructor this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJContainer">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JContainer</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.#ctor(Newtonsoft.Json.Linq.JContainer)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AddAndSkipParentCheckJToken">
            <summary>Legt die Shim von JContainer.AddAndSkipParentCheck(JContainer this, JToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AddFirstObject">
            <summary>Legt die Shim von JContainer.AddFirst(JContainer this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AddInternalInt32ObjectBoolean">
            <summary>Legt die Shim von JContainer.AddInternal(JContainer this, Int32 index, Object content, Boolean skipParentCheck) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AddObject">
            <summary>Legt die Shim von JContainer.Add(JContainer this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AddingNewAddAddingNewEventHandler">
            <summary>Legt die Shim von JContainer.add_AddingNew(JContainer this, AddingNewEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AddingNewRemoveAddingNewEventHandler">
            <summary>Legt die Shim von JContainer.remove_AddingNew(JContainer this, AddingNewEventHandler value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.AddAndSkipParentCheckJToken">
            <summary>Legt die Shim von JContainer.AddAndSkipParentCheck(JContainer this, JToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.AddFirstObject">
            <summary>Legt die Shim von JContainer.AddFirst(JContainer this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.AddInternalInt32ObjectBoolean">
            <summary>Legt die Shim von JContainer.AddInternal(JContainer this, Int32 index, Object content, Boolean skipParentCheck) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.AddObject">
            <summary>Legt die Shim von JContainer.Add(JContainer this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.AddingNewAddAddingNewEventHandler">
            <summary>Legt die Shim von JContainer.add_AddingNew(JContainer this, AddingNewEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.AddingNewRemoveAddingNewEventHandler">
            <summary>Legt die Shim von JContainer.remove_AddingNew(JContainer this, AddingNewEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.AllowEditSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_AllowEdit(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.AllowNewSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_AllowNew(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.AllowRemoveSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_AllowRemove(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.CheckReentrancy">
            <summary>Legt die Shim von JContainer.CheckReentrancy(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.Children">
            <summary>Legt die Shim von JContainer.Children(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ClearItems">
            <summary>Legt die Shim von JContainer.ClearItems(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.CollectionChangedAddNotifyCollectionChangedEventHandler">
            <summary>Legt die Shim von JContainer.add_CollectionChanged(JContainer this, NotifyCollectionChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.CollectionChangedRemoveNotifyCollectionChangedEventHandler">
            <summary>Legt die Shim von JContainer.remove_CollectionChanged(JContainer this, NotifyCollectionChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ContainsItemJToken">
            <summary>Legt die Shim von JContainer.ContainsItem(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ContentsEqualJContainer">
            <summary>Legt die Shim von JContainer.ContentsEqual(JContainer this, JContainer container) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ContentsHashCode">
            <summary>Legt die Shim von JContainer.ContentsHashCode(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.CopyItemsToArrayInt32">
            <summary>Legt die Shim von JContainer.CopyItemsTo(JContainer this, Array array, Int32 arrayIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.CountGet">
            <summary>Legt die Shim von JContainer.get_Count(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.CreateChildrenCollection">
            <summary>Legt die Shim von JContainer.CreateChildrenCollection(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.CreateWriter">
            <summary>Legt die Shim von JContainer.CreateWriter(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.Descendants">
            <summary>Legt die Shim von JContainer.Descendants(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.DescendantsAndSelf">
            <summary>Legt die Shim von JContainer.DescendantsAndSelf(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.EnsureParentTokenJTokenBoolean">
            <summary>Legt die Shim von JContainer.EnsureParentToken(JContainer this, JToken item, Boolean skipParentCheck) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.EnsureValueObject">
            <summary>Legt die Shim von JContainer.EnsureValue(JContainer this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.FirstGet">
            <summary>Legt die Shim von JContainer.get_First(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.GetDescendantsBoolean">
            <summary>Legt die Shim von JContainer.GetDescendants(JContainer this, Boolean self) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.GetItemInt32">
            <summary>Legt die Shim von JContainer.GetItem(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.HasValuesGet">
            <summary>Legt die Shim von JContainer.get_HasValues(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.InsertItemInt32JTokenBoolean">
            <summary>Legt die Shim von JContainer.InsertItem(JContainer this, Int32 index, JToken item, Boolean skipParentCheck) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Legt die Shim von JContainer.System.Collections.IList.get_IsFixedSize(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.IsMultiContentObject">
            <summary>Legt die Shim von JContainer.IsMultiContent(JContainer this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.IsReadOnlySystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenget">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.get_IsReadOnly(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>Legt die Shim von JContainer.System.Collections.IList.get_IsReadOnly(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.IsSortedSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_IsSorted(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Legt die Shim von JContainer.System.Collections.ICollection.get_IsSynchronized(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ItemSystemCollectionsGenericIListNewtonsoftJsonLinqJTokengetInt32">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.IList&lt;Newtonsoft.Json.Linq.JToken&gt;.get_Item(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ItemSystemCollectionsGenericIListNewtonsoftJsonLinqJTokensetInt32JToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.IList&lt;Newtonsoft.Json.Linq.JToken&gt;.set_Item(JContainer this, Int32 index, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Legt die Shim von JContainer.System.Collections.IList.get_Item(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Legt die Shim von JContainer.System.Collections.IList.set_Item(JContainer this, Int32 index, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.LastGet">
            <summary>Legt die Shim von JContainer.get_Last(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ListChangedAddListChangedEventHandler">
            <summary>Legt die Shim von JContainer.add_ListChanged(JContainer this, ListChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ListChangedRemoveListChangedEventHandler">
            <summary>Legt die Shim von JContainer.remove_ListChanged(JContainer this, ListChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.MergeObject">
            <summary>Legt die Shim von JContainer.Merge(JContainer this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.MergeObjectJsonMergeSettings">
            <summary>Legt die Shim von JContainer.Merge(JContainer this, Object content, JsonMergeSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.OnAddingNewAddingNewEventArgs">
            <summary>Legt die Shim von JContainer.OnAddingNew(JContainer this, AddingNewEventArgs e) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>Legt die Shim von JContainer.OnCollectionChanged(JContainer this, NotifyCollectionChangedEventArgs e) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.OnListChangedListChangedEventArgs">
            <summary>Legt die Shim von JContainer.OnListChanged(JContainer this, ListChangedEventArgs e) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ReadContentFromAsyncJsonReaderJsonLoadSettingsCancellationToken">
            <summary>Legt die Shim von JContainer.ReadContentFromAsync(JContainer this, JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ReadContentFromJsonReaderJsonLoadSettings">
            <summary>Legt die Shim von JContainer.ReadContentFrom(JContainer this, JsonReader r, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ReadTokenFromAsyncJsonReaderJsonLoadSettingsCancellationToken">
            <summary>Legt die Shim von JContainer.ReadTokenFromAsync(JContainer this, JsonReader reader, JsonLoadSettings options, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ReadTokenFromJsonReaderJsonLoadSettings">
            <summary>Legt die Shim von JContainer.ReadTokenFrom(JContainer this, JsonReader reader, JsonLoadSettings options) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.RemoveAll">
            <summary>Legt die Shim von JContainer.RemoveAll(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.RemoveItemAtInt32">
            <summary>Legt die Shim von JContainer.RemoveItemAt(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.RemoveItemJToken">
            <summary>Legt die Shim von JContainer.RemoveItem(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ReplaceAllObject">
            <summary>Legt die Shim von JContainer.ReplaceAll(JContainer this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ReplaceItemJTokenJToken">
            <summary>Legt die Shim von JContainer.ReplaceItem(JContainer this, JToken existing, JToken replacement) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SetItemInt32JToken">
            <summary>Legt die Shim von JContainer.SetItem(JContainer this, Int32 index, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SortDirectionSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_SortDirection(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SortPropertySystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_SortProperty(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SupportsChangeNotificationSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_SupportsChangeNotification(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SupportsSearchingSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_SupportsSearching(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SupportsSortingSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_SupportsSorting(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Legt die Shim von JContainer.System.Collections.ICollection.get_SyncRoot(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenAddJToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.Add(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenClear">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.Clear(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenContainsJToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.Contains(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenCopyToJTokenArrayInt32">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.CopyTo(JContainer this, JToken[] array, Int32 arrayIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenRemoveJToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.Remove(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsGenericIListNewtonsoftJsonLinqJTokenIndexOfJToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.IList&lt;Newtonsoft.Json.Linq.JToken&gt;.IndexOf(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsGenericIListNewtonsoftJsonLinqJTokenInsertInt32JToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.IList&lt;Newtonsoft.Json.Linq.JToken&gt;.Insert(JContainer this, Int32 index, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsGenericIListNewtonsoftJsonLinqJTokenRemoveAtInt32">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.IList&lt;Newtonsoft.Json.Linq.JToken&gt;.RemoveAt(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Legt die Shim von JContainer.System.Collections.ICollection.CopyTo(JContainer this, Array array, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsIListAddObject">
            <summary>Legt die Shim von JContainer.System.Collections.IList.Add(JContainer this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsIListClear">
            <summary>Legt die Shim von JContainer.System.Collections.IList.Clear(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Legt die Shim von JContainer.System.Collections.IList.Contains(JContainer this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Legt die Shim von JContainer.System.Collections.IList.IndexOf(JContainer this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Legt die Shim von JContainer.System.Collections.IList.Insert(JContainer this, Int32 index, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>Legt die Shim von JContainer.System.Collections.IList.RemoveAt(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Legt die Shim von JContainer.System.Collections.IList.Remove(JContainer this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemComponentModelIBindingListAddIndexPropertyDescriptor">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.AddIndex(JContainer this, PropertyDescriptor property) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemComponentModelIBindingListAddNew">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.AddNew(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemComponentModelIBindingListApplySortPropertyDescriptorListSortDirection">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.ApplySort(JContainer this, PropertyDescriptor property, ListSortDirection direction) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemComponentModelIBindingListFindPropertyDescriptorObject">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.Find(JContainer this, PropertyDescriptor property, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemComponentModelIBindingListRemoveIndexPropertyDescriptor">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.RemoveIndex(JContainer this, PropertyDescriptor property) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemComponentModelIBindingListRemoveSort">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.RemoveSort(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemComponentModelITypedListGetItemPropertiesPropertyDescriptorArray">
            <summary>Legt die Shim von JContainer.System.ComponentModel.ITypedList.GetItemProperties(JContainer this, PropertyDescriptor[] listAccessors) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.SystemComponentModelITypedListGetListNamePropertyDescriptorArray">
            <summary>Legt die Shim von JContainer.System.ComponentModel.ITypedList.GetListName(JContainer this, PropertyDescriptor[] listAccessors) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ValidateTokenJTokenJToken">
            <summary>Legt die Shim von JContainer.ValidateToken(JContainer this, JToken o, JToken existing) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllInstances.ValuesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JContainer,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Legt die Shim von JContainer.Values(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllowEditSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_AllowEdit(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllowNewSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_AllowNew(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.AllowRemoveSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_AllowRemove(JContainer this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(Newtonsoft.Json.IJsonLineInfo)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(System.Collections.ICollection)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(System.Collections.IList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(System.Collections.Generic.ICollection{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(System.Collections.Generic.IList{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(System.ComponentModel.IBindingList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(System.ComponentModel.ITypedList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.CheckReentrancy">
            <summary>Legt die Shim von JContainer.CheckReentrancy(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Children">
            <summary>Legt die Shim von JContainer.Children(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ClearItems">
            <summary>Legt die Shim von JContainer.ClearItems(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.CollectionChangedAddNotifyCollectionChangedEventHandler">
            <summary>Legt die Shim von JContainer.add_CollectionChanged(JContainer this, NotifyCollectionChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.CollectionChangedRemoveNotifyCollectionChangedEventHandler">
            <summary>Legt die Shim von JContainer.remove_CollectionChanged(JContainer this, NotifyCollectionChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Constructor">
            <summary>Legt die Shim von JContainer.JContainer(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ConstructorJContainer">
            <summary>Legt die Shim von JContainer.JContainer(JContainer this, JContainer other) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ContainsItemJToken">
            <summary>Legt die Shim von JContainer.ContainsItem(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ContentsEqualJContainer">
            <summary>Legt die Shim von JContainer.ContentsEqual(JContainer this, JContainer container) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ContentsHashCode">
            <summary>Legt die Shim von JContainer.ContentsHashCode(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.CopyItemsToArrayInt32">
            <summary>Legt die Shim von JContainer.CopyItemsTo(JContainer this, Array array, Int32 arrayIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.CountGet">
            <summary>Legt die Shim von JContainer.get_Count(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.CreateChildrenCollection">
            <summary>Legt die Shim von JContainer.CreateChildrenCollection(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.CreateFromContentObject">
            <summary>Legt die Shim von JContainer.CreateFromContent(Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.CreateWriter">
            <summary>Legt die Shim von JContainer.CreateWriter(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.Descendants">
            <summary>Legt die Shim von JContainer.Descendants(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.DescendantsAndSelf">
            <summary>Legt die Shim von JContainer.DescendantsAndSelf(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.EnsureParentTokenJTokenBoolean">
            <summary>Legt die Shim von JContainer.EnsureParentToken(JContainer this, JToken item, Boolean skipParentCheck) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.EnsureValueObject">
            <summary>Legt die Shim von JContainer.EnsureValue(JContainer this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.FirstGet">
            <summary>Legt die Shim von JContainer.get_First(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.GetDescendantsBoolean">
            <summary>Legt die Shim von JContainer.GetDescendants(JContainer this, Boolean self) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.GetItemInt32">
            <summary>Legt die Shim von JContainer.GetItem(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.HasValuesGet">
            <summary>Legt die Shim von JContainer.get_HasValues(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.InsertItemInt32JTokenBoolean">
            <summary>Legt die Shim von JContainer.InsertItem(JContainer this, Int32 index, JToken item, Boolean skipParentCheck) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.IsFixedSizeSystemCollectionsIListget">
            <summary>Legt die Shim von JContainer.System.Collections.IList.get_IsFixedSize(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.IsMultiContentObject">
            <summary>Legt die Shim von JContainer.IsMultiContent(JContainer this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.IsReadOnlySystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenget">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.get_IsReadOnly(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.IsReadOnlySystemCollectionsIListget">
            <summary>Legt die Shim von JContainer.System.Collections.IList.get_IsReadOnly(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.IsSortedSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_IsSorted(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Legt die Shim von JContainer.System.Collections.ICollection.get_IsSynchronized(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.IsTokenUnchangedJTokenJToken">
            <summary>Legt die Shim von JContainer.IsTokenUnchanged(JToken currentValue, JToken newValue) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ItemSystemCollectionsGenericIListNewtonsoftJsonLinqJTokengetInt32">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.IList&lt;Newtonsoft.Json.Linq.JToken&gt;.get_Item(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ItemSystemCollectionsGenericIListNewtonsoftJsonLinqJTokensetInt32JToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.IList&lt;Newtonsoft.Json.Linq.JToken&gt;.set_Item(JContainer this, Int32 index, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ItemSystemCollectionsIListgetInt32">
            <summary>Legt die Shim von JContainer.System.Collections.IList.get_Item(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ItemSystemCollectionsIListsetInt32Object">
            <summary>Legt die Shim von JContainer.System.Collections.IList.set_Item(JContainer this, Int32 index, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.LastGet">
            <summary>Legt die Shim von JContainer.get_Last(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ListChangedAddListChangedEventHandler">
            <summary>Legt die Shim von JContainer.add_ListChanged(JContainer this, ListChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ListChangedRemoveListChangedEventHandler">
            <summary>Legt die Shim von JContainer.remove_ListChanged(JContainer this, ListChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.MergeEnumerableContentJContainerIEnumerableJsonMergeSettings">
            <summary>Legt die Shim von JContainer.MergeEnumerableContent(JContainer target, IEnumerable content, JsonMergeSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.MergeObject">
            <summary>Legt die Shim von JContainer.Merge(JContainer this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.MergeObjectJsonMergeSettings">
            <summary>Legt die Shim von JContainer.Merge(JContainer this, Object content, JsonMergeSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.OnAddingNewAddingNewEventArgs">
            <summary>Legt die Shim von JContainer.OnAddingNew(JContainer this, AddingNewEventArgs e) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.OnCollectionChangedNotifyCollectionChangedEventArgs">
            <summary>Legt die Shim von JContainer.OnCollectionChanged(JContainer this, NotifyCollectionChangedEventArgs e) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.OnListChangedListChangedEventArgs">
            <summary>Legt die Shim von JContainer.OnListChanged(JContainer this, ListChangedEventArgs e) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ReadContentFromAsyncJsonReaderJsonLoadSettingsCancellationToken">
            <summary>Legt die Shim von JContainer.ReadContentFromAsync(JContainer this, JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ReadContentFromJsonReaderJsonLoadSettings">
            <summary>Legt die Shim von JContainer.ReadContentFrom(JContainer this, JsonReader r, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ReadTokenFromAsyncJsonReaderJsonLoadSettingsCancellationToken">
            <summary>Legt die Shim von JContainer.ReadTokenFromAsync(JContainer this, JsonReader reader, JsonLoadSettings options, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ReadTokenFromJsonReaderJsonLoadSettings">
            <summary>Legt die Shim von JContainer.ReadTokenFrom(JContainer this, JsonReader reader, JsonLoadSettings options) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.RemoveAll">
            <summary>Legt die Shim von JContainer.RemoveAll(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.RemoveItemAtInt32">
            <summary>Legt die Shim von JContainer.RemoveItemAt(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.RemoveItemJToken">
            <summary>Legt die Shim von JContainer.RemoveItem(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ReplaceAllObject">
            <summary>Legt die Shim von JContainer.ReplaceAll(JContainer this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ReplaceItemJTokenJToken">
            <summary>Legt die Shim von JContainer.ReplaceItem(JContainer this, JToken existing, JToken replacement) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SetItemInt32JToken">
            <summary>Legt die Shim von JContainer.SetItem(JContainer this, Int32 index, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SortDirectionSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_SortDirection(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SortPropertySystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_SortProperty(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SupportsChangeNotificationSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_SupportsChangeNotification(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SupportsSearchingSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_SupportsSearching(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SupportsSortingSystemComponentModelIBindingListget">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.get_SupportsSorting(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SyncRootSystemCollectionsICollectionget">
            <summary>Legt die Shim von JContainer.System.Collections.ICollection.get_SyncRoot(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenAddJToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.Add(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenClear">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.Clear(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenContainsJToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.Contains(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenCopyToJTokenArrayInt32">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.CopyTo(JContainer this, JToken[] array, Int32 arrayIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsGenericICollectionNewtonsoftJsonLinqJTokenRemoveJToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.ICollection&lt;Newtonsoft.Json.Linq.JToken&gt;.Remove(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsGenericIListNewtonsoftJsonLinqJTokenIndexOfJToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.IList&lt;Newtonsoft.Json.Linq.JToken&gt;.IndexOf(JContainer this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsGenericIListNewtonsoftJsonLinqJTokenInsertInt32JToken">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.IList&lt;Newtonsoft.Json.Linq.JToken&gt;.Insert(JContainer this, Int32 index, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsGenericIListNewtonsoftJsonLinqJTokenRemoveAtInt32">
            <summary>Legt die Shim von JContainer.System.Collections.Generic.IList&lt;Newtonsoft.Json.Linq.JToken&gt;.RemoveAt(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Legt die Shim von JContainer.System.Collections.ICollection.CopyTo(JContainer this, Array array, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsIListAddObject">
            <summary>Legt die Shim von JContainer.System.Collections.IList.Add(JContainer this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsIListClear">
            <summary>Legt die Shim von JContainer.System.Collections.IList.Clear(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsIListContainsObject">
            <summary>Legt die Shim von JContainer.System.Collections.IList.Contains(JContainer this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsIListIndexOfObject">
            <summary>Legt die Shim von JContainer.System.Collections.IList.IndexOf(JContainer this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsIListInsertInt32Object">
            <summary>Legt die Shim von JContainer.System.Collections.IList.Insert(JContainer this, Int32 index, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsIListRemoveAtInt32">
            <summary>Legt die Shim von JContainer.System.Collections.IList.RemoveAt(JContainer this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemCollectionsIListRemoveObject">
            <summary>Legt die Shim von JContainer.System.Collections.IList.Remove(JContainer this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemComponentModelIBindingListAddIndexPropertyDescriptor">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.AddIndex(JContainer this, PropertyDescriptor property) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemComponentModelIBindingListAddNew">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.AddNew(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemComponentModelIBindingListApplySortPropertyDescriptorListSortDirection">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.ApplySort(JContainer this, PropertyDescriptor property, ListSortDirection direction) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemComponentModelIBindingListFindPropertyDescriptorObject">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.Find(JContainer this, PropertyDescriptor property, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemComponentModelIBindingListRemoveIndexPropertyDescriptor">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.RemoveIndex(JContainer this, PropertyDescriptor property) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemComponentModelIBindingListRemoveSort">
            <summary>Legt die Shim von JContainer.System.ComponentModel.IBindingList.RemoveSort(JContainer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemComponentModelITypedListGetItemPropertiesPropertyDescriptorArray">
            <summary>Legt die Shim von JContainer.System.ComponentModel.ITypedList.GetItemProperties(JContainer this, PropertyDescriptor[] listAccessors) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.SystemComponentModelITypedListGetListNamePropertyDescriptorArray">
            <summary>Legt die Shim von JContainer.System.ComponentModel.ITypedList.GetListName(JContainer this, PropertyDescriptor[] listAccessors) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ValidateTokenJTokenJToken">
            <summary>Legt die Shim von JContainer.ValidateToken(JContainer this, JToken o, JToken existing) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJContainer.ValuesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Legt die Shim von JContainer.Values(JContainer this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJEnumerable`1">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JEnumerable&lt;T&gt;</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJEnumerable`1.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJEnumerable`1.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJEnumerable`1.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJEnumerable`1.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJEnumerable`1.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJEnumerable`1.StaticConstructor">
            <summary>Legt die Shim von JEnumerable`1.JEnumerable`1() fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJObject">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JObject</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AddStringJToken">
            <summary>Legt die Shim von JObject.Add(JObject this, String propertyName, JToken value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.AddStringJToken">
            <summary>Legt die Shim von JObject.Add(JObject this, String propertyName, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.ChildrenTokensGet">
            <summary>Legt die Shim von JObject.get_ChildrenTokens(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.CloneToken">
            <summary>Legt die Shim von JObject.CloneToken(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.DeepEqualsJToken">
            <summary>Legt die Shim von JObject.DeepEquals(JObject this, JToken node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.GetDeepHashCode">
            <summary>Legt die Shim von JObject.GetDeepHashCode(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.GetEnumerator">
            <summary>Legt die Shim von JObject.GetEnumerator(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.GetMetaObjectExpression">
            <summary>Legt die Shim von JObject.GetMetaObject(JObject this, Expression parameter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.GetValueString">
            <summary>Legt die Shim von JObject.GetValue(JObject this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.GetValueStringStringComparison">
            <summary>Legt die Shim von JObject.GetValue(JObject this, String propertyName, StringComparison comparison) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.IndexOfItemJToken">
            <summary>Legt die Shim von JObject.IndexOfItem(JObject this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.InsertItemInt32JTokenBoolean">
            <summary>Legt die Shim von JObject.InsertItem(JObject this, Int32 index, JToken item, Boolean skipParentCheck) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.InternalPropertyChangedJProperty">
            <summary>Legt die Shim von JObject.InternalPropertyChanged(JObject this, JProperty childProperty) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.InternalPropertyChangingJProperty">
            <summary>Legt die Shim von JObject.InternalPropertyChanging(JObject this, JProperty childProperty) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.IsReadOnlySystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenget">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.get_IsReadOnly(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.ItemGetObject">
            <summary>Legt die Shim von JObject.get_Item(JObject this, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.ItemGetString">
            <summary>Legt die Shim von JObject.get_Item(JObject this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.ItemSetObjectJToken">
            <summary>Legt die Shim von JObject.set_Item(JObject this, Object key, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.ItemSetStringJToken">
            <summary>Legt die Shim von JObject.set_Item(JObject this, String propertyName, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.KeysSystemCollectionsGenericIDictionarySystemStringNewtonsoftJsonLinqJTokenget">
            <summary>Legt die Shim von JObject.System.Collections.Generic.IDictionary&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;.get_Keys(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.MergeItemObjectJsonMergeSettings">
            <summary>Legt die Shim von JObject.MergeItem(JObject this, Object content, JsonMergeSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.OnPropertyChangedString">
            <summary>Legt die Shim von JObject.OnPropertyChanged(JObject this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.OnPropertyChangingString">
            <summary>Legt die Shim von JObject.OnPropertyChanging(JObject this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.Properties">
            <summary>Legt die Shim von JObject.Properties(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Legt die Shim von JObject.add_PropertyChanged(JObject this, PropertyChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Legt die Shim von JObject.remove_PropertyChanged(JObject this, PropertyChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.PropertyChangingAddPropertyChangingEventHandler">
            <summary>Legt die Shim von JObject.add_PropertyChanging(JObject this, PropertyChangingEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.PropertyChangingRemovePropertyChangingEventHandler">
            <summary>Legt die Shim von JObject.remove_PropertyChanging(JObject this, PropertyChangingEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.PropertyString">
            <summary>Legt die Shim von JObject.Property(JObject this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.PropertyValues">
            <summary>Legt die Shim von JObject.PropertyValues(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.RemoveString">
            <summary>Legt die Shim von JObject.Remove(JObject this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenAddKeyValuePairOfStringJToken">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.Add(JObject this, KeyValuePair`2 item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenClear">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.Clear(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenContainsKeyValuePairOfStringJToken">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.Contains(JObject this, KeyValuePair`2 item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenCopyToKeyValuePairOfStringJTokenArrayInt32">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.CopyTo(JObject this, KeyValuePair`2[] array, Int32 arrayIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenRemoveKeyValuePairOfStringJToken">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.Remove(JObject this, KeyValuePair`2 item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemCollectionsGenericIDictionarySystemStringNewtonsoftJsonLinqJTokenContainsKeyString">
            <summary>Legt die Shim von JObject.System.Collections.Generic.IDictionary&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;.ContainsKey(JObject this, String key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetAttributes">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetClassName">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetComponentName">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetComponentName(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetConverter">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetDefaultEvent">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetDefaultProperty">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetEditorType">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetEditor(JObject this, Type editorBaseType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetEvents">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetEventsAttributeArray">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(JObject this, Attribute[] attributes) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetProperties">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetPropertiesAttributeArray">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(JObject this, Attribute[] attributes) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.SystemComponentModelICustomTypeDescriptorGetPropertyOwnerPropertyDescriptor">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(JObject this, PropertyDescriptor pd) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.TryGetValueStringJTokenOut">
            <summary>Legt die Shim von JObject.TryGetValue(JObject this, String propertyName, JToken* value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.TryGetValueStringStringComparisonJTokenOut">
            <summary>Legt die Shim von JObject.TryGetValue(JObject this, String propertyName, StringComparison comparison, JToken* value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.TypeGet">
            <summary>Legt die Shim von JObject.get_Type(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.ValidateTokenJTokenJToken">
            <summary>Legt die Shim von JObject.ValidateToken(JObject this, JToken o, JToken existing) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.ValuesSystemCollectionsGenericIDictionarySystemStringNewtonsoftJsonLinqJTokenget">
            <summary>Legt die Shim von JObject.System.Collections.Generic.IDictionary&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;.get_Values(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JObject.WriteToAsync(JObject this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.AllInstances.WriteToJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JObject.WriteTo(JObject this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(Newtonsoft.Json.IJsonLineInfo)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.Collections.ICollection)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.Collections.IList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.Collections.Generic.ICollection{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Newtonsoft.Json.Linq.JToken}})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Newtonsoft.Json.Linq.JToken}})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.Collections.Generic.IList{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.ComponentModel.IBindingList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.ComponentModel.INotifyPropertyChanging)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.ComponentModel.ITypedList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJObject.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ChildrenTokensGet">
            <summary>Legt die Shim von JObject.get_ChildrenTokens(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.CloneToken">
            <summary>Legt die Shim von JObject.CloneToken(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.Constructor">
            <summary>Legt die Shim von JObject.JObject(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ConstructorJObject">
            <summary>Legt die Shim von JObject.JObject(JObject this, JObject other) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ConstructorObject">
            <summary>Legt die Shim von JObject.JObject(JObject this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ConstructorObjectArray">
            <summary>Legt die Shim von JObject.JObject(JObject this, Object[] content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.DeepEqualsJToken">
            <summary>Legt die Shim von JObject.DeepEquals(JObject this, JToken node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.FromObjectObject">
            <summary>Legt die Shim von JObject.FromObject(Object o) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.FromObjectObjectJsonSerializer">
            <summary>Legt die Shim von JObject.FromObject(Object o, JsonSerializer jsonSerializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.GetDeepHashCode">
            <summary>Legt die Shim von JObject.GetDeepHashCode(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.GetEnumerator">
            <summary>Legt die Shim von JObject.GetEnumerator(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.GetMetaObjectExpression">
            <summary>Legt die Shim von JObject.GetMetaObject(JObject this, Expression parameter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.GetValueString">
            <summary>Legt die Shim von JObject.GetValue(JObject this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.GetValueStringStringComparison">
            <summary>Legt die Shim von JObject.GetValue(JObject this, String propertyName, StringComparison comparison) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.IndexOfItemJToken">
            <summary>Legt die Shim von JObject.IndexOfItem(JObject this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.InsertItemInt32JTokenBoolean">
            <summary>Legt die Shim von JObject.InsertItem(JObject this, Int32 index, JToken item, Boolean skipParentCheck) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.InternalPropertyChangedJProperty">
            <summary>Legt die Shim von JObject.InternalPropertyChanged(JObject this, JProperty childProperty) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.InternalPropertyChangingJProperty">
            <summary>Legt die Shim von JObject.InternalPropertyChanging(JObject this, JProperty childProperty) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.IsReadOnlySystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenget">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.get_IsReadOnly(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ItemGetObject">
            <summary>Legt die Shim von JObject.get_Item(JObject this, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ItemGetString">
            <summary>Legt die Shim von JObject.get_Item(JObject this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ItemSetObjectJToken">
            <summary>Legt die Shim von JObject.set_Item(JObject this, Object key, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ItemSetStringJToken">
            <summary>Legt die Shim von JObject.set_Item(JObject this, String propertyName, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.KeysSystemCollectionsGenericIDictionarySystemStringNewtonsoftJsonLinqJTokenget">
            <summary>Legt die Shim von JObject.System.Collections.Generic.IDictionary&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;.get_Keys(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.LoadAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JObject.LoadAsync(JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.LoadAsyncJsonReaderJsonLoadSettingsCancellationToken">
            <summary>Legt die Shim von JObject.LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.LoadJsonReader">
            <summary>Legt die Shim von JObject.Load(JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.LoadJsonReaderJsonLoadSettings">
            <summary>Legt die Shim von JObject.Load(JsonReader reader, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.MergeItemObjectJsonMergeSettings">
            <summary>Legt die Shim von JObject.MergeItem(JObject this, Object content, JsonMergeSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.OnPropertyChangedString">
            <summary>Legt die Shim von JObject.OnPropertyChanged(JObject this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.OnPropertyChangingString">
            <summary>Legt die Shim von JObject.OnPropertyChanging(JObject this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ParseString">
            <summary>Legt die Shim von JObject.Parse(String json) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ParseStringJsonLoadSettings">
            <summary>Legt die Shim von JObject.Parse(String json, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.Properties">
            <summary>Legt die Shim von JObject.Properties(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Legt die Shim von JObject.add_PropertyChanged(JObject this, PropertyChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Legt die Shim von JObject.remove_PropertyChanged(JObject this, PropertyChangedEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.PropertyChangingAddPropertyChangingEventHandler">
            <summary>Legt die Shim von JObject.add_PropertyChanging(JObject this, PropertyChangingEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.PropertyChangingRemovePropertyChangingEventHandler">
            <summary>Legt die Shim von JObject.remove_PropertyChanging(JObject this, PropertyChangingEventHandler value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.PropertyString">
            <summary>Legt die Shim von JObject.Property(JObject this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.PropertyValues">
            <summary>Legt die Shim von JObject.PropertyValues(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.RemoveString">
            <summary>Legt die Shim von JObject.Remove(JObject this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenAddKeyValuePairOfStringJToken">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.Add(JObject this, KeyValuePair`2 item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenClear">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.Clear(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenContainsKeyValuePairOfStringJToken">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.Contains(JObject this, KeyValuePair`2 item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenCopyToKeyValuePairOfStringJTokenArrayInt32">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.CopyTo(JObject this, KeyValuePair`2[] array, Int32 arrayIndex) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringNewtonsoftJsonLinqJTokenRemoveKeyValuePairOfStringJToken">
            <summary>Legt die Shim von JObject.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;&gt;.Remove(JObject this, KeyValuePair`2 item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemCollectionsGenericIDictionarySystemStringNewtonsoftJsonLinqJTokenContainsKeyString">
            <summary>Legt die Shim von JObject.System.Collections.Generic.IDictionary&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;.ContainsKey(JObject this, String key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetAttributes">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetClassName">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetComponentName">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetComponentName(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetConverter">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetDefaultEvent">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetDefaultProperty">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetEditorType">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetEditor(JObject this, Type editorBaseType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetEvents">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetEventsAttributeArray">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(JObject this, Attribute[] attributes) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetProperties">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetPropertiesAttributeArray">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(JObject this, Attribute[] attributes) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.SystemComponentModelICustomTypeDescriptorGetPropertyOwnerPropertyDescriptor">
            <summary>Legt die Shim von JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(JObject this, PropertyDescriptor pd) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.TryGetValueStringJTokenOut">
            <summary>Legt die Shim von JObject.TryGetValue(JObject this, String propertyName, JToken* value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.TryGetValueStringStringComparisonJTokenOut">
            <summary>Legt die Shim von JObject.TryGetValue(JObject this, String propertyName, StringComparison comparison, JToken* value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.TypeGet">
            <summary>Legt die Shim von JObject.get_Type(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ValidateTokenJTokenJToken">
            <summary>Legt die Shim von JObject.ValidateToken(JObject this, JToken o, JToken existing) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.ValuesSystemCollectionsGenericIDictionarySystemStringNewtonsoftJsonLinqJTokenget">
            <summary>Legt die Shim von JObject.System.Collections.Generic.IDictionary&lt;System.String,Newtonsoft.Json.Linq.JToken&gt;.get_Values(JObject this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JObject.WriteToAsync(JObject this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJObject.WriteToJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JObject.WriteTo(JObject this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJProperty">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JProperty</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.#ctor(Newtonsoft.Json.Linq.JProperty)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.ChildrenTokensGet">
            <summary>Legt die Shim von JProperty.get_ChildrenTokens(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.ClearItems">
            <summary>Legt die Shim von JProperty.ClearItems(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.CloneToken">
            <summary>Legt die Shim von JProperty.CloneToken(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.ContainsItemJToken">
            <summary>Legt die Shim von JProperty.ContainsItem(JProperty this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.DeepEqualsJToken">
            <summary>Legt die Shim von JProperty.DeepEquals(JProperty this, JToken node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.GetDeepHashCode">
            <summary>Legt die Shim von JProperty.GetDeepHashCode(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.GetItemInt32">
            <summary>Legt die Shim von JProperty.GetItem(JProperty this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.IndexOfItemJToken">
            <summary>Legt die Shim von JProperty.IndexOfItem(JProperty this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.InsertItemInt32JTokenBoolean">
            <summary>Legt die Shim von JProperty.InsertItem(JProperty this, Int32 index, JToken item, Boolean skipParentCheck) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.MergeItemObjectJsonMergeSettings">
            <summary>Legt die Shim von JProperty.MergeItem(JProperty this, Object content, JsonMergeSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.NameGet">
            <summary>Legt die Shim von JProperty.get_Name(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.RemoveItemAtInt32">
            <summary>Legt die Shim von JProperty.RemoveItemAt(JProperty this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.RemoveItemJToken">
            <summary>Legt die Shim von JProperty.RemoveItem(JProperty this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.SetItemInt32JToken">
            <summary>Legt die Shim von JProperty.SetItem(JProperty this, Int32 index, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.TypeGet">
            <summary>Legt die Shim von JProperty.get_Type(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.ValueGet">
            <summary>Legt die Shim von JProperty.get_Value(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.ValueSetJToken">
            <summary>Legt die Shim von JProperty.set_Value(JProperty this, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JProperty.WriteToAsync(JProperty this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.WriteToAsyncTaskJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JProperty.WriteToAsync(JProperty this, Task task, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.WriteToJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JProperty.WriteTo(JProperty this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.AllInstances.WriteValueAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JProperty.WriteValueAsync(JProperty this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(Newtonsoft.Json.IJsonLineInfo)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(System.Collections.ICollection)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(System.Collections.IList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(System.Collections.Generic.ICollection{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(System.Collections.Generic.IList{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(System.ComponentModel.IBindingList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(System.ComponentModel.ITypedList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJProperty.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.ChildrenTokensGet">
            <summary>Legt die Shim von JProperty.get_ChildrenTokens(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.ClearItems">
            <summary>Legt die Shim von JProperty.ClearItems(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.CloneToken">
            <summary>Legt die Shim von JProperty.CloneToken(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.ConstructorJProperty">
            <summary>Legt die Shim von JProperty.JProperty(JProperty this, JProperty other) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.ConstructorString">
            <summary>Legt die Shim von JProperty.JProperty(JProperty this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.ConstructorStringObject">
            <summary>Legt die Shim von JProperty.JProperty(JProperty this, String name, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.ConstructorStringObjectArray">
            <summary>Legt die Shim von JProperty.JProperty(JProperty this, String name, Object[] content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.ContainsItemJToken">
            <summary>Legt die Shim von JProperty.ContainsItem(JProperty this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.DeepEqualsJToken">
            <summary>Legt die Shim von JProperty.DeepEquals(JProperty this, JToken node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.GetDeepHashCode">
            <summary>Legt die Shim von JProperty.GetDeepHashCode(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.GetItemInt32">
            <summary>Legt die Shim von JProperty.GetItem(JProperty this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.IndexOfItemJToken">
            <summary>Legt die Shim von JProperty.IndexOfItem(JProperty this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.InsertItemInt32JTokenBoolean">
            <summary>Legt die Shim von JProperty.InsertItem(JProperty this, Int32 index, JToken item, Boolean skipParentCheck) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.LoadAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JProperty.LoadAsync(JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.LoadAsyncJsonReaderJsonLoadSettingsCancellationToken">
            <summary>Legt die Shim von JProperty.LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.LoadJsonReader">
            <summary>Legt die Shim von JProperty.Load(JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.LoadJsonReaderJsonLoadSettings">
            <summary>Legt die Shim von JProperty.Load(JsonReader reader, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.MergeItemObjectJsonMergeSettings">
            <summary>Legt die Shim von JProperty.MergeItem(JProperty this, Object content, JsonMergeSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.NameGet">
            <summary>Legt die Shim von JProperty.get_Name(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.RemoveItemAtInt32">
            <summary>Legt die Shim von JProperty.RemoveItemAt(JProperty this, Int32 index) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.RemoveItemJToken">
            <summary>Legt die Shim von JProperty.RemoveItem(JProperty this, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.SetItemInt32JToken">
            <summary>Legt die Shim von JProperty.SetItem(JProperty this, Int32 index, JToken item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.TypeGet">
            <summary>Legt die Shim von JProperty.get_Type(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.ValueGet">
            <summary>Legt die Shim von JProperty.get_Value(JProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.ValueSetJToken">
            <summary>Legt die Shim von JProperty.set_Value(JProperty this, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JProperty.WriteToAsync(JProperty this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.WriteToAsyncTaskJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JProperty.WriteToAsync(JProperty this, Task task, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.WriteToJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JProperty.WriteTo(JProperty this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJProperty.WriteValueAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JProperty.WriteValueAsync(JProperty this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JPropertyDescriptor</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.#ctor(Newtonsoft.Json.Linq.JPropertyDescriptor)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.AllInstances.CanResetValueObject">
            <summary>Legt die Shim von JPropertyDescriptor.CanResetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.AllInstances.ComponentTypeGet">
            <summary>Legt die Shim von JPropertyDescriptor.get_ComponentType(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.AllInstances.GetValueObject">
            <summary>Legt die Shim von JPropertyDescriptor.GetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.AllInstances.IsReadOnlyGet">
            <summary>Legt die Shim von JPropertyDescriptor.get_IsReadOnly(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.AllInstances.NameHashCodeGet">
            <summary>Legt die Shim von JPropertyDescriptor.get_NameHashCode(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.AllInstances.PropertyTypeGet">
            <summary>Legt die Shim von JPropertyDescriptor.get_PropertyType(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.AllInstances.ResetValueObject">
            <summary>Legt die Shim von JPropertyDescriptor.ResetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.AllInstances.SetValueObjectObject">
            <summary>Legt die Shim von JPropertyDescriptor.SetValue(JPropertyDescriptor this, Object component, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.AllInstances.ShouldSerializeValueObject">
            <summary>Legt die Shim von JPropertyDescriptor.ShouldSerializeValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.CanResetValueObject">
            <summary>Legt die Shim von JPropertyDescriptor.CanResetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.CastInstanceObject">
            <summary>Legt die Shim von JPropertyDescriptor.CastInstance(Object instance) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.ComponentTypeGet">
            <summary>Legt die Shim von JPropertyDescriptor.get_ComponentType(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.ConstructorString">
            <summary>Legt die Shim von JPropertyDescriptor.JPropertyDescriptor(JPropertyDescriptor this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.GetValueObject">
            <summary>Legt die Shim von JPropertyDescriptor.GetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.IsReadOnlyGet">
            <summary>Legt die Shim von JPropertyDescriptor.get_IsReadOnly(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.NameHashCodeGet">
            <summary>Legt die Shim von JPropertyDescriptor.get_NameHashCode(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.PropertyTypeGet">
            <summary>Legt die Shim von JPropertyDescriptor.get_PropertyType(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.ResetValueObject">
            <summary>Legt die Shim von JPropertyDescriptor.ResetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.SetValueObjectObject">
            <summary>Legt die Shim von JPropertyDescriptor.SetValue(JPropertyDescriptor this, Object component, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJPropertyDescriptor.ShouldSerializeValueObject">
            <summary>Legt die Shim von JPropertyDescriptor.ShouldSerializeValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJRaw">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JRaw</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.#ctor(Newtonsoft.Json.Linq.JRaw)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJRaw.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJRaw.AllInstances.CloneToken">
            <summary>Legt die Shim von JRaw.CloneToken(JRaw this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Bind(Newtonsoft.Json.IJsonLineInfo)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Bind(Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Bind(System.IComparable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Bind(System.IConvertible)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Bind(System.IFormattable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Bind(System.IComparable{Newtonsoft.Json.Linq.JValue})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Bind(System.IEquatable{Newtonsoft.Json.Linq.JValue})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Bind(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJRaw.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJRaw.CloneToken">
            <summary>Legt die Shim von JRaw.CloneToken(JRaw this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJRaw.ConstructorJRaw">
            <summary>Legt die Shim von JRaw.JRaw(JRaw this, JRaw other) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJRaw.ConstructorObject">
            <summary>Legt die Shim von JRaw.JRaw(JRaw this, Object rawJson) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJRaw.CreateAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JRaw.CreateAsync(JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJRaw.CreateJsonReader">
            <summary>Legt die Shim von JRaw.Create(JsonReader reader) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJToken">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JToken</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.#ctor(Newtonsoft.Json.Linq.JToken)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AddAfterSelfObject">
            <summary>Legt die Shim von JToken.AddAfterSelf(JToken this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AddAnnotationObject">
            <summary>Legt die Shim von JToken.AddAnnotation(JToken this, Object annotation) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AddBeforeSelfObject">
            <summary>Legt die Shim von JToken.AddBeforeSelf(JToken this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AfterSelf">
            <summary>Legt die Shim von JToken.AfterSelf(JToken this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.AddAfterSelfObject">
            <summary>Legt die Shim von JToken.AddAfterSelf(JToken this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.AddAnnotationObject">
            <summary>Legt die Shim von JToken.AddAnnotation(JToken this, Object annotation) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.AddBeforeSelfObject">
            <summary>Legt die Shim von JToken.AddBeforeSelf(JToken this, Object content) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.AfterSelf">
            <summary>Legt die Shim von JToken.AfterSelf(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.Ancestors">
            <summary>Legt die Shim von JToken.Ancestors(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.AncestorsAndSelf">
            <summary>Legt die Shim von JToken.AncestorsAndSelf(JToken this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.AnnotationOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JToken,``0})">
            <summary>Legt die Shim von JToken.Annotation(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.AnnotationType">
            <summary>Legt die Shim von JToken.Annotation(JToken this, Type type) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.AnnotationsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JToken,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Legt die Shim von JToken.Annotations(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.AnnotationsType">
            <summary>Legt die Shim von JToken.Annotations(JToken this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.BeforeSelf">
            <summary>Legt die Shim von JToken.BeforeSelf(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.Children">
            <summary>Legt die Shim von JToken.Children(JToken this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ChildrenOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JEnumerable{``0}})">
            <summary>Legt die Shim von JToken.Children(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.CreateReader">
            <summary>Legt die Shim von JToken.CreateReader(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.DeepClone">
            <summary>Legt die Shim von JToken.DeepClone(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.FirstGet">
            <summary>Legt die Shim von JToken.get_First(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.GetAncestorsBoolean">
            <summary>Legt die Shim von JToken.GetAncestors(JToken this, Boolean self) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.GetMetaObjectExpression">
            <summary>Legt die Shim von JToken.GetMetaObject(JToken this, Expression parameter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ItemGetObject">
            <summary>Legt die Shim von JToken.get_Item(JToken this, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ItemNewtonsoftJsonLinqIJEnumerableNewtonsoftJsonLinqJTokengetObject">
            <summary>Legt die Shim von JToken.Newtonsoft.Json.Linq.IJEnumerable&lt;Newtonsoft.Json.Linq.JToken&gt;.get_Item(JToken this, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ItemSetObjectJToken">
            <summary>Legt die Shim von JToken.set_Item(JToken this, Object key, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.LastGet">
            <summary>Legt die Shim von JToken.get_Last(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.LineNumberNewtonsoftJsonIJsonLineInfoget">
            <summary>Legt die Shim von JToken.Newtonsoft.Json.IJsonLineInfo.get_LineNumber(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.LinePositionNewtonsoftJsonIJsonLineInfoget">
            <summary>Legt die Shim von JToken.Newtonsoft.Json.IJsonLineInfo.get_LinePosition(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.NewtonsoftJsonIJsonLineInfoHasLineInfo">
            <summary>Legt die Shim von JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.NextGet">
            <summary>Legt die Shim von JToken.get_Next(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.NextSetJToken">
            <summary>Legt die Shim von JToken.set_Next(JToken this, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ParentGet">
            <summary>Legt die Shim von JToken.get_Parent(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ParentSetJContainer">
            <summary>Legt die Shim von JToken.set_Parent(JToken this, JContainer value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.PathGet">
            <summary>Legt die Shim von JToken.get_Path(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.PreviousGet">
            <summary>Legt die Shim von JToken.get_Previous(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.PreviousSetJToken">
            <summary>Legt die Shim von JToken.set_Previous(JToken this, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.Remove">
            <summary>Legt die Shim von JToken.Remove(JToken this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.RemoveAnnotationsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Newtonsoft.Json.Linq.JToken})">
            <summary>Legt die Shim von JToken.RemoveAnnotations(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.RemoveAnnotationsType">
            <summary>Legt die Shim von JToken.RemoveAnnotations(JToken this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ReplaceJToken">
            <summary>Legt die Shim von JToken.Replace(JToken this, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.RootGet">
            <summary>Legt die Shim von JToken.get_Root(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.SelectTokenString">
            <summary>Legt die Shim von JToken.SelectToken(JToken this, String path) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.SelectTokenStringBoolean">
            <summary>Legt die Shim von JToken.SelectToken(JToken this, String path, Boolean errorWhenNoMatch) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.SelectTokensString">
            <summary>Legt die Shim von JToken.SelectTokens(JToken this, String path) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.SelectTokensStringBoolean">
            <summary>Legt die Shim von JToken.SelectTokens(JToken this, String path, Boolean errorWhenNoMatch) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.SetLineInfoIJsonLineInfoJsonLoadSettings">
            <summary>Legt die Shim von JToken.SetLineInfo(JToken this, IJsonLineInfo lineInfo, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.SetLineInfoInt32Int32">
            <summary>Legt die Shim von JToken.SetLineInfo(JToken this, Int32 lineNumber, Int32 linePosition) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.SystemCollectionsGenericIEnumerableNewtonsoftJsonLinqJTokenGetEnumerator">
            <summary>Legt die Shim von JToken.System.Collections.Generic.IEnumerable&lt;Newtonsoft.Json.Linq.JToken&gt;.GetEnumerator(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die Shim von JToken.System.Collections.IEnumerable.GetEnumerator(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.SystemDynamicIDynamicMetaObjectProviderGetMetaObjectExpression">
            <summary>Legt die Shim von JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(JToken this, Expression parameter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.SystemICloneableClone">
            <summary>Legt die Shim von JToken.System.ICloneable.Clone(JToken this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ToObjectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JToken,``0})">
            <summary>Legt die Shim von JToken.ToObject(JToken this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ToObjectOf1JsonSerializer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.JsonSerializer,``0})">
            <summary>Legt die Shim von JToken.ToObject(JToken this, JsonSerializer jsonSerializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ToObjectType">
            <summary>Legt die Shim von JToken.ToObject(JToken this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ToObjectTypeJsonSerializer">
            <summary>Legt die Shim von JToken.ToObject(JToken this, Type objectType, JsonSerializer jsonSerializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ToString01">
            <summary>Legt die Shim von JToken.ToString(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ToStringFormattingJsonConverterArray">
            <summary>Legt die Shim von JToken.ToString(JToken this, Formatting formatting, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ValueOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JToken,System.Object,``0})">
            <summary>Legt die Shim von JToken.Value(JToken this, Object key) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.ValuesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JToken,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Legt die Shim von JToken.Values(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JToken.WriteToAsync(JToken this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AllInstances.WriteToAsyncJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JToken.WriteToAsync(JToken this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.Ancestors">
            <summary>Legt die Shim von JToken.Ancestors(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AncestorsAndSelf">
            <summary>Legt die Shim von JToken.AncestorsAndSelf(JToken this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.AnnotationOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Legt die Shim von JToken.Annotation(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AnnotationType">
            <summary>Legt die Shim von JToken.Annotation(JToken this, Type type) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.AnnotationsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Legt die Shim von JToken.Annotations(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.AnnotationsType">
            <summary>Legt die Shim von JToken.Annotations(JToken this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.BeforeSelf">
            <summary>Legt die Shim von JToken.BeforeSelf(JToken this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.Bind(Newtonsoft.Json.IJsonLineInfo)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.Bind(Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.Bind(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.Children">
            <summary>Legt die Shim von JToken.Children(JToken this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.ChildrenOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JEnumerable{``0}})">
            <summary>Legt die Shim von JToken.Children(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.Constructor">
            <summary>Legt die Shim von JToken.JToken(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.CreateReader">
            <summary>Legt die Shim von JToken.CreateReader(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.DeepClone">
            <summary>Legt die Shim von JToken.DeepClone(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.DeepEqualsJTokenJToken">
            <summary>Legt die Shim von JToken.DeepEquals(JToken t1, JToken t2) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.EnsureValueJToken">
            <summary>Legt die Shim von JToken.EnsureValue(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.EqualityComparerGet">
            <summary>Legt die Shim von JToken.get_EqualityComparer() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenBoolean">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenByte">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenByteArray">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenChar">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenDateTime">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenDateTimeOffset">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenDecimal">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenDouble">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenGuid">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenInt16">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenInt32">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenInt64">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfBoolean">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfByte">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfChar">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfDateTime">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfDateTimeOffset">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfDecimal">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfDouble">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfGuid">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfInt16">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfInt32">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfInt64">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfSByte">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfSingle">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfTimeSpan">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfUInt16">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfUInt32">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenNullableOfUInt64">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenSByte">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenSingle">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenString">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenTimeSpan">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenUInt16">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenUInt32">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenUInt64">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ExplicitOpJTokenUri">
            <summary>Legt die Shim von JToken.op_Explicit(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.FirstGet">
            <summary>Legt die Shim von JToken.get_First(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.FromObjectInternalObjectJsonSerializer">
            <summary>Legt die Shim von JToken.FromObjectInternal(Object o, JsonSerializer jsonSerializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.FromObjectObject">
            <summary>Legt die Shim von JToken.FromObject(Object o) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.FromObjectObjectJsonSerializer">
            <summary>Legt die Shim von JToken.FromObject(Object o, JsonSerializer jsonSerializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.GetAncestorsBoolean">
            <summary>Legt die Shim von JToken.GetAncestors(JToken this, Boolean self) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.GetMetaObjectExpression">
            <summary>Legt die Shim von JToken.GetMetaObject(JToken this, Expression parameter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.GetTypeJToken">
            <summary>Legt die Shim von JToken.GetType(JToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpBooleanJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpByteArrayJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Byte[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpByteJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Byte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpDateTimeJToken">
            <summary>Legt die Shim von JToken.op_Implicit(DateTime value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpDateTimeOffsetJToken">
            <summary>Legt die Shim von JToken.op_Implicit(DateTimeOffset value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpDecimalJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Decimal value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpDoubleJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Double value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpGuidJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Guid value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpInt16JToken">
            <summary>Legt die Shim von JToken.op_Implicit(Int16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpInt32JToken">
            <summary>Legt die Shim von JToken.op_Implicit(Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpInt64JToken">
            <summary>Legt die Shim von JToken.op_Implicit(Int64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfBooleanJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfByteJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfDateTimeJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfDateTimeOffsetJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfDecimalJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfDoubleJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfGuidJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfInt16JToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfInt32JToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfInt64JToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfSByteJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfSingleJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfTimeSpanJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfUInt16JToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfUInt32JToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpNullableOfUInt64JToken">
            <summary>Legt die Shim von JToken.op_Implicit(Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpSByteJToken">
            <summary>Legt die Shim von JToken.op_Implicit(SByte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpSingleJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Single value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpStringJToken">
            <summary>Legt die Shim von JToken.op_Implicit(String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpTimeSpanJToken">
            <summary>Legt die Shim von JToken.op_Implicit(TimeSpan value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpUInt16JToken">
            <summary>Legt die Shim von JToken.op_Implicit(UInt16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpUInt32JToken">
            <summary>Legt die Shim von JToken.op_Implicit(UInt32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpUInt64JToken">
            <summary>Legt die Shim von JToken.op_Implicit(UInt64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ImplicitOpUriJToken">
            <summary>Legt die Shim von JToken.op_Implicit(Uri value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ItemGetObject">
            <summary>Legt die Shim von JToken.get_Item(JToken this, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ItemNewtonsoftJsonLinqIJEnumerableNewtonsoftJsonLinqJTokengetObject">
            <summary>Legt die Shim von JToken.Newtonsoft.Json.Linq.IJEnumerable&lt;Newtonsoft.Json.Linq.JToken&gt;.get_Item(JToken this, Object key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ItemSetObjectJToken">
            <summary>Legt die Shim von JToken.set_Item(JToken this, Object key, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.LastGet">
            <summary>Legt die Shim von JToken.get_Last(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.LineNumberNewtonsoftJsonIJsonLineInfoget">
            <summary>Legt die Shim von JToken.Newtonsoft.Json.IJsonLineInfo.get_LineNumber(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.LinePositionNewtonsoftJsonIJsonLineInfoget">
            <summary>Legt die Shim von JToken.Newtonsoft.Json.IJsonLineInfo.get_LinePosition(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.LoadAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JToken.LoadAsync(JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.LoadAsyncJsonReaderJsonLoadSettingsCancellationToken">
            <summary>Legt die Shim von JToken.LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.LoadJsonReader">
            <summary>Legt die Shim von JToken.Load(JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.LoadJsonReaderJsonLoadSettings">
            <summary>Legt die Shim von JToken.Load(JsonReader reader, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.NewtonsoftJsonIJsonLineInfoHasLineInfo">
            <summary>Legt die Shim von JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.NextGet">
            <summary>Legt die Shim von JToken.get_Next(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.NextSetJToken">
            <summary>Legt die Shim von JToken.set_Next(JToken this, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ParentGet">
            <summary>Legt die Shim von JToken.get_Parent(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ParentSetJContainer">
            <summary>Legt die Shim von JToken.set_Parent(JToken this, JContainer value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ParseString">
            <summary>Legt die Shim von JToken.Parse(String json) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ParseStringJsonLoadSettings">
            <summary>Legt die Shim von JToken.Parse(String json, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.PathGet">
            <summary>Legt die Shim von JToken.get_Path(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.PreviousGet">
            <summary>Legt die Shim von JToken.get_Previous(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.PreviousSetJToken">
            <summary>Legt die Shim von JToken.set_Previous(JToken this, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ReadFromAsyncJsonReaderCancellationToken">
            <summary>Legt die Shim von JToken.ReadFromAsync(JsonReader reader, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ReadFromAsyncJsonReaderJsonLoadSettingsCancellationToken">
            <summary>Legt die Shim von JToken.ReadFromAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ReadFromJsonReader">
            <summary>Legt die Shim von JToken.ReadFrom(JsonReader reader) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ReadFromJsonReaderJsonLoadSettings">
            <summary>Legt die Shim von JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.Remove">
            <summary>Legt die Shim von JToken.Remove(JToken this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.RemoveAnnotationsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Legt die Shim von JToken.RemoveAnnotations(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.RemoveAnnotationsType">
            <summary>Legt die Shim von JToken.RemoveAnnotations(JToken this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ReplaceJToken">
            <summary>Legt die Shim von JToken.Replace(JToken this, JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.RootGet">
            <summary>Legt die Shim von JToken.get_Root(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.SelectTokenString">
            <summary>Legt die Shim von JToken.SelectToken(JToken this, String path) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.SelectTokenStringBoolean">
            <summary>Legt die Shim von JToken.SelectToken(JToken this, String path, Boolean errorWhenNoMatch) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.SelectTokensString">
            <summary>Legt die Shim von JToken.SelectTokens(JToken this, String path) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.SelectTokensStringBoolean">
            <summary>Legt die Shim von JToken.SelectTokens(JToken this, String path, Boolean errorWhenNoMatch) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.SetLineInfoIJsonLineInfoJsonLoadSettings">
            <summary>Legt die Shim von JToken.SetLineInfo(JToken this, IJsonLineInfo lineInfo, JsonLoadSettings settings) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.SetLineInfoInt32Int32">
            <summary>Legt die Shim von JToken.SetLineInfo(JToken this, Int32 lineNumber, Int32 linePosition) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.StaticConstructor">
            <summary>Legt die Shim von JToken.JToken() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.SystemCollectionsGenericIEnumerableNewtonsoftJsonLinqJTokenGetEnumerator">
            <summary>Legt die Shim von JToken.System.Collections.Generic.IEnumerable&lt;Newtonsoft.Json.Linq.JToken&gt;.GetEnumerator(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Legt die Shim von JToken.System.Collections.IEnumerable.GetEnumerator(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.SystemDynamicIDynamicMetaObjectProviderGetMetaObjectExpression">
            <summary>Legt die Shim von JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(JToken this, Expression parameter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.SystemICloneableClone">
            <summary>Legt die Shim von JToken.System.ICloneable.Clone(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ToBigIntegerJToken">
            <summary>Legt die Shim von JToken.ToBigInteger(JToken value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ToBigIntegerNullableJToken">
            <summary>Legt die Shim von JToken.ToBigIntegerNullable(JToken value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.ToObjectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Legt die Shim von JToken.ToObject(JToken this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.ToObjectOf1JsonSerializer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.JsonSerializer,``0})">
            <summary>Legt die Shim von JToken.ToObject(JToken this, JsonSerializer jsonSerializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ToObjectType">
            <summary>Legt die Shim von JToken.ToObject(JToken this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ToObjectTypeJsonSerializer">
            <summary>Legt die Shim von JToken.ToObject(JToken this, Type objectType, JsonSerializer jsonSerializer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ToString">
            <summary>Legt die Shim von JToken.ToString(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ToStringFormattingJsonConverterArray">
            <summary>Legt die Shim von JToken.ToString(JToken this, Formatting formatting, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.ValidateTokenJTokenJTokenTypeArrayBoolean">
            <summary>Legt die Shim von JToken.ValidateToken(JToken o, JTokenType[] validTypes, Boolean nullable) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.ValueOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Legt die Shim von JToken.Value(JToken this, Object key) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJToken.ValuesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Legt die Shim von JToken.Values(JToken this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JToken.WriteToAsync(JToken this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJToken.WriteToAsyncJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JToken.WriteToAsync(JToken this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JTokenEqualityComparer</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.#ctor(Newtonsoft.Json.Linq.JTokenEqualityComparer)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.AllInstances.EqualsJTokenJToken">
            <summary>Legt die Shim von JTokenEqualityComparer.Equals(JTokenEqualityComparer this, JToken x, JToken y) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.AllInstances.GetHashCodeJToken">
            <summary>Legt die Shim von JTokenEqualityComparer.GetHashCode(JTokenEqualityComparer this, JToken obj) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.Bind(System.Collections.Generic.IEqualityComparer{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.Constructor">
            <summary>Legt die Shim von JTokenEqualityComparer.JTokenEqualityComparer(JTokenEqualityComparer this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.EqualsJTokenJToken">
            <summary>Legt die Shim von JTokenEqualityComparer.Equals(JTokenEqualityComparer this, JToken x, JToken y) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenEqualityComparer.GetHashCodeJToken">
            <summary>Legt die Shim von JTokenEqualityComparer.GetHashCode(JTokenEqualityComparer this, JToken obj) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JTokenReader</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.#ctor(Newtonsoft.Json.Linq.JTokenReader)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.CurrentTokenGet">
            <summary>Legt die Shim von JTokenReader.get_CurrentToken(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.GetEndTokenJContainer">
            <summary>Legt die Shim von JTokenReader.GetEndToken(JTokenReader this, JContainer c) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.LineNumberNewtonsoftJsonIJsonLineInfoget">
            <summary>Legt die Shim von JTokenReader.Newtonsoft.Json.IJsonLineInfo.get_LineNumber(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.LinePositionNewtonsoftJsonIJsonLineInfoget">
            <summary>Legt die Shim von JTokenReader.Newtonsoft.Json.IJsonLineInfo.get_LinePosition(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.NewtonsoftJsonIJsonLineInfoHasLineInfo">
            <summary>Legt die Shim von JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.PathGet">
            <summary>Legt die Shim von JTokenReader.get_Path(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.Read">
            <summary>Legt die Shim von JTokenReader.Read(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.ReadIntoJContainer">
            <summary>Legt die Shim von JTokenReader.ReadInto(JTokenReader this, JContainer c) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.ReadOverJToken">
            <summary>Legt die Shim von JTokenReader.ReadOver(JTokenReader this, JToken t) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.ReadToEnd">
            <summary>Legt die Shim von JTokenReader.ReadToEnd(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.SafeToStringObject">
            <summary>Legt die Shim von JTokenReader.SafeToString(JTokenReader this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.SetEndJContainer">
            <summary>Legt die Shim von JTokenReader.SetEnd(JTokenReader this, JContainer c) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.AllInstances.SetTokenJToken">
            <summary>Legt die Shim von JTokenReader.SetToken(JTokenReader this, JToken token) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.Bind(Newtonsoft.Json.IJsonLineInfo)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.Bind(System.IDisposable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.ConstructorJToken">
            <summary>Legt die Shim von JTokenReader.JTokenReader(JTokenReader this, JToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.ConstructorJTokenString">
            <summary>Legt die Shim von JTokenReader.JTokenReader(JTokenReader this, JToken token, String initialPath) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.CurrentTokenGet">
            <summary>Legt die Shim von JTokenReader.get_CurrentToken(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.GetEndTokenJContainer">
            <summary>Legt die Shim von JTokenReader.GetEndToken(JTokenReader this, JContainer c) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.LineNumberNewtonsoftJsonIJsonLineInfoget">
            <summary>Legt die Shim von JTokenReader.Newtonsoft.Json.IJsonLineInfo.get_LineNumber(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.LinePositionNewtonsoftJsonIJsonLineInfoget">
            <summary>Legt die Shim von JTokenReader.Newtonsoft.Json.IJsonLineInfo.get_LinePosition(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.NewtonsoftJsonIJsonLineInfoHasLineInfo">
            <summary>Legt die Shim von JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.PathGet">
            <summary>Legt die Shim von JTokenReader.get_Path(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.Read">
            <summary>Legt die Shim von JTokenReader.Read(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.ReadIntoJContainer">
            <summary>Legt die Shim von JTokenReader.ReadInto(JTokenReader this, JContainer c) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.ReadOverJToken">
            <summary>Legt die Shim von JTokenReader.ReadOver(JTokenReader this, JToken t) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.ReadToEnd">
            <summary>Legt die Shim von JTokenReader.ReadToEnd(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.SafeToStringObject">
            <summary>Legt die Shim von JTokenReader.SafeToString(JTokenReader this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.SetEndJContainer">
            <summary>Legt die Shim von JTokenReader.SetEnd(JTokenReader this, JContainer c) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenReader.SetTokenJToken">
            <summary>Legt die Shim von JTokenReader.SetToken(JTokenReader this, JToken token) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JTokenWriter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.#ctor(Newtonsoft.Json.Linq.JTokenWriter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AddParentJContainer">
            <summary>Legt die Shim von JTokenWriter.AddParent(JTokenWriter this, JContainer container) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AddValueJValueJsonToken">
            <summary>Legt die Shim von JTokenWriter.AddValue(JTokenWriter this, JValue value, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AddValueObjectJsonToken">
            <summary>Legt die Shim von JTokenWriter.AddValue(JTokenWriter this, Object value, JsonToken token) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.AddParentJContainer">
            <summary>Legt die Shim von JTokenWriter.AddParent(JTokenWriter this, JContainer container) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.AddValueJValueJsonToken">
            <summary>Legt die Shim von JTokenWriter.AddValue(JTokenWriter this, JValue value, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.AddValueObjectJsonToken">
            <summary>Legt die Shim von JTokenWriter.AddValue(JTokenWriter this, Object value, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.Close">
            <summary>Legt die Shim von JTokenWriter.Close(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.CurrentTokenGet">
            <summary>Legt die Shim von JTokenWriter.get_CurrentToken(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.Flush">
            <summary>Legt die Shim von JTokenWriter.Flush(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.RemoveParent">
            <summary>Legt die Shim von JTokenWriter.RemoveParent(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.TokenGet">
            <summary>Legt die Shim von JTokenWriter.get_Token(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteCommentString">
            <summary>Legt die Shim von JTokenWriter.WriteComment(JTokenWriter this, String text) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteEndJsonToken">
            <summary>Legt die Shim von JTokenWriter.WriteEnd(JTokenWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteNull">
            <summary>Legt die Shim von JTokenWriter.WriteNull(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WritePropertyNameString">
            <summary>Legt die Shim von JTokenWriter.WritePropertyName(JTokenWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteRawString">
            <summary>Legt die Shim von JTokenWriter.WriteRaw(JTokenWriter this, String json) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteStartArray">
            <summary>Legt die Shim von JTokenWriter.WriteStartArray(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteStartConstructorString">
            <summary>Legt die Shim von JTokenWriter.WriteStartConstructor(JTokenWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteStartObject">
            <summary>Legt die Shim von JTokenWriter.WriteStartObject(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteTokenAsyncJsonReaderBooleanBooleanBooleanCancellationToken">
            <summary>Legt die Shim von JTokenWriter.WriteTokenAsync(JTokenWriter this, JsonReader reader, Boolean writeChildren, Boolean writeDateConstructorAsDate, Boolean writeComments, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteTokenJsonReaderBooleanBooleanBoolean">
            <summary>Legt die Shim von JTokenWriter.WriteToken(JTokenWriter this, JsonReader reader, Boolean writeChildren, Boolean writeDateConstructorAsDate, Boolean writeComments) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteUndefined">
            <summary>Legt die Shim von JTokenWriter.WriteUndefined(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueBoolean">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueByte">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Byte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueByteArray">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Byte[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueChar">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueDateTime">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, DateTime value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueDateTimeOffset">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, DateTimeOffset value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueDecimal">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Decimal value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueDouble">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Double value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueGuid">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Guid value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueInt16">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Int16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueInt32">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueInt64">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Int64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueObject">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueSByte">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, SByte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueSingle">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Single value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueString">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueTimeSpan">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, TimeSpan value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueUInt16">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, UInt16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueUInt32">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, UInt32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueUInt64">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, UInt64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.AllInstances.WriteValueUri">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Uri value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.Bind(System.IDisposable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.Close">
            <summary>Legt die Shim von JTokenWriter.Close(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.Constructor">
            <summary>Legt die Shim von JTokenWriter.JTokenWriter(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.ConstructorJContainer">
            <summary>Legt die Shim von JTokenWriter.JTokenWriter(JTokenWriter this, JContainer container) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.CurrentTokenGet">
            <summary>Legt die Shim von JTokenWriter.get_CurrentToken(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.Flush">
            <summary>Legt die Shim von JTokenWriter.Flush(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.RemoveParent">
            <summary>Legt die Shim von JTokenWriter.RemoveParent(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.TokenGet">
            <summary>Legt die Shim von JTokenWriter.get_Token(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteCommentString">
            <summary>Legt die Shim von JTokenWriter.WriteComment(JTokenWriter this, String text) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteEndJsonToken">
            <summary>Legt die Shim von JTokenWriter.WriteEnd(JTokenWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteNull">
            <summary>Legt die Shim von JTokenWriter.WriteNull(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WritePropertyNameString">
            <summary>Legt die Shim von JTokenWriter.WritePropertyName(JTokenWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteRawString">
            <summary>Legt die Shim von JTokenWriter.WriteRaw(JTokenWriter this, String json) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteStartArray">
            <summary>Legt die Shim von JTokenWriter.WriteStartArray(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteStartConstructorString">
            <summary>Legt die Shim von JTokenWriter.WriteStartConstructor(JTokenWriter this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteStartObject">
            <summary>Legt die Shim von JTokenWriter.WriteStartObject(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteTokenAsyncJsonReaderBooleanBooleanBooleanCancellationToken">
            <summary>Legt die Shim von JTokenWriter.WriteTokenAsync(JTokenWriter this, JsonReader reader, Boolean writeChildren, Boolean writeDateConstructorAsDate, Boolean writeComments, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteTokenJsonReaderBooleanBooleanBoolean">
            <summary>Legt die Shim von JTokenWriter.WriteToken(JTokenWriter this, JsonReader reader, Boolean writeChildren, Boolean writeDateConstructorAsDate, Boolean writeComments) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteUndefined">
            <summary>Legt die Shim von JTokenWriter.WriteUndefined(JTokenWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueBoolean">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueByte">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Byte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueByteArray">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Byte[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueChar">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueDateTime">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, DateTime value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueDateTimeOffset">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, DateTimeOffset value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueDecimal">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Decimal value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueDouble">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Double value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueGuid">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Guid value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueInt16">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Int16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueInt32">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Int32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueInt64">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Int64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueObject">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueSByte">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, SByte value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueSingle">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Single value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueString">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueTimeSpan">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, TimeSpan value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueUInt16">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, UInt16 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueUInt32">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, UInt32 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueUInt64">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, UInt64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJTokenWriter.WriteValueUri">
            <summary>Legt die Shim von JTokenWriter.WriteValue(JTokenWriter this, Uri value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJValue">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JValue</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.#ctor(Newtonsoft.Json.Linq.JValue)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.CloneToken">
            <summary>Legt die Shim von JValue.CloneToken(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.CompareToJValue">
            <summary>Legt die Shim von JValue.CompareTo(JValue this, JValue obj) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.DeepEqualsJToken">
            <summary>Legt die Shim von JValue.DeepEquals(JValue this, JToken node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.EqualsJValue">
            <summary>Legt die Shim von JValue.Equals(JValue this, JValue other) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.EqualsObject">
            <summary>Legt die Shim von JValue.Equals(JValue this, Object obj) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.GetDeepHashCode">
            <summary>Legt die Shim von JValue.GetDeepHashCode(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.GetHashCode01">
            <summary>Legt die Shim von JValue.GetHashCode(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.GetMetaObjectExpression">
            <summary>Legt die Shim von JValue.GetMetaObject(JValue this, Expression parameter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.HasValuesGet">
            <summary>Legt die Shim von JValue.get_HasValues(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIComparableCompareToObject">
            <summary>Legt die Shim von JValue.System.IComparable.CompareTo(JValue this, Object obj) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleGetTypeCode">
            <summary>Legt die Shim von JValue.System.IConvertible.GetTypeCode(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToBooleanIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToBoolean(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToByteIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToByte(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToCharIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToChar(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToDateTimeIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToDateTime(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToDecimalIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToDecimal(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToDoubleIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToDouble(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToInt16IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToInt16(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToInt32IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToInt32(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToInt64IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToInt64(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToSByteIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToSByte(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToSingleIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToSingle(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToTypeTypeIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToType(JValue this, Type conversionType, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToUInt16IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToUInt16(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToUInt32IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToUInt32(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.SystemIConvertibleToUInt64IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToUInt64(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.ToString01">
            <summary>Legt die Shim von JValue.ToString(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.ToStringIFormatProvider">
            <summary>Legt die Shim von JValue.ToString(JValue this, IFormatProvider formatProvider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.ToStringString">
            <summary>Legt die Shim von JValue.ToString(JValue this, String format) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.ToStringStringIFormatProvider">
            <summary>Legt die Shim von JValue.ToString(JValue this, String format, IFormatProvider formatProvider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.TypeGet">
            <summary>Legt die Shim von JValue.get_Type(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.ValueGet">
            <summary>Legt die Shim von JValue.get_Value(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.ValueSetObject">
            <summary>Legt die Shim von JValue.set_Value(JValue this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JValue.WriteToAsync(JValue this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.AllInstances.WriteToJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JValue.WriteTo(JValue this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.Bind(Newtonsoft.Json.IJsonLineInfo)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.Bind(Newtonsoft.Json.Linq.IJEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.Bind(System.IComparable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.Bind(System.IConvertible)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.Bind(System.IFormattable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.Bind(System.IComparable{Newtonsoft.Json.Linq.JValue})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.Bind(System.IEquatable{Newtonsoft.Json.Linq.JValue})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.Bind(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJValue.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.CloneToken">
            <summary>Legt die Shim von JValue.CloneToken(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.CompareBigIntegerBigIntegerObject">
            <summary>Legt die Shim von JValue.CompareBigInteger(BigInteger i1, Object i2) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.CompareFloatObjectObject">
            <summary>Legt die Shim von JValue.CompareFloat(Object objA, Object objB) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.CompareJTokenTypeObjectObject">
            <summary>Legt die Shim von JValue.Compare(JTokenType valueType, Object objA, Object objB) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.CompareToJValue">
            <summary>Legt die Shim von JValue.CompareTo(JValue this, JValue obj) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorBoolean">
            <summary>Legt die Shim von JValue.JValue(JValue this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorChar">
            <summary>Legt die Shim von JValue.JValue(JValue this, Char value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorDateTime">
            <summary>Legt die Shim von JValue.JValue(JValue this, DateTime value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorDateTimeOffset">
            <summary>Legt die Shim von JValue.JValue(JValue this, DateTimeOffset value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorDecimal">
            <summary>Legt die Shim von JValue.JValue(JValue this, Decimal value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorDouble">
            <summary>Legt die Shim von JValue.JValue(JValue this, Double value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorGuid">
            <summary>Legt die Shim von JValue.JValue(JValue this, Guid value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorInt64">
            <summary>Legt die Shim von JValue.JValue(JValue this, Int64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorJValue">
            <summary>Legt die Shim von JValue.JValue(JValue this, JValue other) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorObject">
            <summary>Legt die Shim von JValue.JValue(JValue this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorObjectJTokenType">
            <summary>Legt die Shim von JValue.JValue(JValue this, Object value, JTokenType type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorSingle">
            <summary>Legt die Shim von JValue.JValue(JValue this, Single value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorString">
            <summary>Legt die Shim von JValue.JValue(JValue this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorTimeSpan">
            <summary>Legt die Shim von JValue.JValue(JValue this, TimeSpan value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorUInt64">
            <summary>Legt die Shim von JValue.JValue(JValue this, UInt64 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ConstructorUri">
            <summary>Legt die Shim von JValue.JValue(JValue this, Uri value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.CreateCommentString">
            <summary>Legt die Shim von JValue.CreateComment(String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.CreateNull">
            <summary>Legt die Shim von JValue.CreateNull() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.CreateStringString">
            <summary>Legt die Shim von JValue.CreateString(String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.CreateUndefined">
            <summary>Legt die Shim von JValue.CreateUndefined() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.DeepEqualsJToken">
            <summary>Legt die Shim von JValue.DeepEquals(JValue this, JToken node) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.EqualsJValue">
            <summary>Legt die Shim von JValue.Equals(JValue this, JValue other) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.EqualsObject">
            <summary>Legt die Shim von JValue.Equals(JValue this, Object obj) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.GetDeepHashCode">
            <summary>Legt die Shim von JValue.GetDeepHashCode(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.GetHashCode">
            <summary>Legt die Shim von JValue.GetHashCode(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.GetMetaObjectExpression">
            <summary>Legt die Shim von JValue.GetMetaObject(JValue this, Expression parameter) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.GetStringValueTypeNullableOfJTokenType">
            <summary>Legt die Shim von JValue.GetStringValueType(Nullable`1 current) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.GetValueTypeNullableOfJTokenTypeObject">
            <summary>Legt die Shim von JValue.GetValueType(Nullable`1 current, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.HasValuesGet">
            <summary>Legt die Shim von JValue.get_HasValues(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.OperationExpressionTypeObjectObjectObjectOut">
            <summary>Legt die Shim von JValue.Operation(ExpressionType operation, Object objA, Object objB, Object* result) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIComparableCompareToObject">
            <summary>Legt die Shim von JValue.System.IComparable.CompareTo(JValue this, Object obj) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleGetTypeCode">
            <summary>Legt die Shim von JValue.System.IConvertible.GetTypeCode(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToBooleanIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToBoolean(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToByteIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToByte(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToCharIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToChar(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToDateTimeIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToDateTime(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToDecimalIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToDecimal(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToDoubleIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToDouble(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToInt16IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToInt16(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToInt32IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToInt32(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToInt64IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToInt64(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToSByteIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToSByte(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToSingleIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToSingle(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToTypeTypeIFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToType(JValue this, Type conversionType, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToUInt16IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToUInt16(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToUInt32IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToUInt32(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.SystemIConvertibleToUInt64IFormatProvider">
            <summary>Legt die Shim von JValue.System.IConvertible.ToUInt64(JValue this, IFormatProvider provider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ToString">
            <summary>Legt die Shim von JValue.ToString(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ToStringIFormatProvider">
            <summary>Legt die Shim von JValue.ToString(JValue this, IFormatProvider formatProvider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ToStringString">
            <summary>Legt die Shim von JValue.ToString(JValue this, String format) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ToStringStringIFormatProvider">
            <summary>Legt die Shim von JValue.ToString(JValue this, String format, IFormatProvider formatProvider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.TypeGet">
            <summary>Legt die Shim von JValue.get_Type(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ValueGet">
            <summary>Legt die Shim von JValue.get_Value(JValue this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ValueSetObject">
            <summary>Legt die Shim von JValue.set_Value(JValue this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.ValuesEqualsJValueJValue">
            <summary>Legt die Shim von JValue.ValuesEquals(JValue v1, JValue v2) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.WriteToAsyncJsonWriterCancellationTokenJsonConverterArray">
            <summary>Legt die Shim von JValue.WriteToAsync(JValue this, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJValue.WriteToJsonWriterJsonConverterArray">
            <summary>Legt die Shim von JValue.WriteTo(JValue this, JsonWriter writer, JsonConverter[] converters) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JsonLoadSettings</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.#ctor(Newtonsoft.Json.Linq.JsonLoadSettings)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.AllInstances.CommentHandlingGet">
            <summary>Legt die Shim von JsonLoadSettings.get_CommentHandling(JsonLoadSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.AllInstances.CommentHandlingSetCommentHandling">
            <summary>Legt die Shim von JsonLoadSettings.set_CommentHandling(JsonLoadSettings this, CommentHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.AllInstances.LineInfoHandlingGet">
            <summary>Legt die Shim von JsonLoadSettings.get_LineInfoHandling(JsonLoadSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.AllInstances.LineInfoHandlingSetLineInfoHandling">
            <summary>Legt die Shim von JsonLoadSettings.set_LineInfoHandling(JsonLoadSettings this, LineInfoHandling value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.CommentHandlingGet">
            <summary>Legt die Shim von JsonLoadSettings.get_CommentHandling(JsonLoadSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.CommentHandlingSetCommentHandling">
            <summary>Legt die Shim von JsonLoadSettings.set_CommentHandling(JsonLoadSettings this, CommentHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.Constructor">
            <summary>Legt die Shim von JsonLoadSettings.JsonLoadSettings(JsonLoadSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.LineInfoHandlingGet">
            <summary>Legt die Shim von JsonLoadSettings.get_LineInfoHandling(JsonLoadSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonLoadSettings.LineInfoHandlingSetLineInfoHandling">
            <summary>Legt die Shim von JsonLoadSettings.set_LineInfoHandling(JsonLoadSettings this, LineInfoHandling value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings">
            <summary>Shim-Typ von Newtonsoft.Json.Linq.JsonMergeSettings</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.#ctor(Newtonsoft.Json.Linq.JsonMergeSettings)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.AllInstances.MergeArrayHandlingGet">
            <summary>Legt die Shim von JsonMergeSettings.get_MergeArrayHandling(JsonMergeSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.AllInstances.MergeArrayHandlingSetMergeArrayHandling">
            <summary>Legt die Shim von JsonMergeSettings.set_MergeArrayHandling(JsonMergeSettings this, MergeArrayHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.AllInstances.MergeNullValueHandlingGet">
            <summary>Legt die Shim von JsonMergeSettings.get_MergeNullValueHandling(JsonMergeSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.AllInstances.MergeNullValueHandlingSetMergeNullValueHandling">
            <summary>Legt die Shim von JsonMergeSettings.set_MergeNullValueHandling(JsonMergeSettings this, MergeNullValueHandling value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.Constructor">
            <summary>Legt die Shim von JsonMergeSettings.JsonMergeSettings(JsonMergeSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.MergeArrayHandlingGet">
            <summary>Legt die Shim von JsonMergeSettings.get_MergeArrayHandling(JsonMergeSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.MergeArrayHandlingSetMergeArrayHandling">
            <summary>Legt die Shim von JsonMergeSettings.set_MergeArrayHandling(JsonMergeSettings this, MergeArrayHandling value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.MergeNullValueHandlingGet">
            <summary>Legt die Shim von JsonMergeSettings.get_MergeNullValueHandling(JsonMergeSettings this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.ShimJsonMergeSettings.MergeNullValueHandlingSetMergeNullValueHandling">
            <summary>Legt die Shim von JsonMergeSettings.set_MergeNullValueHandling(JsonMergeSettings this, MergeNullValueHandling value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.StubIJEnumerable`1">
            <summary>Stub-Typ von Newtonsoft.Json.Linq.IJEnumerable&lt;T&gt;</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubIJEnumerable`1.#ctor">
            <summary>Initialisiert eine neue Instanz von type StubIJEnumerable.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubIJEnumerable`1.GetEnumerator">
            <summary>Legt die stub von IEnumerable`1.GetEnumerator(IEnumerable`1 this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubIJEnumerable`1.GetEnumerator01">
            <summary>Legt die stub von IEnumerable.GetEnumerator(IEnumerable this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubIJEnumerable`1.Newtonsoft#Json#Linq#IJEnumerable{T}#Item(System.Object)">
            <summary>Legt die stub von IJEnumerable`1.get_Item(IJEnumerable`1 this, Object key) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubIJEnumerable`1.ItemGetObject">
            <summary>Legt die stub von IJEnumerable`1.get_Item(IJEnumerable`1 this, Object key) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubIJEnumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Legt die Stub von IEnumerable`1.GetEnumerator(IEnumerable`1 this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubIJEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Legt die Stub von IEnumerable.GetEnumerator(IEnumerable this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor">
            <summary>Stub-Typ von Newtonsoft.Json.Linq.JPropertyDescriptor</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.#ctor(System.String)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
            <summary>Legt die Stub von PropertyDescriptor.AddValueChanged(PropertyDescriptor this, Object component, EventHandler handler) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.AddValueChangedObjectEventHandler">
            <summary>Legt die stub von PropertyDescriptor.AddValueChanged(PropertyDescriptor this, Object component, EventHandler handler) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.AttachBackingFieldToAttributeArray">
            <summary>Fügt Delegate an, um StubJPropertyDescriptor.AttributeArray als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.AttributeArray">
            <summary>Legt die stub von MemberDescriptor.get_AttributeArray(MemberDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.AttributeArrayGet">
            <summary>Legt die stub von MemberDescriptor.get_AttributeArray(MemberDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.AttributeArraySetAttributeArray">
            <summary>Legt die stub von MemberDescriptor.set_AttributeArray(MemberDescriptor this, Attribute[] value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.Attributes">
            <summary>Legt die stub von MemberDescriptor.get_Attributes(MemberDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.AttributesGet">
            <summary>Legt die stub von MemberDescriptor.get_Attributes(MemberDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.CanResetValue(System.Object)">
            <summary>Legt die Stub von JPropertyDescriptor.CanResetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.CanResetValueObject">
            <summary>Legt die stub von JPropertyDescriptor.CanResetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.Category">
            <summary>Legt die stub von MemberDescriptor.get_Category(MemberDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.CategoryGet">
            <summary>Legt die stub von MemberDescriptor.get_Category(MemberDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.ComponentType">
            <summary>Legt die stub von JPropertyDescriptor.get_ComponentType(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.ComponentTypeGet">
            <summary>Legt die stub von JPropertyDescriptor.get_ComponentType(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.Converter">
            <summary>Legt die stub von PropertyDescriptor.get_Converter(PropertyDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.ConverterGet">
            <summary>Legt die stub von PropertyDescriptor.get_Converter(PropertyDescriptor this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.CreateAttributeCollection">
            <summary>Legt die Stub von MemberDescriptor.CreateAttributeCollection(MemberDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.CreateAttributeCollection01">
            <summary>Legt die stub von MemberDescriptor.CreateAttributeCollection(MemberDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.Description">
            <summary>Legt die stub von MemberDescriptor.get_Description(MemberDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.DescriptionGet">
            <summary>Legt die stub von MemberDescriptor.get_Description(MemberDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.DesignTimeOnly">
            <summary>Legt die stub von MemberDescriptor.get_DesignTimeOnly(MemberDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.DesignTimeOnlyGet">
            <summary>Legt die stub von MemberDescriptor.get_DesignTimeOnly(MemberDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.DisplayName">
            <summary>Legt die stub von MemberDescriptor.get_DisplayName(MemberDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.DisplayNameGet">
            <summary>Legt die stub von MemberDescriptor.get_DisplayName(MemberDescriptor this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.Equals(System.Object)">
            <summary>Legt die Stub von PropertyDescriptor.Equals(PropertyDescriptor this, Object obj) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.EqualsObject">
            <summary>Legt die stub von PropertyDescriptor.Equals(PropertyDescriptor this, Object obj) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.FillAttributes(System.Collections.IList)">
            <summary>Legt die Stub von PropertyDescriptor.FillAttributes(PropertyDescriptor this, IList attributeList) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.FillAttributesIList">
            <summary>Legt die stub von PropertyDescriptor.FillAttributes(PropertyDescriptor this, IList attributeList) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
            <summary>Legt die Stub von PropertyDescriptor.GetChildProperties(PropertyDescriptor this, Object instance, Attribute[] filter) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.GetChildPropertiesObjectAttributeArray">
            <summary>Legt die stub von PropertyDescriptor.GetChildProperties(PropertyDescriptor this, Object instance, Attribute[] filter) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.GetEditor(System.Type)">
            <summary>Legt die Stub von PropertyDescriptor.GetEditor(PropertyDescriptor this, Type editorBaseType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.GetEditorType">
            <summary>Legt die stub von PropertyDescriptor.GetEditor(PropertyDescriptor this, Type editorBaseType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.GetHashCode">
            <summary>Legt die Stub von PropertyDescriptor.GetHashCode(PropertyDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.GetHashCode01">
            <summary>Legt die stub von PropertyDescriptor.GetHashCode(PropertyDescriptor this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
            <summary>Legt die Stub von PropertyDescriptor.GetInvocationTarget(PropertyDescriptor this, Type type, Object instance) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.GetInvocationTargetTypeObject">
            <summary>Legt die stub von PropertyDescriptor.GetInvocationTarget(PropertyDescriptor this, Type type, Object instance) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.GetValue(System.Object)">
            <summary>Legt die Stub von JPropertyDescriptor.GetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.GetValueObject">
            <summary>Legt die stub von JPropertyDescriptor.GetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJPropertyDescriptor.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.IsBrowsable">
            <summary>Legt die stub von MemberDescriptor.get_IsBrowsable(MemberDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.IsBrowsableGet">
            <summary>Legt die stub von MemberDescriptor.get_IsBrowsable(MemberDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.IsLocalizable">
            <summary>Legt die stub von PropertyDescriptor.get_IsLocalizable(PropertyDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.IsLocalizableGet">
            <summary>Legt die stub von PropertyDescriptor.get_IsLocalizable(PropertyDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.IsReadOnly">
            <summary>Legt die stub von JPropertyDescriptor.get_IsReadOnly(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.IsReadOnlyGet">
            <summary>Legt die stub von JPropertyDescriptor.get_IsReadOnly(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.Name">
            <summary>Legt die stub von MemberDescriptor.get_Name(MemberDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.NameGet">
            <summary>Legt die stub von MemberDescriptor.get_Name(MemberDescriptor this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.NameHashCode">
            <summary>Legt die stub von JPropertyDescriptor.get_NameHashCode(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.NameHashCodeGet">
            <summary>Legt die stub von JPropertyDescriptor.get_NameHashCode(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
            <summary>Legt die Stub von PropertyDescriptor.OnValueChanged(PropertyDescriptor this, Object component, EventArgs e) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.OnValueChangedObjectEventArgs">
            <summary>Legt die stub von PropertyDescriptor.OnValueChanged(PropertyDescriptor this, Object component, EventArgs e) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.PropertyType">
            <summary>Legt die stub von JPropertyDescriptor.get_PropertyType(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.PropertyTypeGet">
            <summary>Legt die stub von JPropertyDescriptor.get_PropertyType(JPropertyDescriptor this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
            <summary>Legt die Stub von PropertyDescriptor.RemoveValueChanged(PropertyDescriptor this, Object component, EventHandler handler) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.RemoveValueChangedObjectEventHandler">
            <summary>Legt die stub von PropertyDescriptor.RemoveValueChanged(PropertyDescriptor this, Object component, EventHandler handler) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.ResetValue(System.Object)">
            <summary>Legt die Stub von JPropertyDescriptor.ResetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.ResetValueObject">
            <summary>Legt die stub von JPropertyDescriptor.ResetValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>Legt die Stub von JPropertyDescriptor.SetValue(JPropertyDescriptor this, Object component, Object value) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.SetValueObjectObject">
            <summary>Legt die stub von JPropertyDescriptor.SetValue(JPropertyDescriptor this, Object component, Object value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>Legt die Stub von JPropertyDescriptor.ShouldSerializeValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.ShouldSerializeValueObject">
            <summary>Legt die stub von JPropertyDescriptor.ShouldSerializeValue(JPropertyDescriptor this, Object component) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.SupportsChangeEvents">
            <summary>Legt die stub von PropertyDescriptor.get_SupportsChangeEvents(PropertyDescriptor this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJPropertyDescriptor.SupportsChangeEventsGet">
            <summary>Legt die stub von PropertyDescriptor.get_SupportsChangeEvents(PropertyDescriptor this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.StubJTokenEqualityComparer">
            <summary>Stub-Typ von Newtonsoft.Json.Linq.JTokenEqualityComparer</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenEqualityComparer.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenEqualityComparer.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenEqualityComparer.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJTokenEqualityComparer.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenEqualityComparer.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenEqualityComparer.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.StubJTokenReader">
            <summary>Stub-Typ von Newtonsoft.Json.Linq.JTokenReader</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.#ctor(Newtonsoft.Json.Linq.JToken)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.AttachBackingFieldToQuoteChar">
            <summary>Fügt Delegate an, um StubJTokenReader.QuoteChar als Eigenschaft mit einem dahinter liegenden Feld zu emulieren.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.Close">
            <summary>Legt die Stub von JsonReader.Close(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.Close01">
            <summary>Legt die stub von JsonReader.Close(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.Depth">
            <summary>Legt die stub von JsonReader.get_Depth(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.DepthGet">
            <summary>Legt die stub von JsonReader.get_Depth(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.Dispose(System.Boolean)">
            <summary>Legt die Stub von JsonReader.Dispose(JsonReader this, Boolean disposing) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.DisposeBoolean">
            <summary>Legt die stub von JsonReader.Dispose(JsonReader this, Boolean disposing) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJTokenReader.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.Path">
            <summary>Legt die stub von JTokenReader.get_Path(JTokenReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.PathGet">
            <summary>Legt die stub von JTokenReader.get_Path(JTokenReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.QuoteChar">
            <summary>Legt die stub von JsonReader.get_QuoteChar(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.QuoteCharGet">
            <summary>Legt die stub von JsonReader.get_QuoteChar(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.QuoteCharSetChar">
            <summary>Legt die stub von JsonReader.set_QuoteChar(JsonReader this, Char value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.Read">
            <summary>Legt die Stub von JTokenReader.Read(JTokenReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.Read01">
            <summary>Legt die stub von JTokenReader.Read(JTokenReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsBoolean">
            <summary>Legt die Stub von JsonReader.ReadAsBoolean(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsBoolean01">
            <summary>Legt die stub von JsonReader.ReadAsBoolean(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsBooleanAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsBooleanAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsBooleanAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsBooleanAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsBytes">
            <summary>Legt die Stub von JsonReader.ReadAsBytes(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsBytes01">
            <summary>Legt die stub von JsonReader.ReadAsBytes(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsBytesAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsBytesAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsBytesAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsBytesAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDateTime">
            <summary>Legt die Stub von JsonReader.ReadAsDateTime(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDateTime01">
            <summary>Legt die stub von JsonReader.ReadAsDateTime(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDateTimeAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsDateTimeAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDateTimeAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsDateTimeAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDateTimeOffset">
            <summary>Legt die Stub von JsonReader.ReadAsDateTimeOffset(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDateTimeOffset01">
            <summary>Legt die stub von JsonReader.ReadAsDateTimeOffset(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDateTimeOffsetAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsDateTimeOffsetAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDateTimeOffsetAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsDateTimeOffsetAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDecimal">
            <summary>Legt die Stub von JsonReader.ReadAsDecimal(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDecimal01">
            <summary>Legt die stub von JsonReader.ReadAsDecimal(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDecimalAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsDecimalAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDecimalAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsDecimalAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDouble">
            <summary>Legt die Stub von JsonReader.ReadAsDouble(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDouble01">
            <summary>Legt die stub von JsonReader.ReadAsDouble(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDoubleAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsDoubleAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsDoubleAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsDoubleAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsInt32">
            <summary>Legt die Stub von JsonReader.ReadAsInt32(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsInt3201">
            <summary>Legt die stub von JsonReader.ReadAsInt32(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsInt32Async(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsInt32Async(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsInt32AsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsInt32Async(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsString">
            <summary>Legt die Stub von JsonReader.ReadAsString(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsString01">
            <summary>Legt die stub von JsonReader.ReadAsString(JsonReader this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsStringAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsStringAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsStringAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsStringAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonReader.ReadAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ReadAsyncCancellationToken">
            <summary>Legt die stub von JsonReader.ReadAsync(JsonReader this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.TokenType">
            <summary>Legt die stub von JsonReader.get_TokenType(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.TokenTypeGet">
            <summary>Legt die stub von JsonReader.get_TokenType(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.Value">
            <summary>Legt die stub von JsonReader.get_Value(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ValueGet">
            <summary>Legt die stub von JsonReader.get_Value(JsonReader this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ValueType">
            <summary>Legt die stub von JsonReader.get_ValueType(JsonReader this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenReader.ValueTypeGet">
            <summary>Legt die stub von JsonReader.get_ValueType(JsonReader this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter">
            <summary>Stub-Typ von Newtonsoft.Json.Linq.JTokenWriter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.#ctor(Newtonsoft.Json.Linq.JContainer)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.Close">
            <summary>Legt die Stub von JTokenWriter.Close(JTokenWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.Close01">
            <summary>Legt die stub von JTokenWriter.Close(JTokenWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.CloseAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.CloseAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.CloseAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.CloseAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.Dispose(System.Boolean)">
            <summary>Legt die Stub von JsonWriter.Dispose(JsonWriter this, Boolean disposing) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.DisposeBoolean">
            <summary>Legt die stub von JsonWriter.Dispose(JsonWriter this, Boolean disposing) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.Flush">
            <summary>Legt die Stub von JTokenWriter.Flush(JTokenWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.Flush01">
            <summary>Legt die stub von JTokenWriter.Flush(JTokenWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.FlushAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.FlushAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.FlushAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.FlushAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJTokenWriter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteComment(System.String)">
            <summary>Legt die Stub von JTokenWriter.WriteComment(JTokenWriter this, String text) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteCommentAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteCommentAsync(JsonWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteCommentAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteCommentAsync(JsonWriter this, String text, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteCommentString">
            <summary>Legt die stub von JTokenWriter.WriteComment(JTokenWriter this, String text) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEnd">
            <summary>Legt die Stub von JsonWriter.WriteEnd(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)">
            <summary>Legt die Stub von JTokenWriter.WriteEnd(JTokenWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEnd01">
            <summary>Legt die stub von JsonWriter.WriteEnd(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndArray">
            <summary>Legt die Stub von JsonWriter.WriteEndArray(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndArray01">
            <summary>Legt die stub von JsonWriter.WriteEndArray(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndArrayAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteEndArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndArrayAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteEndArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteEndAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndAsync(Newtonsoft.Json.JsonToken,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteEndAsync(JsonWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteEndAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndAsyncJsonTokenCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteEndAsync(JsonWriter this, JsonToken token, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndConstructor">
            <summary>Legt die Stub von JsonWriter.WriteEndConstructor(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndConstructor01">
            <summary>Legt die stub von JsonWriter.WriteEndConstructor(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteEndConstructorAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndConstructorAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteEndConstructorAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndJsonToken">
            <summary>Legt die stub von JTokenWriter.WriteEnd(JTokenWriter this, JsonToken token) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndObject">
            <summary>Legt die Stub von JsonWriter.WriteEndObject(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndObject01">
            <summary>Legt die stub von JsonWriter.WriteEndObject(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndObjectAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteEndObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteEndObjectAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteEndObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteIndent">
            <summary>Legt die Stub von JsonWriter.WriteIndent(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteIndent01">
            <summary>Legt die stub von JsonWriter.WriteIndent(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteIndentAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteIndentAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteIndentAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteIndentAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteIndentSpace">
            <summary>Legt die Stub von JsonWriter.WriteIndentSpace(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteIndentSpace01">
            <summary>Legt die stub von JsonWriter.WriteIndentSpace(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteIndentSpaceAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteIndentSpaceAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteIndentSpaceAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteNull">
            <summary>Legt die Stub von JTokenWriter.WriteNull(JTokenWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteNull01">
            <summary>Legt die stub von JTokenWriter.WriteNull(JTokenWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteNullAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteNullAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteNullAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteNullAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WritePropertyName(System.String)">
            <summary>Legt die Stub von JTokenWriter.WritePropertyName(JTokenWriter this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WritePropertyName(System.String,System.Boolean)">
            <summary>Legt die Stub von JsonWriter.WritePropertyName(JsonWriter this, String name, Boolean escape) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WritePropertyNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WritePropertyNameAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WritePropertyNameAsyncStringBooleanCancellationToken">
            <summary>Legt die stub von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, Boolean escape, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WritePropertyNameAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WritePropertyNameAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WritePropertyNameString">
            <summary>Legt die stub von JTokenWriter.WritePropertyName(JTokenWriter this, String name) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WritePropertyNameStringBoolean">
            <summary>Legt die stub von JsonWriter.WritePropertyName(JsonWriter this, String name, Boolean escape) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteRaw(System.String)">
            <summary>Legt die Stub von JTokenWriter.WriteRaw(JTokenWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteRawAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteRawAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteRawAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteRawAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteRawString">
            <summary>Legt die stub von JTokenWriter.WriteRaw(JTokenWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteRawValue(System.String)">
            <summary>Legt die Stub von JsonWriter.WriteRawValue(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteRawValueAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteRawValueAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteRawValueAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteRawValueAsync(JsonWriter this, String json, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteRawValueString">
            <summary>Legt die stub von JsonWriter.WriteRawValue(JsonWriter this, String json) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartArray">
            <summary>Legt die Stub von JTokenWriter.WriteStartArray(JTokenWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartArray01">
            <summary>Legt die stub von JTokenWriter.WriteStartArray(JTokenWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartArrayAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteStartArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartArrayAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteStartArrayAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartConstructor(System.String)">
            <summary>Legt die Stub von JTokenWriter.WriteStartConstructor(JTokenWriter this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartConstructorAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteStartConstructorAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartConstructorAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteStartConstructorAsync(JsonWriter this, String name, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartConstructorString">
            <summary>Legt die stub von JTokenWriter.WriteStartConstructor(JTokenWriter this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartObject">
            <summary>Legt die Stub von JTokenWriter.WriteStartObject(JTokenWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartObject01">
            <summary>Legt die stub von JTokenWriter.WriteStartObject(JTokenWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartObjectAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteStartObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteStartObjectAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteStartObjectAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteUndefined">
            <summary>Legt die Stub von JTokenWriter.WriteUndefined(JTokenWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteUndefined01">
            <summary>Legt die stub von JTokenWriter.WriteUndefined(JTokenWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteUndefinedAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteUndefinedAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteUndefinedAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteUndefinedAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteValueDelimiter">
            <summary>Legt die Stub von JsonWriter.WriteValueDelimiter(JsonWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteValueDelimiter01">
            <summary>Legt die stub von JsonWriter.WriteValueDelimiter(JsonWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteValueDelimiterAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteValueDelimiterAsyncCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteValueDelimiterAsync(JsonWriter this, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteWhitespace(System.String)">
            <summary>Legt die Stub von JsonWriter.WriteWhitespace(JsonWriter this, String ws) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteWhitespaceAsync(System.String,System.Threading.CancellationToken)">
            <summary>Legt die Stub von JsonWriter.WriteWhitespaceAsync(JsonWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteWhitespaceAsyncStringCancellationToken">
            <summary>Legt die stub von JsonWriter.WriteWhitespaceAsync(JsonWriter this, String ws, CancellationToken cancellationToken) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.Fakes.StubJTokenWriter.WriteWhitespaceString">
            <summary>Legt die stub von JsonWriter.WriteWhitespace(JsonWriter this, String ws) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.StubJsonLoadSettings">
            <summary>Stub-Typ von Newtonsoft.Json.Linq.JsonLoadSettings</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJsonLoadSettings.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJsonLoadSettings.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJsonLoadSettings.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonLoadSettings.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJsonLoadSettings.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJsonLoadSettings.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Linq.Fakes.StubJsonMergeSettings">
            <summary>Stub-Typ von Newtonsoft.Json.Linq.JsonMergeSettings</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJsonMergeSettings.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJsonMergeSettings.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Linq.Fakes.StubJsonMergeSettings.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonMergeSettings.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJsonMergeSettings.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Linq.Fakes.StubJsonMergeSettings.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.CamelCaseNamingStrategy</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy.#ctor(Newtonsoft.Json.Serialization.CamelCaseNamingStrategy)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy.AllInstances.ResolvePropertyNameString">
            <summary>Legt die Shim von CamelCaseNamingStrategy.ResolvePropertyName(CamelCaseNamingStrategy this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy.Constructor">
            <summary>Legt die Shim von CamelCaseNamingStrategy.CamelCaseNamingStrategy(CamelCaseNamingStrategy this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy.ConstructorBooleanBoolean">
            <summary>Legt die Shim von CamelCaseNamingStrategy.CamelCaseNamingStrategy(CamelCaseNamingStrategy this, Boolean processDictionaryKeys, Boolean overrideSpecifiedNames) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy.ConstructorBooleanBooleanBoolean">
            <summary>Legt die Shim von CamelCaseNamingStrategy.CamelCaseNamingStrategy(CamelCaseNamingStrategy this, Boolean processDictionaryKeys, Boolean overrideSpecifiedNames, Boolean processExtensionDataNames) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimCamelCaseNamingStrategy.ResolvePropertyNameString">
            <summary>Legt die Shim von CamelCaseNamingStrategy.ResolvePropertyName(CamelCaseNamingStrategy this, String name) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver.#ctor(Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver.AllInstances.ResolveContractType">
            <summary>Legt die Shim von CamelCasePropertyNamesContractResolver.ResolveContract(CamelCasePropertyNamesContractResolver this, Type type) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver.Bind(Newtonsoft.Json.Serialization.IContractResolver)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver.Constructor">
            <summary>Legt die Shim von CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver(CamelCasePropertyNamesContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver.ResolveContractType">
            <summary>Legt die Shim von CamelCasePropertyNamesContractResolver.ResolveContract(CamelCasePropertyNamesContractResolver this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimCamelCasePropertyNamesContractResolver.StaticConstructor">
            <summary>Legt die Shim von CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver() fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.DefaultContractResolver</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.#ctor(Newtonsoft.Json.Serialization.DefaultContractResolver)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreateArrayContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateArrayContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreateConstructorParametersConstructorInfoJsonPropertyCollection">
            <summary>Legt die Shim von DefaultContractResolver.CreateConstructorParameters(DefaultContractResolver this, ConstructorInfo constructor, JsonPropertyCollection memberProperties) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreateContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreateDictionaryContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateDictionaryContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreateDynamicContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateDynamicContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreateISerializableContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateISerializableContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreateLinqContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateLinqContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreateMemberValueProviderMemberInfo">
            <summary>Legt die Shim von DefaultContractResolver.CreateMemberValueProvider(DefaultContractResolver this, MemberInfo member) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreateObjectContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateObjectContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreatePrimitiveContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreatePrimitiveContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreatePropertiesTypeMemberSerialization">
            <summary>Legt die Shim von DefaultContractResolver.CreateProperties(DefaultContractResolver this, Type type, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreatePropertyFromConstructorParameterJsonPropertyParameterInfo">
            <summary>Legt die Shim von DefaultContractResolver.CreatePropertyFromConstructorParameter(DefaultContractResolver this, JsonProperty matchingMemberProperty, ParameterInfo parameterInfo) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreatePropertyMemberInfoMemberSerialization">
            <summary>Legt die Shim von DefaultContractResolver.CreateProperty(DefaultContractResolver this, MemberInfo member, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreateShouldSerializeTestMemberInfo">
            <summary>Legt die Shim von DefaultContractResolver.CreateShouldSerializeTest(DefaultContractResolver this, MemberInfo member) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.CreateStringContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateStringContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.DefaultMembersSearchFlagsGet">
            <summary>Legt die Shim von DefaultContractResolver.get_DefaultMembersSearchFlags(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.DefaultMembersSearchFlagsSetBindingFlags">
            <summary>Legt die Shim von DefaultContractResolver.set_DefaultMembersSearchFlags(DefaultContractResolver this, BindingFlags value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.DynamicCodeGenerationGet">
            <summary>Legt die Shim von DefaultContractResolver.get_DynamicCodeGeneration(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.GetAttributeConstructorType">
            <summary>Legt die Shim von DefaultContractResolver.GetAttributeConstructor(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.GetCallbackMethodsForTypeTypeListOfSerializationCallbackOutListOfSerializationCallbackOutListOfSerializationCallbackOutListOfSerializationCallbackOutListOfSerializationErrorCallbackOut">
            <summary>Legt die Shim von DefaultContractResolver.GetCallbackMethodsForType(DefaultContractResolver this, Type type, List`1* onSerializing, List`1* onSerialized, List`1* onDeserializing, List`1* onDeserialized, List`1* onError) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.GetClassHierarchyForTypeType">
            <summary>Legt die Shim von DefaultContractResolver.GetClassHierarchyForType(DefaultContractResolver this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.GetDefaultCreatorType">
            <summary>Legt die Shim von DefaultContractResolver.GetDefaultCreator(DefaultContractResolver this, Type createdType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.GetExtensionDataMemberForTypeType">
            <summary>Legt die Shim von DefaultContractResolver.GetExtensionDataMemberForType(DefaultContractResolver this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.GetImmutableConstructorTypeJsonPropertyCollection">
            <summary>Legt die Shim von DefaultContractResolver.GetImmutableConstructor(DefaultContractResolver this, Type objectType, JsonPropertyCollection memberProperties) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.GetParameterizedConstructorType">
            <summary>Legt die Shim von DefaultContractResolver.GetParameterizedConstructor(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.GetResolvedPropertyNameString">
            <summary>Legt die Shim von DefaultContractResolver.GetResolvedPropertyName(DefaultContractResolver this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.GetSerializableMembersType">
            <summary>Legt die Shim von DefaultContractResolver.GetSerializableMembers(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.IgnoreSerializableAttributeGet">
            <summary>Legt die Shim von DefaultContractResolver.get_IgnoreSerializableAttribute(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.IgnoreSerializableAttributeSetBoolean">
            <summary>Legt die Shim von DefaultContractResolver.set_IgnoreSerializableAttribute(DefaultContractResolver this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.IgnoreSerializableInterfaceGet">
            <summary>Legt die Shim von DefaultContractResolver.get_IgnoreSerializableInterface(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.IgnoreSerializableInterfaceSetBoolean">
            <summary>Legt die Shim von DefaultContractResolver.set_IgnoreSerializableInterface(DefaultContractResolver this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.InitializeContractJsonContract">
            <summary>Legt die Shim von DefaultContractResolver.InitializeContract(DefaultContractResolver this, JsonContract contract) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.MatchPropertyJsonPropertyCollectionStringType">
            <summary>Legt die Shim von DefaultContractResolver.MatchProperty(DefaultContractResolver this, JsonPropertyCollection properties, String name, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.NamingStrategyGet">
            <summary>Legt die Shim von DefaultContractResolver.get_NamingStrategy(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.NamingStrategySetNamingStrategy">
            <summary>Legt die Shim von DefaultContractResolver.set_NamingStrategy(DefaultContractResolver this, NamingStrategy value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.ResolveCallbackMethodsJsonContractType">
            <summary>Legt die Shim von DefaultContractResolver.ResolveCallbackMethods(DefaultContractResolver this, JsonContract contract, Type t) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.ResolveContractConverterType">
            <summary>Legt die Shim von DefaultContractResolver.ResolveContractConverter(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.ResolveContractType">
            <summary>Legt die Shim von DefaultContractResolver.ResolveContract(DefaultContractResolver this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.ResolveDictionaryKeyString">
            <summary>Legt die Shim von DefaultContractResolver.ResolveDictionaryKey(DefaultContractResolver this, String dictionaryKey) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.ResolveExtensionDataNameString">
            <summary>Legt die Shim von DefaultContractResolver.ResolveExtensionDataName(DefaultContractResolver this, String extensionDataName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.ResolvePropertyNameString">
            <summary>Legt die Shim von DefaultContractResolver.ResolvePropertyName(DefaultContractResolver this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.SerializeCompilerGeneratedMembersGet">
            <summary>Legt die Shim von DefaultContractResolver.get_SerializeCompilerGeneratedMembers(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.SerializeCompilerGeneratedMembersSetBoolean">
            <summary>Legt die Shim von DefaultContractResolver.set_SerializeCompilerGeneratedMembers(DefaultContractResolver this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.SetIsSpecifiedActionsJsonPropertyMemberInfoBoolean">
            <summary>Legt die Shim von DefaultContractResolver.SetIsSpecifiedActions(DefaultContractResolver this, JsonProperty property, MemberInfo member, Boolean allowNonPublicAccess) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.SetPropertySettingsFromAttributesJsonPropertyObjectStringTypeMemberSerializationBooleanOut">
            <summary>Legt die Shim von DefaultContractResolver.SetPropertySettingsFromAttributes(DefaultContractResolver this, JsonProperty property, Object attributeProvider, String name, Type declaringType, MemberSerialization memberSerialization, Boolean* allowNonPublicAccess) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.AllInstances.ShouldSerializeEntityMemberMemberInfo">
            <summary>Legt die Shim von DefaultContractResolver.ShouldSerializeEntityMember(DefaultContractResolver this, MemberInfo memberInfo) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.Bind(Newtonsoft.Json.Serialization.IContractResolver)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CanConvertToStringType">
            <summary>Legt die Shim von DefaultContractResolver.CanConvertToString(Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.Constructor">
            <summary>Legt die Shim von DefaultContractResolver.DefaultContractResolver(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreateArrayContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateArrayContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreateConstructorParametersConstructorInfoJsonPropertyCollection">
            <summary>Legt die Shim von DefaultContractResolver.CreateConstructorParameters(DefaultContractResolver this, ConstructorInfo constructor, JsonPropertyCollection memberProperties) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreateContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreateDictionaryContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateDictionaryContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreateDynamicContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateDynamicContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreateISerializableContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateISerializableContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreateLinqContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateLinqContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreateMemberValueProviderMemberInfo">
            <summary>Legt die Shim von DefaultContractResolver.CreateMemberValueProvider(DefaultContractResolver this, MemberInfo member) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreateObjectContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateObjectContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreatePrimitiveContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreatePrimitiveContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreatePropertiesTypeMemberSerialization">
            <summary>Legt die Shim von DefaultContractResolver.CreateProperties(DefaultContractResolver this, Type type, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreatePropertyFromConstructorParameterJsonPropertyParameterInfo">
            <summary>Legt die Shim von DefaultContractResolver.CreatePropertyFromConstructorParameter(DefaultContractResolver this, JsonProperty matchingMemberProperty, ParameterInfo parameterInfo) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreatePropertyMemberInfoMemberSerialization">
            <summary>Legt die Shim von DefaultContractResolver.CreateProperty(DefaultContractResolver this, MemberInfo member, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreateShouldSerializeTestMemberInfo">
            <summary>Legt die Shim von DefaultContractResolver.CreateShouldSerializeTest(DefaultContractResolver this, MemberInfo member) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.CreateStringContractType">
            <summary>Legt die Shim von DefaultContractResolver.CreateStringContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.DefaultMembersSearchFlagsGet">
            <summary>Legt die Shim von DefaultContractResolver.get_DefaultMembersSearchFlags(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.DefaultMembersSearchFlagsSetBindingFlags">
            <summary>Legt die Shim von DefaultContractResolver.set_DefaultMembersSearchFlags(DefaultContractResolver this, BindingFlags value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.DynamicCodeGenerationGet">
            <summary>Legt die Shim von DefaultContractResolver.get_DynamicCodeGeneration(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.GetAttributeConstructorType">
            <summary>Legt die Shim von DefaultContractResolver.GetAttributeConstructor(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.GetClassHierarchyForTypeType">
            <summary>Legt die Shim von DefaultContractResolver.GetClassHierarchyForType(DefaultContractResolver this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.GetClrTypeFullNameType">
            <summary>Legt die Shim von DefaultContractResolver.GetClrTypeFullName(Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.GetDefaultCreatorType">
            <summary>Legt die Shim von DefaultContractResolver.GetDefaultCreator(DefaultContractResolver this, Type createdType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.GetExtensionDataMemberForTypeType">
            <summary>Legt die Shim von DefaultContractResolver.GetExtensionDataMemberForType(DefaultContractResolver this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.GetImmutableConstructorTypeJsonPropertyCollection">
            <summary>Legt die Shim von DefaultContractResolver.GetImmutableConstructor(DefaultContractResolver this, Type objectType, JsonPropertyCollection memberProperties) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.GetParameterizedConstructorType">
            <summary>Legt die Shim von DefaultContractResolver.GetParameterizedConstructor(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.GetResolvedPropertyNameString">
            <summary>Legt die Shim von DefaultContractResolver.GetResolvedPropertyName(DefaultContractResolver this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.GetSerializableMembersType">
            <summary>Legt die Shim von DefaultContractResolver.GetSerializableMembers(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.IgnoreSerializableAttributeGet">
            <summary>Legt die Shim von DefaultContractResolver.get_IgnoreSerializableAttribute(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.IgnoreSerializableAttributeSetBoolean">
            <summary>Legt die Shim von DefaultContractResolver.set_IgnoreSerializableAttribute(DefaultContractResolver this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.IgnoreSerializableInterfaceGet">
            <summary>Legt die Shim von DefaultContractResolver.get_IgnoreSerializableInterface(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.IgnoreSerializableInterfaceSetBoolean">
            <summary>Legt die Shim von DefaultContractResolver.set_IgnoreSerializableInterface(DefaultContractResolver this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.InitializeContractJsonContract">
            <summary>Legt die Shim von DefaultContractResolver.InitializeContract(DefaultContractResolver this, JsonContract contract) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.InstanceGet">
            <summary>Legt die Shim von DefaultContractResolver.get_Instance() fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.IsConcurrentCollectionType">
            <summary>Legt die Shim von DefaultContractResolver.IsConcurrentCollection(Type t) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.IsIConvertibleType">
            <summary>Legt die Shim von DefaultContractResolver.IsIConvertible(Type t) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.IsJsonPrimitiveTypeType">
            <summary>Legt die Shim von DefaultContractResolver.IsJsonPrimitiveType(Type t) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.IsValidCallbackMethodInfoParameterInfoArrayTypeMethodInfoTypeRef">
            <summary>Legt die Shim von DefaultContractResolver.IsValidCallback(MethodInfo method, ParameterInfo[] parameters, Type attributeType, MethodInfo currentCallback, Type* prevAttributeType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.MatchPropertyJsonPropertyCollectionStringType">
            <summary>Legt die Shim von DefaultContractResolver.MatchProperty(DefaultContractResolver this, JsonPropertyCollection properties, String name, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.NamingStrategyGet">
            <summary>Legt die Shim von DefaultContractResolver.get_NamingStrategy(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.NamingStrategySetNamingStrategy">
            <summary>Legt die Shim von DefaultContractResolver.set_NamingStrategy(DefaultContractResolver this, NamingStrategy value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.ResolveCallbackMethodsJsonContractType">
            <summary>Legt die Shim von DefaultContractResolver.ResolveCallbackMethods(DefaultContractResolver this, JsonContract contract, Type t) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.ResolveContractConverterType">
            <summary>Legt die Shim von DefaultContractResolver.ResolveContractConverter(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.ResolveContractType">
            <summary>Legt die Shim von DefaultContractResolver.ResolveContract(DefaultContractResolver this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.ResolveDictionaryKeyString">
            <summary>Legt die Shim von DefaultContractResolver.ResolveDictionaryKey(DefaultContractResolver this, String dictionaryKey) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.ResolveExtensionDataNameString">
            <summary>Legt die Shim von DefaultContractResolver.ResolveExtensionDataName(DefaultContractResolver this, String extensionDataName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.ResolvePropertyNameString">
            <summary>Legt die Shim von DefaultContractResolver.ResolvePropertyName(DefaultContractResolver this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.SerializeCompilerGeneratedMembersGet">
            <summary>Legt die Shim von DefaultContractResolver.get_SerializeCompilerGeneratedMembers(DefaultContractResolver this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.SerializeCompilerGeneratedMembersSetBoolean">
            <summary>Legt die Shim von DefaultContractResolver.set_SerializeCompilerGeneratedMembers(DefaultContractResolver this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.SetExtensionDataDelegatesJsonObjectContractMemberInfo">
            <summary>Legt die Shim von DefaultContractResolver.SetExtensionDataDelegates(JsonObjectContract contract, MemberInfo member) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.SetIsSpecifiedActionsJsonPropertyMemberInfoBoolean">
            <summary>Legt die Shim von DefaultContractResolver.SetIsSpecifiedActions(DefaultContractResolver this, JsonProperty property, MemberInfo member, Boolean allowNonPublicAccess) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.SetPropertySettingsFromAttributesJsonPropertyObjectStringTypeMemberSerializationBooleanOut">
            <summary>Legt die Shim von DefaultContractResolver.SetPropertySettingsFromAttributes(DefaultContractResolver this, JsonProperty property, Object attributeProvider, String name, Type declaringType, MemberSerialization memberSerialization, Boolean* allowNonPublicAccess) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.ShouldSerializeEntityMemberMemberInfo">
            <summary>Legt die Shim von DefaultContractResolver.ShouldSerializeEntityMember(DefaultContractResolver this, MemberInfo memberInfo) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.ShouldSkipDeserializedType">
            <summary>Legt die Shim von DefaultContractResolver.ShouldSkipDeserialized(Type t) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.ShouldSkipSerializingType">
            <summary>Legt die Shim von DefaultContractResolver.ShouldSkipSerializing(Type t) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultContractResolver.StaticConstructor">
            <summary>Legt die Shim von DefaultContractResolver.DefaultContractResolver() fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimDefaultNamingStrategy">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.DefaultNamingStrategy</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultNamingStrategy.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultNamingStrategy.#ctor(Newtonsoft.Json.Serialization.DefaultNamingStrategy)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimDefaultNamingStrategy.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultNamingStrategy.AllInstances.ResolvePropertyNameString">
            <summary>Legt die Shim von DefaultNamingStrategy.ResolvePropertyName(DefaultNamingStrategy this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultNamingStrategy.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultNamingStrategy.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultNamingStrategy.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultNamingStrategy.Constructor">
            <summary>Legt die Shim von DefaultNamingStrategy.DefaultNamingStrategy(DefaultNamingStrategy this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultNamingStrategy.ResolvePropertyNameString">
            <summary>Legt die Shim von DefaultNamingStrategy.ResolvePropertyName(DefaultNamingStrategy this, String name) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.DefaultSerializationBinder</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.#ctor(Newtonsoft.Json.Serialization.DefaultSerializationBinder)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.AllInstances.BindToNameTypeStringOutStringOut">
            <summary>Legt die Shim von DefaultSerializationBinder.BindToName(DefaultSerializationBinder this, Type serializedType, String* assemblyName, String* typeName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.AllInstances.BindToTypeStringString">
            <summary>Legt die Shim von DefaultSerializationBinder.BindToType(DefaultSerializationBinder this, String assemblyName, String typeName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.AllInstances.GetGenericTypeFromTypeNameStringAssembly">
            <summary>Legt die Shim von DefaultSerializationBinder.GetGenericTypeFromTypeName(DefaultSerializationBinder this, String typeName, Assembly assembly) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.Bind(Newtonsoft.Json.Serialization.ISerializationBinder)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.BindToNameTypeStringOutStringOut">
            <summary>Legt die Shim von DefaultSerializationBinder.BindToName(DefaultSerializationBinder this, Type serializedType, String* assemblyName, String* typeName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.BindToTypeStringString">
            <summary>Legt die Shim von DefaultSerializationBinder.BindToType(DefaultSerializationBinder this, String assemblyName, String typeName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.Constructor">
            <summary>Legt die Shim von DefaultSerializationBinder.DefaultSerializationBinder(DefaultSerializationBinder this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.GetGenericTypeFromTypeNameStringAssembly">
            <summary>Legt die Shim von DefaultSerializationBinder.GetGenericTypeFromTypeName(DefaultSerializationBinder this, String typeName, Assembly assembly) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDefaultSerializationBinder.StaticConstructor">
            <summary>Legt die Shim von DefaultSerializationBinder.DefaultSerializationBinder() fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.DiagnosticsTraceWriter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.#ctor(Newtonsoft.Json.Serialization.DiagnosticsTraceWriter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.AllInstances.GetTraceEventTypeTraceLevel">
            <summary>Legt die Shim von DiagnosticsTraceWriter.GetTraceEventType(DiagnosticsTraceWriter this, TraceLevel level) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.AllInstances.LevelFilterGet">
            <summary>Legt die Shim von DiagnosticsTraceWriter.get_LevelFilter(DiagnosticsTraceWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.AllInstances.LevelFilterSetTraceLevel">
            <summary>Legt die Shim von DiagnosticsTraceWriter.set_LevelFilter(DiagnosticsTraceWriter this, TraceLevel value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.AllInstances.TraceTraceLevelStringException">
            <summary>Legt die Shim von DiagnosticsTraceWriter.Trace(DiagnosticsTraceWriter this, TraceLevel level, String message, Exception ex) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.Bind(Newtonsoft.Json.Serialization.ITraceWriter)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.Constructor">
            <summary>Legt die Shim von DiagnosticsTraceWriter.DiagnosticsTraceWriter(DiagnosticsTraceWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.GetTraceEventTypeTraceLevel">
            <summary>Legt die Shim von DiagnosticsTraceWriter.GetTraceEventType(DiagnosticsTraceWriter this, TraceLevel level) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.LevelFilterGet">
            <summary>Legt die Shim von DiagnosticsTraceWriter.get_LevelFilter(DiagnosticsTraceWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.LevelFilterSetTraceLevel">
            <summary>Legt die Shim von DiagnosticsTraceWriter.set_LevelFilter(DiagnosticsTraceWriter this, TraceLevel value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDiagnosticsTraceWriter.TraceTraceLevelStringException">
            <summary>Legt die Shim von DiagnosticsTraceWriter.Trace(DiagnosticsTraceWriter this, TraceLevel level, String message, Exception ex) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.DynamicValueProvider</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.#ctor(Newtonsoft.Json.Serialization.DynamicValueProvider)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.AllInstances.GetValueObject">
            <summary>Legt die Shim von DynamicValueProvider.GetValue(DynamicValueProvider this, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.AllInstances.SetValueObjectObject">
            <summary>Legt die Shim von DynamicValueProvider.SetValue(DynamicValueProvider this, Object target, Object value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.Bind(Newtonsoft.Json.Serialization.IValueProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.ConstructorMemberInfo">
            <summary>Legt die Shim von DynamicValueProvider.DynamicValueProvider(DynamicValueProvider this, MemberInfo memberInfo) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.GetValueObject">
            <summary>Legt die Shim von DynamicValueProvider.GetValue(DynamicValueProvider this, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimDynamicValueProvider.SetValueObjectObject">
            <summary>Legt die Shim von DynamicValueProvider.SetValue(DynamicValueProvider this, Object target, Object value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.ErrorContext</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.#ctor(Newtonsoft.Json.Serialization.ErrorContext)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.AllInstances.ErrorGet">
            <summary>Legt die Shim von ErrorContext.get_Error(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.AllInstances.HandledGet">
            <summary>Legt die Shim von ErrorContext.get_Handled(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.AllInstances.HandledSetBoolean">
            <summary>Legt die Shim von ErrorContext.set_Handled(ErrorContext this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.AllInstances.MemberGet">
            <summary>Legt die Shim von ErrorContext.get_Member(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.AllInstances.OriginalObjectGet">
            <summary>Legt die Shim von ErrorContext.get_OriginalObject(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.AllInstances.PathGet">
            <summary>Legt die Shim von ErrorContext.get_Path(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.AllInstances.TracedGet">
            <summary>Legt die Shim von ErrorContext.get_Traced(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.AllInstances.TracedSetBoolean">
            <summary>Legt die Shim von ErrorContext.set_Traced(ErrorContext this, Boolean value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.ConstructorObjectObjectStringException">
            <summary>Legt die Shim von ErrorContext.ErrorContext(ErrorContext this, Object originalObject, Object member, String path, Exception error) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.ErrorGet">
            <summary>Legt die Shim von ErrorContext.get_Error(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.HandledGet">
            <summary>Legt die Shim von ErrorContext.get_Handled(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.HandledSetBoolean">
            <summary>Legt die Shim von ErrorContext.set_Handled(ErrorContext this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.MemberGet">
            <summary>Legt die Shim von ErrorContext.get_Member(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.OriginalObjectGet">
            <summary>Legt die Shim von ErrorContext.get_OriginalObject(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.PathGet">
            <summary>Legt die Shim von ErrorContext.get_Path(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.TracedGet">
            <summary>Legt die Shim von ErrorContext.get_Traced(ErrorContext this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorContext.TracedSetBoolean">
            <summary>Legt die Shim von ErrorContext.set_Traced(ErrorContext this, Boolean value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.ErrorEventArgs</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs.#ctor(Newtonsoft.Json.Serialization.ErrorEventArgs)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs.AllInstances.CurrentObjectGet">
            <summary>Legt die Shim von ErrorEventArgs.get_CurrentObject(ErrorEventArgs this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs.AllInstances.ErrorContextGet">
            <summary>Legt die Shim von ErrorEventArgs.get_ErrorContext(ErrorEventArgs this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs.ConstructorObjectErrorContext">
            <summary>Legt die Shim von ErrorEventArgs.ErrorEventArgs(ErrorEventArgs this, Object currentObject, ErrorContext errorContext) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs.CurrentObjectGet">
            <summary>Legt die Shim von ErrorEventArgs.get_CurrentObject(ErrorEventArgs this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimErrorEventArgs.ErrorContextGet">
            <summary>Legt die Shim von ErrorEventArgs.get_ErrorContext(ErrorEventArgs this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.ExpressionValueProvider</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.#ctor(Newtonsoft.Json.Serialization.ExpressionValueProvider)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.AllInstances.GetValueObject">
            <summary>Legt die Shim von ExpressionValueProvider.GetValue(ExpressionValueProvider this, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.AllInstances.SetValueObjectObject">
            <summary>Legt die Shim von ExpressionValueProvider.SetValue(ExpressionValueProvider this, Object target, Object value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.Bind(Newtonsoft.Json.Serialization.IValueProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.ConstructorMemberInfo">
            <summary>Legt die Shim von ExpressionValueProvider.ExpressionValueProvider(ExpressionValueProvider this, MemberInfo memberInfo) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.GetValueObject">
            <summary>Legt die Shim von ExpressionValueProvider.GetValue(ExpressionValueProvider this, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExpressionValueProvider.SetValueObjectObject">
            <summary>Legt die Shim von ExpressionValueProvider.SetValue(ExpressionValueProvider this, Object target, Object value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.ExtensionDataGetter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.#ctor(Newtonsoft.Json.Serialization.ExtensionDataGetter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.AllInstances.BeginInvokeObjectAsyncCallbackObject">
            <summary>Legt die Shim von ExtensionDataGetter.BeginInvoke(ExtensionDataGetter this, Object o, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.AllInstances.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ExtensionDataGetter.EndInvoke(ExtensionDataGetter this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.AllInstances.InvokeObject">
            <summary>Legt die Shim von ExtensionDataGetter.Invoke(ExtensionDataGetter this, Object o) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.BeginInvokeObjectAsyncCallbackObject">
            <summary>Legt die Shim von ExtensionDataGetter.BeginInvoke(ExtensionDataGetter this, Object o, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.ConstructorObjectIntPtr">
            <summary>Legt die Shim von ExtensionDataGetter.ExtensionDataGetter(ExtensionDataGetter this, Object object, IntPtr method) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ExtensionDataGetter.EndInvoke(ExtensionDataGetter this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataGetter.InvokeObject">
            <summary>Legt die Shim von ExtensionDataGetter.Invoke(ExtensionDataGetter this, Object o) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.ExtensionDataSetter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.#ctor(Newtonsoft.Json.Serialization.ExtensionDataSetter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.AllInstances.BeginInvokeObjectStringObjectAsyncCallbackObject">
            <summary>Legt die Shim von ExtensionDataSetter.BeginInvoke(ExtensionDataSetter this, Object o, String key, Object value, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.AllInstances.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ExtensionDataSetter.EndInvoke(ExtensionDataSetter this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.AllInstances.InvokeObjectStringObject">
            <summary>Legt die Shim von ExtensionDataSetter.Invoke(ExtensionDataSetter this, Object o, String key, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.BeginInvokeObjectStringObjectAsyncCallbackObject">
            <summary>Legt die Shim von ExtensionDataSetter.BeginInvoke(ExtensionDataSetter this, Object o, String key, Object value, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.ConstructorObjectIntPtr">
            <summary>Legt die Shim von ExtensionDataSetter.ExtensionDataSetter(ExtensionDataSetter this, Object object, IntPtr method) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ExtensionDataSetter.EndInvoke(ExtensionDataSetter this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimExtensionDataSetter.InvokeObjectStringObject">
            <summary>Legt die Shim von ExtensionDataSetter.Invoke(ExtensionDataSetter this, Object o, String key, Object value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonArrayContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.#ctor(Newtonsoft.Json.Serialization.JsonArrayContract)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.CanDeserializeGet">
            <summary>Legt die Shim von JsonArrayContract.get_CanDeserialize(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.CanDeserializeSetBoolean">
            <summary>Legt die Shim von JsonArrayContract.set_CanDeserialize(JsonArrayContract this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.CollectionItemTypeGet">
            <summary>Legt die Shim von JsonArrayContract.get_CollectionItemType(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.CreateTemporaryCollection">
            <summary>Legt die Shim von JsonArrayContract.CreateTemporaryCollection(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.HasParameterizedCreatorGet">
            <summary>Legt die Shim von JsonArrayContract.get_HasParameterizedCreator(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.HasParameterizedCreatorInternalGet">
            <summary>Legt die Shim von JsonArrayContract.get_HasParameterizedCreatorInternal(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.HasParameterizedCreatorSetBoolean">
            <summary>Legt die Shim von JsonArrayContract.set_HasParameterizedCreator(JsonArrayContract this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.IsArrayGet">
            <summary>Legt die Shim von JsonArrayContract.get_IsArray(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.IsMultidimensionalArrayGet">
            <summary>Legt die Shim von JsonArrayContract.get_IsMultidimensionalArray(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.OverrideCreatorGet">
            <summary>Legt die Shim von JsonArrayContract.get_OverrideCreator(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.OverrideCreatorSetObjectConstructorOfObject">
            <summary>Legt die Shim von JsonArrayContract.set_OverrideCreator(JsonArrayContract this, ObjectConstructor`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.ParameterizedCreatorGet">
            <summary>Legt die Shim von JsonArrayContract.get_ParameterizedCreator(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.ShouldCreateWrapperGet">
            <summary>Legt die Shim von JsonArrayContract.get_ShouldCreateWrapper(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.AllInstances.StoreFSharpListCreatorIfNecessaryType">
            <summary>Legt die Shim von JsonArrayContract.StoreFSharpListCreatorIfNecessary(JsonArrayContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.CanDeserializeGet">
            <summary>Legt die Shim von JsonArrayContract.get_CanDeserialize(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.CanDeserializeSetBoolean">
            <summary>Legt die Shim von JsonArrayContract.set_CanDeserialize(JsonArrayContract this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.CollectionItemTypeGet">
            <summary>Legt die Shim von JsonArrayContract.get_CollectionItemType(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.ConstructorType">
            <summary>Legt die Shim von JsonArrayContract.JsonArrayContract(JsonArrayContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.CreateTemporaryCollection">
            <summary>Legt die Shim von JsonArrayContract.CreateTemporaryCollection(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.HasParameterizedCreatorGet">
            <summary>Legt die Shim von JsonArrayContract.get_HasParameterizedCreator(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.HasParameterizedCreatorInternalGet">
            <summary>Legt die Shim von JsonArrayContract.get_HasParameterizedCreatorInternal(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.HasParameterizedCreatorSetBoolean">
            <summary>Legt die Shim von JsonArrayContract.set_HasParameterizedCreator(JsonArrayContract this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.IsArrayGet">
            <summary>Legt die Shim von JsonArrayContract.get_IsArray(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.IsMultidimensionalArrayGet">
            <summary>Legt die Shim von JsonArrayContract.get_IsMultidimensionalArray(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.OverrideCreatorGet">
            <summary>Legt die Shim von JsonArrayContract.get_OverrideCreator(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.OverrideCreatorSetObjectConstructorOfObject">
            <summary>Legt die Shim von JsonArrayContract.set_OverrideCreator(JsonArrayContract this, ObjectConstructor`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.ParameterizedCreatorGet">
            <summary>Legt die Shim von JsonArrayContract.get_ParameterizedCreator(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.ShouldCreateWrapperGet">
            <summary>Legt die Shim von JsonArrayContract.get_ShouldCreateWrapper(JsonArrayContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonArrayContract.StoreFSharpListCreatorIfNecessaryType">
            <summary>Legt die Shim von JsonArrayContract.StoreFSharpListCreatorIfNecessary(JsonArrayContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonContainerContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.#ctor(Newtonsoft.Json.Serialization.JsonContainerContract)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances.FinalItemContractGet">
            <summary>Legt die Shim von JsonContainerContract.get_FinalItemContract(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances.ItemContractGet">
            <summary>Legt die Shim von JsonContainerContract.get_ItemContract(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances.ItemContractSetJsonContract">
            <summary>Legt die Shim von JsonContainerContract.set_ItemContract(JsonContainerContract this, JsonContract value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances.ItemConverterGet">
            <summary>Legt die Shim von JsonContainerContract.get_ItemConverter(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances.ItemConverterSetJsonConverter">
            <summary>Legt die Shim von JsonContainerContract.set_ItemConverter(JsonContainerContract this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances.ItemIsReferenceGet">
            <summary>Legt die Shim von JsonContainerContract.get_ItemIsReference(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances.ItemIsReferenceSetNullableOfBoolean">
            <summary>Legt die Shim von JsonContainerContract.set_ItemIsReference(JsonContainerContract this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances.ItemReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonContainerContract.get_ItemReferenceLoopHandling(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances.ItemReferenceLoopHandlingSetNullableOfReferenceLoopHandling">
            <summary>Legt die Shim von JsonContainerContract.set_ItemReferenceLoopHandling(JsonContainerContract this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances.ItemTypeNameHandlingGet">
            <summary>Legt die Shim von JsonContainerContract.get_ItemTypeNameHandling(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.AllInstances.ItemTypeNameHandlingSetNullableOfTypeNameHandling">
            <summary>Legt die Shim von JsonContainerContract.set_ItemTypeNameHandling(JsonContainerContract this, Nullable`1 value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.ConstructorType">
            <summary>Legt die Shim von JsonContainerContract.JsonContainerContract(JsonContainerContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.FinalItemContractGet">
            <summary>Legt die Shim von JsonContainerContract.get_FinalItemContract(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.ItemContractGet">
            <summary>Legt die Shim von JsonContainerContract.get_ItemContract(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.ItemContractSetJsonContract">
            <summary>Legt die Shim von JsonContainerContract.set_ItemContract(JsonContainerContract this, JsonContract value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.ItemConverterGet">
            <summary>Legt die Shim von JsonContainerContract.get_ItemConverter(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.ItemConverterSetJsonConverter">
            <summary>Legt die Shim von JsonContainerContract.set_ItemConverter(JsonContainerContract this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.ItemIsReferenceGet">
            <summary>Legt die Shim von JsonContainerContract.get_ItemIsReference(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.ItemIsReferenceSetNullableOfBoolean">
            <summary>Legt die Shim von JsonContainerContract.set_ItemIsReference(JsonContainerContract this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.ItemReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonContainerContract.get_ItemReferenceLoopHandling(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.ItemReferenceLoopHandlingSetNullableOfReferenceLoopHandling">
            <summary>Legt die Shim von JsonContainerContract.set_ItemReferenceLoopHandling(JsonContainerContract this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.ItemTypeNameHandlingGet">
            <summary>Legt die Shim von JsonContainerContract.get_ItemTypeNameHandling(JsonContainerContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContainerContract.ItemTypeNameHandlingSetNullableOfTypeNameHandling">
            <summary>Legt die Shim von JsonContainerContract.set_ItemTypeNameHandling(JsonContainerContract this, Nullable`1 value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.#ctor(Newtonsoft.Json.Serialization.JsonContract)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.ConverterGet">
            <summary>Legt die Shim von JsonContract.get_Converter(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.ConverterSetJsonConverter">
            <summary>Legt die Shim von JsonContract.set_Converter(JsonContract this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.CreatedTypeGet">
            <summary>Legt die Shim von JsonContract.get_CreatedType(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.CreatedTypeSetType">
            <summary>Legt die Shim von JsonContract.set_CreatedType(JsonContract this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.DefaultCreatorGet">
            <summary>Legt die Shim von JsonContract.get_DefaultCreator(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.DefaultCreatorNonPublicGet">
            <summary>Legt die Shim von JsonContract.get_DefaultCreatorNonPublic(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.DefaultCreatorNonPublicSetBoolean">
            <summary>Legt die Shim von JsonContract.set_DefaultCreatorNonPublic(JsonContract this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.DefaultCreatorSetFuncOfObject">
            <summary>Legt die Shim von JsonContract.set_DefaultCreator(JsonContract this, Func`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.InternalConverterGet">
            <summary>Legt die Shim von JsonContract.get_InternalConverter(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.InternalConverterSetJsonConverter">
            <summary>Legt die Shim von JsonContract.set_InternalConverter(JsonContract this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.InvokeOnDeserializedObjectStreamingContext">
            <summary>Legt die Shim von JsonContract.InvokeOnDeserialized(JsonContract this, Object o, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.InvokeOnDeserializingObjectStreamingContext">
            <summary>Legt die Shim von JsonContract.InvokeOnDeserializing(JsonContract this, Object o, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.InvokeOnErrorObjectStreamingContextErrorContext">
            <summary>Legt die Shim von JsonContract.InvokeOnError(JsonContract this, Object o, StreamingContext context, ErrorContext errorContext) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.InvokeOnSerializedObjectStreamingContext">
            <summary>Legt die Shim von JsonContract.InvokeOnSerialized(JsonContract this, Object o, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.InvokeOnSerializingObjectStreamingContext">
            <summary>Legt die Shim von JsonContract.InvokeOnSerializing(JsonContract this, Object o, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.IsReferenceGet">
            <summary>Legt die Shim von JsonContract.get_IsReference(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.IsReferenceSetNullableOfBoolean">
            <summary>Legt die Shim von JsonContract.set_IsReference(JsonContract this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.OnDeserializedCallbacksGet">
            <summary>Legt die Shim von JsonContract.get_OnDeserializedCallbacks(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.OnDeserializingCallbacksGet">
            <summary>Legt die Shim von JsonContract.get_OnDeserializingCallbacks(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.OnErrorCallbacksGet">
            <summary>Legt die Shim von JsonContract.get_OnErrorCallbacks(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.OnSerializedCallbacksGet">
            <summary>Legt die Shim von JsonContract.get_OnSerializedCallbacks(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.OnSerializingCallbacksGet">
            <summary>Legt die Shim von JsonContract.get_OnSerializingCallbacks(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.AllInstances.UnderlyingTypeGet">
            <summary>Legt die Shim von JsonContract.get_UnderlyingType(JsonContract this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.ConstructorType">
            <summary>Legt die Shim von JsonContract.JsonContract(JsonContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.ConverterGet">
            <summary>Legt die Shim von JsonContract.get_Converter(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.ConverterSetJsonConverter">
            <summary>Legt die Shim von JsonContract.set_Converter(JsonContract this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.CreateSerializationCallbackMethodInfo">
            <summary>Legt die Shim von JsonContract.CreateSerializationCallback(MethodInfo callbackMethodInfo) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.CreateSerializationErrorCallbackMethodInfo">
            <summary>Legt die Shim von JsonContract.CreateSerializationErrorCallback(MethodInfo callbackMethodInfo) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.CreatedTypeGet">
            <summary>Legt die Shim von JsonContract.get_CreatedType(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.CreatedTypeSetType">
            <summary>Legt die Shim von JsonContract.set_CreatedType(JsonContract this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.DefaultCreatorGet">
            <summary>Legt die Shim von JsonContract.get_DefaultCreator(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.DefaultCreatorNonPublicGet">
            <summary>Legt die Shim von JsonContract.get_DefaultCreatorNonPublic(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.DefaultCreatorNonPublicSetBoolean">
            <summary>Legt die Shim von JsonContract.set_DefaultCreatorNonPublic(JsonContract this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.DefaultCreatorSetFuncOfObject">
            <summary>Legt die Shim von JsonContract.set_DefaultCreator(JsonContract this, Func`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.InternalConverterGet">
            <summary>Legt die Shim von JsonContract.get_InternalConverter(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.InternalConverterSetJsonConverter">
            <summary>Legt die Shim von JsonContract.set_InternalConverter(JsonContract this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.InvokeOnDeserializedObjectStreamingContext">
            <summary>Legt die Shim von JsonContract.InvokeOnDeserialized(JsonContract this, Object o, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.InvokeOnDeserializingObjectStreamingContext">
            <summary>Legt die Shim von JsonContract.InvokeOnDeserializing(JsonContract this, Object o, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.InvokeOnErrorObjectStreamingContextErrorContext">
            <summary>Legt die Shim von JsonContract.InvokeOnError(JsonContract this, Object o, StreamingContext context, ErrorContext errorContext) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.InvokeOnSerializedObjectStreamingContext">
            <summary>Legt die Shim von JsonContract.InvokeOnSerialized(JsonContract this, Object o, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.InvokeOnSerializingObjectStreamingContext">
            <summary>Legt die Shim von JsonContract.InvokeOnSerializing(JsonContract this, Object o, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.IsReferenceGet">
            <summary>Legt die Shim von JsonContract.get_IsReference(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.IsReferenceSetNullableOfBoolean">
            <summary>Legt die Shim von JsonContract.set_IsReference(JsonContract this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.OnDeserializedCallbacksGet">
            <summary>Legt die Shim von JsonContract.get_OnDeserializedCallbacks(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.OnDeserializingCallbacksGet">
            <summary>Legt die Shim von JsonContract.get_OnDeserializingCallbacks(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.OnErrorCallbacksGet">
            <summary>Legt die Shim von JsonContract.get_OnErrorCallbacks(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.OnSerializedCallbacksGet">
            <summary>Legt die Shim von JsonContract.get_OnSerializedCallbacks(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.OnSerializingCallbacksGet">
            <summary>Legt die Shim von JsonContract.get_OnSerializingCallbacks(JsonContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonContract.UnderlyingTypeGet">
            <summary>Legt die Shim von JsonContract.get_UnderlyingType(JsonContract this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonDictionaryContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.#ctor(Newtonsoft.Json.Serialization.JsonDictionaryContract)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.CreateTemporaryDictionary">
            <summary>Legt die Shim von JsonDictionaryContract.CreateTemporaryDictionary(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.DictionaryKeyResolverGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_DictionaryKeyResolver(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.DictionaryKeyResolverSetFuncOfStringString">
            <summary>Legt die Shim von JsonDictionaryContract.set_DictionaryKeyResolver(JsonDictionaryContract this, Func`2 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.DictionaryKeyTypeGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_DictionaryKeyType(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.DictionaryValueTypeGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_DictionaryValueType(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.HasParameterizedCreatorGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_HasParameterizedCreator(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.HasParameterizedCreatorInternalGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_HasParameterizedCreatorInternal(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.HasParameterizedCreatorSetBoolean">
            <summary>Legt die Shim von JsonDictionaryContract.set_HasParameterizedCreator(JsonDictionaryContract this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.KeyContractGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_KeyContract(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.KeyContractSetJsonContract">
            <summary>Legt die Shim von JsonDictionaryContract.set_KeyContract(JsonDictionaryContract this, JsonContract value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.OverrideCreatorGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_OverrideCreator(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.OverrideCreatorSetObjectConstructorOfObject">
            <summary>Legt die Shim von JsonDictionaryContract.set_OverrideCreator(JsonDictionaryContract this, ObjectConstructor`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.ParameterizedCreatorGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_ParameterizedCreator(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.AllInstances.ShouldCreateWrapperGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_ShouldCreateWrapper(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.ConstructorType">
            <summary>Legt die Shim von JsonDictionaryContract.JsonDictionaryContract(JsonDictionaryContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.CreateTemporaryDictionary">
            <summary>Legt die Shim von JsonDictionaryContract.CreateTemporaryDictionary(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.DictionaryKeyResolverGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_DictionaryKeyResolver(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.DictionaryKeyResolverSetFuncOfStringString">
            <summary>Legt die Shim von JsonDictionaryContract.set_DictionaryKeyResolver(JsonDictionaryContract this, Func`2 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.DictionaryKeyTypeGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_DictionaryKeyType(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.DictionaryValueTypeGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_DictionaryValueType(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.HasParameterizedCreatorGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_HasParameterizedCreator(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.HasParameterizedCreatorInternalGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_HasParameterizedCreatorInternal(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.HasParameterizedCreatorSetBoolean">
            <summary>Legt die Shim von JsonDictionaryContract.set_HasParameterizedCreator(JsonDictionaryContract this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.KeyContractGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_KeyContract(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.KeyContractSetJsonContract">
            <summary>Legt die Shim von JsonDictionaryContract.set_KeyContract(JsonDictionaryContract this, JsonContract value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.OverrideCreatorGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_OverrideCreator(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.OverrideCreatorSetObjectConstructorOfObject">
            <summary>Legt die Shim von JsonDictionaryContract.set_OverrideCreator(JsonDictionaryContract this, ObjectConstructor`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.ParameterizedCreatorGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_ParameterizedCreator(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDictionaryContract.ShouldCreateWrapperGet">
            <summary>Legt die Shim von JsonDictionaryContract.get_ShouldCreateWrapper(JsonDictionaryContract this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonDynamicContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.#ctor(Newtonsoft.Json.Serialization.JsonDynamicContract)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.AllInstances.PropertiesGet">
            <summary>Legt die Shim von JsonDynamicContract.get_Properties(JsonDynamicContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.AllInstances.PropertyNameResolverGet">
            <summary>Legt die Shim von JsonDynamicContract.get_PropertyNameResolver(JsonDynamicContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.AllInstances.PropertyNameResolverSetFuncOfStringString">
            <summary>Legt die Shim von JsonDynamicContract.set_PropertyNameResolver(JsonDynamicContract this, Func`2 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.AllInstances.TryGetMemberIDynamicMetaObjectProviderStringObjectOut">
            <summary>Legt die Shim von JsonDynamicContract.TryGetMember(JsonDynamicContract this, IDynamicMetaObjectProvider dynamicProvider, String name, Object* value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.AllInstances.TrySetMemberIDynamicMetaObjectProviderStringObject">
            <summary>Legt die Shim von JsonDynamicContract.TrySetMember(JsonDynamicContract this, IDynamicMetaObjectProvider dynamicProvider, String name, Object value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.ConstructorType">
            <summary>Legt die Shim von JsonDynamicContract.JsonDynamicContract(JsonDynamicContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.CreateCallSiteGetterString">
            <summary>Legt die Shim von JsonDynamicContract.CreateCallSiteGetter(String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.CreateCallSiteSetterString">
            <summary>Legt die Shim von JsonDynamicContract.CreateCallSiteSetter(String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.PropertiesGet">
            <summary>Legt die Shim von JsonDynamicContract.get_Properties(JsonDynamicContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.PropertyNameResolverGet">
            <summary>Legt die Shim von JsonDynamicContract.get_PropertyNameResolver(JsonDynamicContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.PropertyNameResolverSetFuncOfStringString">
            <summary>Legt die Shim von JsonDynamicContract.set_PropertyNameResolver(JsonDynamicContract this, Func`2 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.TryGetMemberIDynamicMetaObjectProviderStringObjectOut">
            <summary>Legt die Shim von JsonDynamicContract.TryGetMember(JsonDynamicContract this, IDynamicMetaObjectProvider dynamicProvider, String name, Object* value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonDynamicContract.TrySetMemberIDynamicMetaObjectProviderStringObject">
            <summary>Legt die Shim von JsonDynamicContract.TrySetMember(JsonDynamicContract this, IDynamicMetaObjectProvider dynamicProvider, String name, Object value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonISerializableContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract.#ctor(Newtonsoft.Json.Serialization.JsonISerializableContract)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract.AllInstances.ISerializableCreatorGet">
            <summary>Legt die Shim von JsonISerializableContract.get_ISerializableCreator(JsonISerializableContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract.AllInstances.ISerializableCreatorSetObjectConstructorOfObject">
            <summary>Legt die Shim von JsonISerializableContract.set_ISerializableCreator(JsonISerializableContract this, ObjectConstructor`1 value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract.ConstructorType">
            <summary>Legt die Shim von JsonISerializableContract.JsonISerializableContract(JsonISerializableContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract.ISerializableCreatorGet">
            <summary>Legt die Shim von JsonISerializableContract.get_ISerializableCreator(JsonISerializableContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonISerializableContract.ISerializableCreatorSetObjectConstructorOfObject">
            <summary>Legt die Shim von JsonISerializableContract.set_ISerializableCreator(JsonISerializableContract this, ObjectConstructor`1 value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonLinqContract">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonLinqContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonLinqContract.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonLinqContract.#ctor(Newtonsoft.Json.Serialization.JsonLinqContract)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonLinqContract.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonLinqContract.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonLinqContract.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonLinqContract.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonLinqContract.ConstructorType">
            <summary>Legt die Shim von JsonLinqContract.JsonLinqContract(JsonLinqContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonObjectContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.#ctor(Newtonsoft.Json.Serialization.JsonObjectContract)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.CreatorParametersGet">
            <summary>Legt die Shim von JsonObjectContract.get_CreatorParameters(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ExtensionDataGetterGet">
            <summary>Legt die Shim von JsonObjectContract.get_ExtensionDataGetter(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ExtensionDataGetterSetExtensionDataGetter">
            <summary>Legt die Shim von JsonObjectContract.set_ExtensionDataGetter(JsonObjectContract this, ExtensionDataGetter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ExtensionDataNameResolverGet">
            <summary>Legt die Shim von JsonObjectContract.get_ExtensionDataNameResolver(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ExtensionDataNameResolverSetFuncOfStringString">
            <summary>Legt die Shim von JsonObjectContract.set_ExtensionDataNameResolver(JsonObjectContract this, Func`2 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ExtensionDataSetterGet">
            <summary>Legt die Shim von JsonObjectContract.get_ExtensionDataSetter(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ExtensionDataSetterSetExtensionDataSetter">
            <summary>Legt die Shim von JsonObjectContract.set_ExtensionDataSetter(JsonObjectContract this, ExtensionDataSetter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ExtensionDataValueTypeGet">
            <summary>Legt die Shim von JsonObjectContract.get_ExtensionDataValueType(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ExtensionDataValueTypeSetType">
            <summary>Legt die Shim von JsonObjectContract.set_ExtensionDataValueType(JsonObjectContract this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.GetUninitializedObject">
            <summary>Legt die Shim von JsonObjectContract.GetUninitializedObject(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.HasRequiredOrDefaultValuePropertiesGet">
            <summary>Legt die Shim von JsonObjectContract.get_HasRequiredOrDefaultValueProperties(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ItemRequiredGet">
            <summary>Legt die Shim von JsonObjectContract.get_ItemRequired(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ItemRequiredSetNullableOfRequired">
            <summary>Legt die Shim von JsonObjectContract.set_ItemRequired(JsonObjectContract this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.MemberSerializationGet">
            <summary>Legt die Shim von JsonObjectContract.get_MemberSerialization(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.MemberSerializationSetMemberSerialization">
            <summary>Legt die Shim von JsonObjectContract.set_MemberSerialization(JsonObjectContract this, MemberSerialization value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.OverrideCreatorGet">
            <summary>Legt die Shim von JsonObjectContract.get_OverrideCreator(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.OverrideCreatorSetObjectConstructorOfObject">
            <summary>Legt die Shim von JsonObjectContract.set_OverrideCreator(JsonObjectContract this, ObjectConstructor`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ParameterizedCreatorGet">
            <summary>Legt die Shim von JsonObjectContract.get_ParameterizedCreator(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.ParameterizedCreatorSetObjectConstructorOfObject">
            <summary>Legt die Shim von JsonObjectContract.set_ParameterizedCreator(JsonObjectContract this, ObjectConstructor`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.AllInstances.PropertiesGet">
            <summary>Legt die Shim von JsonObjectContract.get_Properties(JsonObjectContract this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ConstructorType">
            <summary>Legt die Shim von JsonObjectContract.JsonObjectContract(JsonObjectContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.CreatorParametersGet">
            <summary>Legt die Shim von JsonObjectContract.get_CreatorParameters(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ExtensionDataGetterGet">
            <summary>Legt die Shim von JsonObjectContract.get_ExtensionDataGetter(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ExtensionDataGetterSetExtensionDataGetter">
            <summary>Legt die Shim von JsonObjectContract.set_ExtensionDataGetter(JsonObjectContract this, ExtensionDataGetter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ExtensionDataNameResolverGet">
            <summary>Legt die Shim von JsonObjectContract.get_ExtensionDataNameResolver(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ExtensionDataNameResolverSetFuncOfStringString">
            <summary>Legt die Shim von JsonObjectContract.set_ExtensionDataNameResolver(JsonObjectContract this, Func`2 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ExtensionDataSetterGet">
            <summary>Legt die Shim von JsonObjectContract.get_ExtensionDataSetter(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ExtensionDataSetterSetExtensionDataSetter">
            <summary>Legt die Shim von JsonObjectContract.set_ExtensionDataSetter(JsonObjectContract this, ExtensionDataSetter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ExtensionDataValueTypeGet">
            <summary>Legt die Shim von JsonObjectContract.get_ExtensionDataValueType(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ExtensionDataValueTypeSetType">
            <summary>Legt die Shim von JsonObjectContract.set_ExtensionDataValueType(JsonObjectContract this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.GetUninitializedObject">
            <summary>Legt die Shim von JsonObjectContract.GetUninitializedObject(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.HasRequiredOrDefaultValuePropertiesGet">
            <summary>Legt die Shim von JsonObjectContract.get_HasRequiredOrDefaultValueProperties(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ItemRequiredGet">
            <summary>Legt die Shim von JsonObjectContract.get_ItemRequired(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ItemRequiredSetNullableOfRequired">
            <summary>Legt die Shim von JsonObjectContract.set_ItemRequired(JsonObjectContract this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.MemberSerializationGet">
            <summary>Legt die Shim von JsonObjectContract.get_MemberSerialization(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.MemberSerializationSetMemberSerialization">
            <summary>Legt die Shim von JsonObjectContract.set_MemberSerialization(JsonObjectContract this, MemberSerialization value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.OverrideCreatorGet">
            <summary>Legt die Shim von JsonObjectContract.get_OverrideCreator(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.OverrideCreatorSetObjectConstructorOfObject">
            <summary>Legt die Shim von JsonObjectContract.set_OverrideCreator(JsonObjectContract this, ObjectConstructor`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ParameterizedCreatorGet">
            <summary>Legt die Shim von JsonObjectContract.get_ParameterizedCreator(JsonObjectContract this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.ParameterizedCreatorSetObjectConstructorOfObject">
            <summary>Legt die Shim von JsonObjectContract.set_ParameterizedCreator(JsonObjectContract this, ObjectConstructor`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonObjectContract.PropertiesGet">
            <summary>Legt die Shim von JsonObjectContract.get_Properties(JsonObjectContract this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonPrimitiveContract">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonPrimitiveContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPrimitiveContract.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPrimitiveContract.#ctor(Newtonsoft.Json.Serialization.JsonPrimitiveContract)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonPrimitiveContract.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPrimitiveContract.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPrimitiveContract.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPrimitiveContract.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPrimitiveContract.ConstructorType">
            <summary>Legt die Shim von JsonPrimitiveContract.JsonPrimitiveContract(JsonPrimitiveContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPrimitiveContract.StaticConstructor">
            <summary>Legt die Shim von JsonPrimitiveContract.JsonPrimitiveContract() fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonProperty</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.#ctor(Newtonsoft.Json.Serialization.JsonProperty)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.AttributeProviderGet">
            <summary>Legt die Shim von JsonProperty.get_AttributeProvider(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.AttributeProviderSetIAttributeProvider">
            <summary>Legt die Shim von JsonProperty.set_AttributeProvider(JsonProperty this, IAttributeProvider value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ConverterGet">
            <summary>Legt die Shim von JsonProperty.get_Converter(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ConverterSetJsonConverter">
            <summary>Legt die Shim von JsonProperty.set_Converter(JsonProperty this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.DeclaringTypeGet">
            <summary>Legt die Shim von JsonProperty.get_DeclaringType(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.DeclaringTypeSetType">
            <summary>Legt die Shim von JsonProperty.set_DeclaringType(JsonProperty this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.DefaultValueGet">
            <summary>Legt die Shim von JsonProperty.get_DefaultValue(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.DefaultValueHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_DefaultValueHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.DefaultValueHandlingSetNullableOfDefaultValueHandling">
            <summary>Legt die Shim von JsonProperty.set_DefaultValueHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.DefaultValueSetObject">
            <summary>Legt die Shim von JsonProperty.set_DefaultValue(JsonProperty this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.GetIsSpecifiedGet">
            <summary>Legt die Shim von JsonProperty.get_GetIsSpecified(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.GetIsSpecifiedSetPredicateOfObject">
            <summary>Legt die Shim von JsonProperty.set_GetIsSpecified(JsonProperty this, Predicate`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.GetResolvedDefaultValue">
            <summary>Legt die Shim von JsonProperty.GetResolvedDefaultValue(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.HasMemberAttributeGet">
            <summary>Legt die Shim von JsonProperty.get_HasMemberAttribute(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.HasMemberAttributeSetBoolean">
            <summary>Legt die Shim von JsonProperty.set_HasMemberAttribute(JsonProperty this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.IgnoredGet">
            <summary>Legt die Shim von JsonProperty.get_Ignored(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.IgnoredSetBoolean">
            <summary>Legt die Shim von JsonProperty.set_Ignored(JsonProperty this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.IsReferenceGet">
            <summary>Legt die Shim von JsonProperty.get_IsReference(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.IsReferenceSetNullableOfBoolean">
            <summary>Legt die Shim von JsonProperty.set_IsReference(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ItemConverterGet">
            <summary>Legt die Shim von JsonProperty.get_ItemConverter(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ItemConverterSetJsonConverter">
            <summary>Legt die Shim von JsonProperty.set_ItemConverter(JsonProperty this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ItemIsReferenceGet">
            <summary>Legt die Shim von JsonProperty.get_ItemIsReference(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ItemIsReferenceSetNullableOfBoolean">
            <summary>Legt die Shim von JsonProperty.set_ItemIsReference(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ItemReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_ItemReferenceLoopHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ItemReferenceLoopHandlingSetNullableOfReferenceLoopHandling">
            <summary>Legt die Shim von JsonProperty.set_ItemReferenceLoopHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ItemTypeNameHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_ItemTypeNameHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ItemTypeNameHandlingSetNullableOfTypeNameHandling">
            <summary>Legt die Shim von JsonProperty.set_ItemTypeNameHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.MemberConverterGet">
            <summary>Legt die Shim von JsonProperty.get_MemberConverter(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.MemberConverterSetJsonConverter">
            <summary>Legt die Shim von JsonProperty.set_MemberConverter(JsonProperty this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.NullValueHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_NullValueHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.NullValueHandlingSetNullableOfNullValueHandling">
            <summary>Legt die Shim von JsonProperty.set_NullValueHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ObjectCreationHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_ObjectCreationHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ObjectCreationHandlingSetNullableOfObjectCreationHandling">
            <summary>Legt die Shim von JsonProperty.set_ObjectCreationHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.OrderGet">
            <summary>Legt die Shim von JsonProperty.get_Order(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.OrderSetNullableOfInt32">
            <summary>Legt die Shim von JsonProperty.set_Order(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.PropertyContractGet">
            <summary>Legt die Shim von JsonProperty.get_PropertyContract(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.PropertyContractSetJsonContract">
            <summary>Legt die Shim von JsonProperty.set_PropertyContract(JsonProperty this, JsonContract value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.PropertyNameGet">
            <summary>Legt die Shim von JsonProperty.get_PropertyName(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.PropertyNameSetString">
            <summary>Legt die Shim von JsonProperty.set_PropertyName(JsonProperty this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.PropertyTypeGet">
            <summary>Legt die Shim von JsonProperty.get_PropertyType(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.PropertyTypeSetType">
            <summary>Legt die Shim von JsonProperty.set_PropertyType(JsonProperty this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ReadableGet">
            <summary>Legt die Shim von JsonProperty.get_Readable(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ReadableSetBoolean">
            <summary>Legt die Shim von JsonProperty.set_Readable(JsonProperty this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_ReferenceLoopHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ReferenceLoopHandlingSetNullableOfReferenceLoopHandling">
            <summary>Legt die Shim von JsonProperty.set_ReferenceLoopHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.RequiredGet">
            <summary>Legt die Shim von JsonProperty.get_Required(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.RequiredSetRequired">
            <summary>Legt die Shim von JsonProperty.set_Required(JsonProperty this, Required value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.SetIsSpecifiedGet">
            <summary>Legt die Shim von JsonProperty.get_SetIsSpecified(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.SetIsSpecifiedSetActionOfObjectObject">
            <summary>Legt die Shim von JsonProperty.set_SetIsSpecified(JsonProperty this, Action`2 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ShouldDeserializeGet">
            <summary>Legt die Shim von JsonProperty.get_ShouldDeserialize(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ShouldDeserializeSetPredicateOfObject">
            <summary>Legt die Shim von JsonProperty.set_ShouldDeserialize(JsonProperty this, Predicate`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ShouldSerializeGet">
            <summary>Legt die Shim von JsonProperty.get_ShouldSerialize(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ShouldSerializeSetPredicateOfObject">
            <summary>Legt die Shim von JsonProperty.set_ShouldSerialize(JsonProperty this, Predicate`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ToString01">
            <summary>Legt die Shim von JsonProperty.ToString(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.TypeNameHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_TypeNameHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.TypeNameHandlingSetNullableOfTypeNameHandling">
            <summary>Legt die Shim von JsonProperty.set_TypeNameHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.UnderlyingNameGet">
            <summary>Legt die Shim von JsonProperty.get_UnderlyingName(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.UnderlyingNameSetString">
            <summary>Legt die Shim von JsonProperty.set_UnderlyingName(JsonProperty this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ValueProviderGet">
            <summary>Legt die Shim von JsonProperty.get_ValueProvider(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.ValueProviderSetIValueProvider">
            <summary>Legt die Shim von JsonProperty.set_ValueProvider(JsonProperty this, IValueProvider value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.WritableGet">
            <summary>Legt die Shim von JsonProperty.get_Writable(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.WritableSetBoolean">
            <summary>Legt die Shim von JsonProperty.set_Writable(JsonProperty this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AllInstances.WritePropertyNameJsonWriter">
            <summary>Legt die Shim von JsonProperty.WritePropertyName(JsonProperty this, JsonWriter writer) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AttributeProviderGet">
            <summary>Legt die Shim von JsonProperty.get_AttributeProvider(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.AttributeProviderSetIAttributeProvider">
            <summary>Legt die Shim von JsonProperty.set_AttributeProvider(JsonProperty this, IAttributeProvider value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.Constructor">
            <summary>Legt die Shim von JsonProperty.JsonProperty(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ConverterGet">
            <summary>Legt die Shim von JsonProperty.get_Converter(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ConverterSetJsonConverter">
            <summary>Legt die Shim von JsonProperty.set_Converter(JsonProperty this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.DeclaringTypeGet">
            <summary>Legt die Shim von JsonProperty.get_DeclaringType(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.DeclaringTypeSetType">
            <summary>Legt die Shim von JsonProperty.set_DeclaringType(JsonProperty this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.DefaultValueGet">
            <summary>Legt die Shim von JsonProperty.get_DefaultValue(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.DefaultValueHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_DefaultValueHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.DefaultValueHandlingSetNullableOfDefaultValueHandling">
            <summary>Legt die Shim von JsonProperty.set_DefaultValueHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.DefaultValueSetObject">
            <summary>Legt die Shim von JsonProperty.set_DefaultValue(JsonProperty this, Object value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.GetIsSpecifiedGet">
            <summary>Legt die Shim von JsonProperty.get_GetIsSpecified(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.GetIsSpecifiedSetPredicateOfObject">
            <summary>Legt die Shim von JsonProperty.set_GetIsSpecified(JsonProperty this, Predicate`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.GetResolvedDefaultValue">
            <summary>Legt die Shim von JsonProperty.GetResolvedDefaultValue(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.HasMemberAttributeGet">
            <summary>Legt die Shim von JsonProperty.get_HasMemberAttribute(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.HasMemberAttributeSetBoolean">
            <summary>Legt die Shim von JsonProperty.set_HasMemberAttribute(JsonProperty this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.IgnoredGet">
            <summary>Legt die Shim von JsonProperty.get_Ignored(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.IgnoredSetBoolean">
            <summary>Legt die Shim von JsonProperty.set_Ignored(JsonProperty this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.IsReferenceGet">
            <summary>Legt die Shim von JsonProperty.get_IsReference(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.IsReferenceSetNullableOfBoolean">
            <summary>Legt die Shim von JsonProperty.set_IsReference(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ItemConverterGet">
            <summary>Legt die Shim von JsonProperty.get_ItemConverter(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ItemConverterSetJsonConverter">
            <summary>Legt die Shim von JsonProperty.set_ItemConverter(JsonProperty this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ItemIsReferenceGet">
            <summary>Legt die Shim von JsonProperty.get_ItemIsReference(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ItemIsReferenceSetNullableOfBoolean">
            <summary>Legt die Shim von JsonProperty.set_ItemIsReference(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ItemReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_ItemReferenceLoopHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ItemReferenceLoopHandlingSetNullableOfReferenceLoopHandling">
            <summary>Legt die Shim von JsonProperty.set_ItemReferenceLoopHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ItemTypeNameHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_ItemTypeNameHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ItemTypeNameHandlingSetNullableOfTypeNameHandling">
            <summary>Legt die Shim von JsonProperty.set_ItemTypeNameHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.MemberConverterGet">
            <summary>Legt die Shim von JsonProperty.get_MemberConverter(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.MemberConverterSetJsonConverter">
            <summary>Legt die Shim von JsonProperty.set_MemberConverter(JsonProperty this, JsonConverter value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.NullValueHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_NullValueHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.NullValueHandlingSetNullableOfNullValueHandling">
            <summary>Legt die Shim von JsonProperty.set_NullValueHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ObjectCreationHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_ObjectCreationHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ObjectCreationHandlingSetNullableOfObjectCreationHandling">
            <summary>Legt die Shim von JsonProperty.set_ObjectCreationHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.OrderGet">
            <summary>Legt die Shim von JsonProperty.get_Order(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.OrderSetNullableOfInt32">
            <summary>Legt die Shim von JsonProperty.set_Order(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.PropertyContractGet">
            <summary>Legt die Shim von JsonProperty.get_PropertyContract(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.PropertyContractSetJsonContract">
            <summary>Legt die Shim von JsonProperty.set_PropertyContract(JsonProperty this, JsonContract value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.PropertyNameGet">
            <summary>Legt die Shim von JsonProperty.get_PropertyName(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.PropertyNameSetString">
            <summary>Legt die Shim von JsonProperty.set_PropertyName(JsonProperty this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.PropertyTypeGet">
            <summary>Legt die Shim von JsonProperty.get_PropertyType(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.PropertyTypeSetType">
            <summary>Legt die Shim von JsonProperty.set_PropertyType(JsonProperty this, Type value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ReadableGet">
            <summary>Legt die Shim von JsonProperty.get_Readable(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ReadableSetBoolean">
            <summary>Legt die Shim von JsonProperty.set_Readable(JsonProperty this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ReferenceLoopHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_ReferenceLoopHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ReferenceLoopHandlingSetNullableOfReferenceLoopHandling">
            <summary>Legt die Shim von JsonProperty.set_ReferenceLoopHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.RequiredGet">
            <summary>Legt die Shim von JsonProperty.get_Required(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.RequiredSetRequired">
            <summary>Legt die Shim von JsonProperty.set_Required(JsonProperty this, Required value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.SetIsSpecifiedGet">
            <summary>Legt die Shim von JsonProperty.get_SetIsSpecified(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.SetIsSpecifiedSetActionOfObjectObject">
            <summary>Legt die Shim von JsonProperty.set_SetIsSpecified(JsonProperty this, Action`2 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ShouldDeserializeGet">
            <summary>Legt die Shim von JsonProperty.get_ShouldDeserialize(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ShouldDeserializeSetPredicateOfObject">
            <summary>Legt die Shim von JsonProperty.set_ShouldDeserialize(JsonProperty this, Predicate`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ShouldSerializeGet">
            <summary>Legt die Shim von JsonProperty.get_ShouldSerialize(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ShouldSerializeSetPredicateOfObject">
            <summary>Legt die Shim von JsonProperty.set_ShouldSerialize(JsonProperty this, Predicate`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ToString">
            <summary>Legt die Shim von JsonProperty.ToString(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.TypeNameHandlingGet">
            <summary>Legt die Shim von JsonProperty.get_TypeNameHandling(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.TypeNameHandlingSetNullableOfTypeNameHandling">
            <summary>Legt die Shim von JsonProperty.set_TypeNameHandling(JsonProperty this, Nullable`1 value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.UnderlyingNameGet">
            <summary>Legt die Shim von JsonProperty.get_UnderlyingName(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.UnderlyingNameSetString">
            <summary>Legt die Shim von JsonProperty.set_UnderlyingName(JsonProperty this, String value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ValueProviderGet">
            <summary>Legt die Shim von JsonProperty.get_ValueProvider(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.ValueProviderSetIValueProvider">
            <summary>Legt die Shim von JsonProperty.set_ValueProvider(JsonProperty this, IValueProvider value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.WritableGet">
            <summary>Legt die Shim von JsonProperty.get_Writable(JsonProperty this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.WritableSetBoolean">
            <summary>Legt die Shim von JsonProperty.set_Writable(JsonProperty this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonProperty.WritePropertyNameJsonWriter">
            <summary>Legt die Shim von JsonProperty.WritePropertyName(JsonProperty this, JsonWriter writer) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonPropertyCollection</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.#ctor(Newtonsoft.Json.Serialization.JsonPropertyCollection)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.AddPropertyJsonProperty">
            <summary>Legt die Shim von JsonPropertyCollection.AddProperty(JsonPropertyCollection this, JsonProperty property) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.AllInstances.AddPropertyJsonProperty">
            <summary>Legt die Shim von JsonPropertyCollection.AddProperty(JsonPropertyCollection this, JsonProperty property) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.AllInstances.GetClosestMatchPropertyString">
            <summary>Legt die Shim von JsonPropertyCollection.GetClosestMatchProperty(JsonPropertyCollection this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.AllInstances.GetKeyForItemJsonProperty">
            <summary>Legt die Shim von JsonPropertyCollection.GetKeyForItem(JsonPropertyCollection this, JsonProperty item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.AllInstances.GetPropertyStringStringComparison">
            <summary>Legt die Shim von JsonPropertyCollection.GetProperty(JsonPropertyCollection this, String propertyName, StringComparison comparisonType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.AllInstances.TryGetValueStringJsonPropertyOut">
            <summary>Legt die Shim von JsonPropertyCollection.TryGetValue(JsonPropertyCollection this, String key, JsonProperty* item) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.Bind(System.Collections.ICollection)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.Bind(System.Collections.IList)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.Bind(System.Collections.Generic.ICollection{Newtonsoft.Json.Serialization.JsonProperty})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.Bind(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Serialization.JsonProperty})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.Bind(System.Collections.Generic.IList{Newtonsoft.Json.Serialization.JsonProperty})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.Bind(System.Collections.Generic.IReadOnlyCollection{Newtonsoft.Json.Serialization.JsonProperty})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.Bind(System.Collections.Generic.IReadOnlyList{Newtonsoft.Json.Serialization.JsonProperty})">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.ConstructorType">
            <summary>Legt die Shim von JsonPropertyCollection.JsonPropertyCollection(JsonPropertyCollection this, Type type) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.GetClosestMatchPropertyString">
            <summary>Legt die Shim von JsonPropertyCollection.GetClosestMatchProperty(JsonPropertyCollection this, String propertyName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.GetKeyForItemJsonProperty">
            <summary>Legt die Shim von JsonPropertyCollection.GetKeyForItem(JsonPropertyCollection this, JsonProperty item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.GetPropertyStringStringComparison">
            <summary>Legt die Shim von JsonPropertyCollection.GetProperty(JsonPropertyCollection this, String propertyName, StringComparison comparisonType) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonPropertyCollection.TryGetValueStringJsonPropertyOut">
            <summary>Legt die Shim von JsonPropertyCollection.TryGetValue(JsonPropertyCollection this, String key, JsonProperty* item) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonStringContract">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.JsonStringContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonStringContract.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonStringContract.#ctor(Newtonsoft.Json.Serialization.JsonStringContract)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimJsonStringContract.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonStringContract.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimJsonStringContract.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonStringContract.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimJsonStringContract.ConstructorType">
            <summary>Legt die Shim von JsonStringContract.JsonStringContract(JsonStringContract this, Type underlyingType) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.MemoryTraceWriter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.#ctor(Newtonsoft.Json.Serialization.MemoryTraceWriter)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.AllInstances.GetTraceMessages">
            <summary>Legt die Shim von MemoryTraceWriter.GetTraceMessages(MemoryTraceWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.AllInstances.LevelFilterGet">
            <summary>Legt die Shim von MemoryTraceWriter.get_LevelFilter(MemoryTraceWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.AllInstances.LevelFilterSetTraceLevel">
            <summary>Legt die Shim von MemoryTraceWriter.set_LevelFilter(MemoryTraceWriter this, TraceLevel value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.AllInstances.ToString01">
            <summary>Legt die Shim von MemoryTraceWriter.ToString(MemoryTraceWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.AllInstances.TraceTraceLevelStringException">
            <summary>Legt die Shim von MemoryTraceWriter.Trace(MemoryTraceWriter this, TraceLevel level, String message, Exception ex) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.Bind(Newtonsoft.Json.Serialization.ITraceWriter)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.Constructor">
            <summary>Legt die Shim von MemoryTraceWriter.MemoryTraceWriter(MemoryTraceWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.GetTraceMessages">
            <summary>Legt die Shim von MemoryTraceWriter.GetTraceMessages(MemoryTraceWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.LevelFilterGet">
            <summary>Legt die Shim von MemoryTraceWriter.get_LevelFilter(MemoryTraceWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.LevelFilterSetTraceLevel">
            <summary>Legt die Shim von MemoryTraceWriter.set_LevelFilter(MemoryTraceWriter this, TraceLevel value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.ToString">
            <summary>Legt die Shim von MemoryTraceWriter.ToString(MemoryTraceWriter this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimMemoryTraceWriter.TraceTraceLevelStringException">
            <summary>Legt die Shim von MemoryTraceWriter.Trace(MemoryTraceWriter this, TraceLevel level, String message, Exception ex) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.NamingStrategy</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.#ctor(Newtonsoft.Json.Serialization.NamingStrategy)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.AllInstances.GetDictionaryKeyString">
            <summary>Legt die Shim von NamingStrategy.GetDictionaryKey(NamingStrategy this, String key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.AllInstances.GetExtensionDataNameString">
            <summary>Legt die Shim von NamingStrategy.GetExtensionDataName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.AllInstances.GetPropertyNameStringBoolean">
            <summary>Legt die Shim von NamingStrategy.GetPropertyName(NamingStrategy this, String name, Boolean hasSpecifiedName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.AllInstances.OverrideSpecifiedNamesGet">
            <summary>Legt die Shim von NamingStrategy.get_OverrideSpecifiedNames(NamingStrategy this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.AllInstances.OverrideSpecifiedNamesSetBoolean">
            <summary>Legt die Shim von NamingStrategy.set_OverrideSpecifiedNames(NamingStrategy this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.AllInstances.ProcessDictionaryKeysGet">
            <summary>Legt die Shim von NamingStrategy.get_ProcessDictionaryKeys(NamingStrategy this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.AllInstances.ProcessDictionaryKeysSetBoolean">
            <summary>Legt die Shim von NamingStrategy.set_ProcessDictionaryKeys(NamingStrategy this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.AllInstances.ProcessExtensionDataNamesGet">
            <summary>Legt die Shim von NamingStrategy.get_ProcessExtensionDataNames(NamingStrategy this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.AllInstances.ProcessExtensionDataNamesSetBoolean">
            <summary>Legt die Shim von NamingStrategy.set_ProcessExtensionDataNames(NamingStrategy this, Boolean value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.Constructor">
            <summary>Legt die Shim von NamingStrategy.NamingStrategy(NamingStrategy this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.GetDictionaryKeyString">
            <summary>Legt die Shim von NamingStrategy.GetDictionaryKey(NamingStrategy this, String key) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.GetExtensionDataNameString">
            <summary>Legt die Shim von NamingStrategy.GetExtensionDataName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.GetPropertyNameStringBoolean">
            <summary>Legt die Shim von NamingStrategy.GetPropertyName(NamingStrategy this, String name, Boolean hasSpecifiedName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.OverrideSpecifiedNamesGet">
            <summary>Legt die Shim von NamingStrategy.get_OverrideSpecifiedNames(NamingStrategy this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.OverrideSpecifiedNamesSetBoolean">
            <summary>Legt die Shim von NamingStrategy.set_OverrideSpecifiedNames(NamingStrategy this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.ProcessDictionaryKeysGet">
            <summary>Legt die Shim von NamingStrategy.get_ProcessDictionaryKeys(NamingStrategy this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.ProcessDictionaryKeysSetBoolean">
            <summary>Legt die Shim von NamingStrategy.set_ProcessDictionaryKeys(NamingStrategy this, Boolean value) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.ProcessExtensionDataNamesGet">
            <summary>Legt die Shim von NamingStrategy.get_ProcessExtensionDataNames(NamingStrategy this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimNamingStrategy.ProcessExtensionDataNamesSetBoolean">
            <summary>Legt die Shim von NamingStrategy.set_ProcessExtensionDataNames(NamingStrategy this, Boolean value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.ObjectConstructor&lt;T&gt;</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.#ctor(Newtonsoft.Json.Serialization.ObjectConstructor{`0})">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.AllInstances.BeginInvokeObjectArrayAsyncCallbackObject">
            <summary>Legt die Shim von ObjectConstructor`1.BeginInvoke(ObjectConstructor`1 this, Object[] args, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.AllInstances.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ObjectConstructor`1.EndInvoke(ObjectConstructor`1 this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.AllInstances.InvokeObjectArray">
            <summary>Legt die Shim von ObjectConstructor`1.Invoke(ObjectConstructor`1 this, Object[] args) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.BeginInvokeObjectArrayAsyncCallbackObject">
            <summary>Legt die Shim von ObjectConstructor`1.BeginInvoke(ObjectConstructor`1 this, Object[] args, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.ConstructorObjectIntPtr">
            <summary>Legt die Shim von ObjectConstructor`1.ObjectConstructor`1(ObjectConstructor`1 this, Object object, IntPtr method) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.EndInvokeIAsyncResult">
            <summary>Legt die Shim von ObjectConstructor`1.EndInvoke(ObjectConstructor`1 this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimObjectConstructor`1.InvokeObjectArray">
            <summary>Legt die Shim von ObjectConstructor`1.Invoke(ObjectConstructor`1 this, Object[] args) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimOnErrorAttribute">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.OnErrorAttribute</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimOnErrorAttribute.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimOnErrorAttribute.#ctor(Newtonsoft.Json.Serialization.OnErrorAttribute)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimOnErrorAttribute.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimOnErrorAttribute.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimOnErrorAttribute.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimOnErrorAttribute.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimOnErrorAttribute.Constructor">
            <summary>Legt die Shim von OnErrorAttribute.OnErrorAttribute(OnErrorAttribute this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.ReflectionAttributeProvider</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.#ctor(Newtonsoft.Json.Serialization.ReflectionAttributeProvider)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.AllInstances.GetAttributesBoolean">
            <summary>Legt die Shim von ReflectionAttributeProvider.GetAttributes(ReflectionAttributeProvider this, Boolean inherit) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.AllInstances.GetAttributesTypeBoolean">
            <summary>Legt die Shim von ReflectionAttributeProvider.GetAttributes(ReflectionAttributeProvider this, Type attributeType, Boolean inherit) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.Bind(Newtonsoft.Json.Serialization.IAttributeProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.ConstructorObject">
            <summary>Legt die Shim von ReflectionAttributeProvider.ReflectionAttributeProvider(ReflectionAttributeProvider this, Object attributeProvider) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.GetAttributesBoolean">
            <summary>Legt die Shim von ReflectionAttributeProvider.GetAttributes(ReflectionAttributeProvider this, Boolean inherit) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionAttributeProvider.GetAttributesTypeBoolean">
            <summary>Legt die Shim von ReflectionAttributeProvider.GetAttributes(ReflectionAttributeProvider this, Type attributeType, Boolean inherit) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.ReflectionValueProvider</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.#ctor(Newtonsoft.Json.Serialization.ReflectionValueProvider)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.AllInstances.GetValueObject">
            <summary>Legt die Shim von ReflectionValueProvider.GetValue(ReflectionValueProvider this, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.AllInstances.SetValueObjectObject">
            <summary>Legt die Shim von ReflectionValueProvider.SetValue(ReflectionValueProvider this, Object target, Object value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.Bind(Newtonsoft.Json.Serialization.IValueProvider)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.ConstructorMemberInfo">
            <summary>Legt die Shim von ReflectionValueProvider.ReflectionValueProvider(ReflectionValueProvider this, MemberInfo memberInfo) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.GetValueObject">
            <summary>Legt die Shim von ReflectionValueProvider.GetValue(ReflectionValueProvider this, Object target) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimReflectionValueProvider.SetValueObjectObject">
            <summary>Legt die Shim von ReflectionValueProvider.SetValue(ReflectionValueProvider this, Object target, Object value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.SerializationCallback</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.#ctor(Newtonsoft.Json.Serialization.SerializationCallback)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.AllInstances.BeginInvokeObjectStreamingContextAsyncCallbackObject">
            <summary>Legt die Shim von SerializationCallback.BeginInvoke(SerializationCallback this, Object o, StreamingContext context, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.AllInstances.EndInvokeIAsyncResult">
            <summary>Legt die Shim von SerializationCallback.EndInvoke(SerializationCallback this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.AllInstances.InvokeObjectStreamingContext">
            <summary>Legt die Shim von SerializationCallback.Invoke(SerializationCallback this, Object o, StreamingContext context) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.BeginInvokeObjectStreamingContextAsyncCallbackObject">
            <summary>Legt die Shim von SerializationCallback.BeginInvoke(SerializationCallback this, Object o, StreamingContext context, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.ConstructorObjectIntPtr">
            <summary>Legt die Shim von SerializationCallback.SerializationCallback(SerializationCallback this, Object object, IntPtr method) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.EndInvokeIAsyncResult">
            <summary>Legt die Shim von SerializationCallback.EndInvoke(SerializationCallback this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationCallback.InvokeObjectStreamingContext">
            <summary>Legt die Shim von SerializationCallback.Invoke(SerializationCallback this, Object o, StreamingContext context) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.SerializationErrorCallback</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.#ctor(Newtonsoft.Json.Serialization.SerializationErrorCallback)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.AllInstances.BeginInvokeObjectStreamingContextErrorContextAsyncCallbackObject">
            <summary>Legt die Shim von SerializationErrorCallback.BeginInvoke(SerializationErrorCallback this, Object o, StreamingContext context, ErrorContext errorContext, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.AllInstances.EndInvokeIAsyncResult">
            <summary>Legt die Shim von SerializationErrorCallback.EndInvoke(SerializationErrorCallback this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.AllInstances.InvokeObjectStreamingContextErrorContext">
            <summary>Legt die Shim von SerializationErrorCallback.Invoke(SerializationErrorCallback this, Object o, StreamingContext context, ErrorContext errorContext) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.BeginInvokeObjectStreamingContextErrorContextAsyncCallbackObject">
            <summary>Legt die Shim von SerializationErrorCallback.BeginInvoke(SerializationErrorCallback this, Object o, StreamingContext context, ErrorContext errorContext, AsyncCallback callback, Object object) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.Bind(System.ICloneable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Bindet die Member der Schnittstelle an den Shim.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.ConstructorObjectIntPtr">
            <summary>Legt die Shim von SerializationErrorCallback.SerializationErrorCallback(SerializationErrorCallback this, Object object, IntPtr method) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.EndInvokeIAsyncResult">
            <summary>Legt die Shim von SerializationErrorCallback.EndInvoke(SerializationErrorCallback this, IAsyncResult result) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSerializationErrorCallback.InvokeObjectStreamingContextErrorContext">
            <summary>Legt die Shim von SerializationErrorCallback.Invoke(SerializationErrorCallback this, Object o, StreamingContext context, ErrorContext errorContext) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy">
            <summary>Shim-Typ von Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy.#ctor">
            <summary>Initialisiert eine neue Shim-Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy.#ctor(Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy)">
            <summary>Initialisiert einen neuen Shim für die gegebene Instanz.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy.AllInstances">
            <summary>Shims für alle Instanzenmember definieren</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy.AllInstances.ResolvePropertyNameString">
            <summary>Legt die Shim von SnakeCaseNamingStrategy.ResolvePropertyName(SnakeCaseNamingStrategy this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy.BehaveAsCurrent">
            <summary>Weist das &apos;Current&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy.BehaveAsNotImplemented">
            <summary>Weist das &apos;NotImplemented&apos;-Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy.Behavior">
            <summary>Weist das Verhalten für alle Methoden des Shim-Typs zu.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy.Constructor">
            <summary>Legt die Shim von SnakeCaseNamingStrategy.SnakeCaseNamingStrategy(SnakeCaseNamingStrategy this) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy.ConstructorBooleanBoolean">
            <summary>Legt die Shim von SnakeCaseNamingStrategy.SnakeCaseNamingStrategy(SnakeCaseNamingStrategy this, Boolean processDictionaryKeys, Boolean overrideSpecifiedNames) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy.ConstructorBooleanBooleanBoolean">
            <summary>Legt die Shim von SnakeCaseNamingStrategy.SnakeCaseNamingStrategy(SnakeCaseNamingStrategy this, Boolean processDictionaryKeys, Boolean overrideSpecifiedNames, Boolean processExtensionDataNames) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.ShimSnakeCaseNamingStrategy.ResolvePropertyNameString">
            <summary>Legt die Shim von SnakeCaseNamingStrategy.ResolvePropertyName(SnakeCaseNamingStrategy this, String name) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.CamelCaseNamingStrategy</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.#ctor(System.Boolean,System.Boolean)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.GetDictionaryKey(System.String)">
            <summary>Legt die Stub von NamingStrategy.GetDictionaryKey(NamingStrategy this, String key) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.GetDictionaryKeyString">
            <summary>Legt die stub von NamingStrategy.GetDictionaryKey(NamingStrategy this, String key) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.GetExtensionDataName(System.String)">
            <summary>Legt die Stub von NamingStrategy.GetExtensionDataName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.GetExtensionDataNameString">
            <summary>Legt die stub von NamingStrategy.GetExtensionDataName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.GetPropertyName(System.String,System.Boolean)">
            <summary>Legt die Stub von NamingStrategy.GetPropertyName(NamingStrategy this, String name, Boolean hasSpecifiedName) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.GetPropertyNameStringBoolean">
            <summary>Legt die stub von NamingStrategy.GetPropertyName(NamingStrategy this, String name, Boolean hasSpecifiedName) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubCamelCaseNamingStrategy.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.ResolvePropertyName(System.String)">
            <summary>Legt die Stub von CamelCaseNamingStrategy.ResolvePropertyName(CamelCaseNamingStrategy this, String name) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCaseNamingStrategy.ResolvePropertyNameString">
            <summary>Legt die stub von CamelCaseNamingStrategy.ResolvePropertyName(CamelCaseNamingStrategy this, String name) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateArrayContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateArrayContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateArrayContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateArrayContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)">
            <summary>Legt die Stub von DefaultContractResolver.CreateConstructorParameters(DefaultContractResolver this, ConstructorInfo constructor, JsonPropertyCollection memberProperties) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateConstructorParametersConstructorInfoJsonPropertyCollection">
            <summary>Legt die stub von DefaultContractResolver.CreateConstructorParameters(DefaultContractResolver this, ConstructorInfo constructor, JsonPropertyCollection memberProperties) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateDictionaryContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateDictionaryContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateDictionaryContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateDictionaryContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateDynamicContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateDynamicContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateDynamicContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateDynamicContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateISerializableContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateISerializableContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateISerializableContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateISerializableContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateLinqContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateLinqContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateLinqContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateLinqContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)">
            <summary>Legt die Stub von DefaultContractResolver.CreateMemberValueProvider(DefaultContractResolver this, MemberInfo member) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateMemberValueProviderMemberInfo">
            <summary>Legt die stub von DefaultContractResolver.CreateMemberValueProvider(DefaultContractResolver this, MemberInfo member) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateObjectContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateObjectContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateObjectContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateObjectContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreatePrimitiveContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreatePrimitiveContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreatePrimitiveContractType">
            <summary>Legt die stub von DefaultContractResolver.CreatePrimitiveContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary>Legt die Stub von DefaultContractResolver.CreateProperties(DefaultContractResolver this, Type type, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreatePropertiesTypeMemberSerialization">
            <summary>Legt die stub von DefaultContractResolver.CreateProperties(DefaultContractResolver this, Type type, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>Legt die Stub von DefaultContractResolver.CreateProperty(DefaultContractResolver this, MemberInfo member, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)">
            <summary>Legt die Stub von DefaultContractResolver.CreatePropertyFromConstructorParameter(DefaultContractResolver this, JsonProperty matchingMemberProperty, ParameterInfo parameterInfo) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreatePropertyFromConstructorParameterJsonPropertyParameterInfo">
            <summary>Legt die stub von DefaultContractResolver.CreatePropertyFromConstructorParameter(DefaultContractResolver this, JsonProperty matchingMemberProperty, ParameterInfo parameterInfo) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreatePropertyMemberInfoMemberSerialization">
            <summary>Legt die stub von DefaultContractResolver.CreateProperty(DefaultContractResolver this, MemberInfo member, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateStringContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateStringContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.CreateStringContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateStringContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.GetSerializableMembers(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.GetSerializableMembers(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.GetSerializableMembersType">
            <summary>Legt die stub von DefaultContractResolver.GetSerializableMembers(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubCamelCasePropertyNamesContractResolver.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.ResolveContract(System.Type)">
            <summary>Legt die Stub von CamelCasePropertyNamesContractResolver.ResolveContract(CamelCasePropertyNamesContractResolver this, Type type) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.ResolveContractConverter(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.ResolveContractConverter(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.ResolveContractConverterType">
            <summary>Legt die stub von DefaultContractResolver.ResolveContractConverter(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.ResolveContractType">
            <summary>Legt die stub von CamelCasePropertyNamesContractResolver.ResolveContract(CamelCasePropertyNamesContractResolver this, Type type) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.ResolveDictionaryKey(System.String)">
            <summary>Legt die Stub von DefaultContractResolver.ResolveDictionaryKey(DefaultContractResolver this, String dictionaryKey) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.ResolveDictionaryKeyString">
            <summary>Legt die stub von DefaultContractResolver.ResolveDictionaryKey(DefaultContractResolver this, String dictionaryKey) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.ResolveExtensionDataName(System.String)">
            <summary>Legt die Stub von DefaultContractResolver.ResolveExtensionDataName(DefaultContractResolver this, String extensionDataName) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.ResolveExtensionDataNameString">
            <summary>Legt die stub von DefaultContractResolver.ResolveExtensionDataName(DefaultContractResolver this, String extensionDataName) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.ResolvePropertyName(System.String)">
            <summary>Legt die Stub von DefaultContractResolver.ResolvePropertyName(DefaultContractResolver this, String propertyName) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubCamelCasePropertyNamesContractResolver.ResolvePropertyNameString">
            <summary>Legt die stub von DefaultContractResolver.ResolvePropertyName(DefaultContractResolver this, String propertyName) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.DefaultContractResolver</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateArrayContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateArrayContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateArrayContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateArrayContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)">
            <summary>Legt die Stub von DefaultContractResolver.CreateConstructorParameters(DefaultContractResolver this, ConstructorInfo constructor, JsonPropertyCollection memberProperties) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateConstructorParametersConstructorInfoJsonPropertyCollection">
            <summary>Legt die stub von DefaultContractResolver.CreateConstructorParameters(DefaultContractResolver this, ConstructorInfo constructor, JsonPropertyCollection memberProperties) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateDictionaryContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateDictionaryContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateDictionaryContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateDictionaryContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateDynamicContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateDynamicContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateDynamicContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateDynamicContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateISerializableContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateISerializableContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateISerializableContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateISerializableContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateLinqContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateLinqContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateLinqContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateLinqContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)">
            <summary>Legt die Stub von DefaultContractResolver.CreateMemberValueProvider(DefaultContractResolver this, MemberInfo member) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateMemberValueProviderMemberInfo">
            <summary>Legt die stub von DefaultContractResolver.CreateMemberValueProvider(DefaultContractResolver this, MemberInfo member) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateObjectContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateObjectContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateObjectContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateObjectContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreatePrimitiveContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreatePrimitiveContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreatePrimitiveContractType">
            <summary>Legt die stub von DefaultContractResolver.CreatePrimitiveContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary>Legt die Stub von DefaultContractResolver.CreateProperties(DefaultContractResolver this, Type type, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreatePropertiesTypeMemberSerialization">
            <summary>Legt die stub von DefaultContractResolver.CreateProperties(DefaultContractResolver this, Type type, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>Legt die Stub von DefaultContractResolver.CreateProperty(DefaultContractResolver this, MemberInfo member, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)">
            <summary>Legt die Stub von DefaultContractResolver.CreatePropertyFromConstructorParameter(DefaultContractResolver this, JsonProperty matchingMemberProperty, ParameterInfo parameterInfo) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreatePropertyFromConstructorParameterJsonPropertyParameterInfo">
            <summary>Legt die stub von DefaultContractResolver.CreatePropertyFromConstructorParameter(DefaultContractResolver this, JsonProperty matchingMemberProperty, ParameterInfo parameterInfo) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreatePropertyMemberInfoMemberSerialization">
            <summary>Legt die stub von DefaultContractResolver.CreateProperty(DefaultContractResolver this, MemberInfo member, MemberSerialization memberSerialization) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateStringContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.CreateStringContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.CreateStringContractType">
            <summary>Legt die stub von DefaultContractResolver.CreateStringContract(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.GetSerializableMembers(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.GetSerializableMembers(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.GetSerializableMembersType">
            <summary>Legt die stub von DefaultContractResolver.GetSerializableMembers(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDefaultContractResolver.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.ResolveContract(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.ResolveContract(DefaultContractResolver this, Type type) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.ResolveContractConverter(System.Type)">
            <summary>Legt die Stub von DefaultContractResolver.ResolveContractConverter(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.ResolveContractConverterType">
            <summary>Legt die stub von DefaultContractResolver.ResolveContractConverter(DefaultContractResolver this, Type objectType) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.ResolveContractType">
            <summary>Legt die stub von DefaultContractResolver.ResolveContract(DefaultContractResolver this, Type type) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.ResolveDictionaryKey(System.String)">
            <summary>Legt die Stub von DefaultContractResolver.ResolveDictionaryKey(DefaultContractResolver this, String dictionaryKey) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.ResolveDictionaryKeyString">
            <summary>Legt die stub von DefaultContractResolver.ResolveDictionaryKey(DefaultContractResolver this, String dictionaryKey) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.ResolveExtensionDataName(System.String)">
            <summary>Legt die Stub von DefaultContractResolver.ResolveExtensionDataName(DefaultContractResolver this, String extensionDataName) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.ResolveExtensionDataNameString">
            <summary>Legt die stub von DefaultContractResolver.ResolveExtensionDataName(DefaultContractResolver this, String extensionDataName) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.ResolvePropertyName(System.String)">
            <summary>Legt die Stub von DefaultContractResolver.ResolvePropertyName(DefaultContractResolver this, String propertyName) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultContractResolver.ResolvePropertyNameString">
            <summary>Legt die stub von DefaultContractResolver.ResolvePropertyName(DefaultContractResolver this, String propertyName) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.DefaultNamingStrategy</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.GetDictionaryKey(System.String)">
            <summary>Legt die Stub von NamingStrategy.GetDictionaryKey(NamingStrategy this, String key) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.GetDictionaryKeyString">
            <summary>Legt die stub von NamingStrategy.GetDictionaryKey(NamingStrategy this, String key) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.GetExtensionDataName(System.String)">
            <summary>Legt die Stub von NamingStrategy.GetExtensionDataName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.GetExtensionDataNameString">
            <summary>Legt die stub von NamingStrategy.GetExtensionDataName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.GetPropertyName(System.String,System.Boolean)">
            <summary>Legt die Stub von NamingStrategy.GetPropertyName(NamingStrategy this, String name, Boolean hasSpecifiedName) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.GetPropertyNameStringBoolean">
            <summary>Legt die stub von NamingStrategy.GetPropertyName(NamingStrategy this, String name, Boolean hasSpecifiedName) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDefaultNamingStrategy.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.ResolvePropertyName(System.String)">
            <summary>Legt die Stub von DefaultNamingStrategy.ResolvePropertyName(DefaultNamingStrategy this, String name) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultNamingStrategy.ResolvePropertyNameString">
            <summary>Legt die stub von DefaultNamingStrategy.ResolvePropertyName(DefaultNamingStrategy this, String name) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubDefaultSerializationBinder">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.DefaultSerializationBinder</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultSerializationBinder.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultSerializationBinder.BindToName(System.Type,System.String@,System.String@)">
            <summary>Legt die Stub von DefaultSerializationBinder.BindToName(DefaultSerializationBinder this, Type serializedType, String* assemblyName, String* typeName) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultSerializationBinder.BindToNameTypeStringOutStringOut">
            <summary>Legt die stub von DefaultSerializationBinder.BindToName(DefaultSerializationBinder this, Type serializedType, String* assemblyName, String* typeName) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultSerializationBinder.BindToType(System.String,System.String)">
            <summary>Legt die Stub von DefaultSerializationBinder.BindToType(DefaultSerializationBinder this, String assemblyName, String typeName) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubDefaultSerializationBinder.BindToTypeStringString">
            <summary>Legt die stub von DefaultSerializationBinder.BindToType(DefaultSerializationBinder this, String assemblyName, String typeName) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDefaultSerializationBinder.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDefaultSerializationBinder.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDefaultSerializationBinder.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDefaultSerializationBinder.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDefaultSerializationBinder.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubDiagnosticsTraceWriter">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.DiagnosticsTraceWriter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDiagnosticsTraceWriter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDiagnosticsTraceWriter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDiagnosticsTraceWriter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDiagnosticsTraceWriter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDiagnosticsTraceWriter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDiagnosticsTraceWriter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubDynamicValueProvider">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.DynamicValueProvider</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDynamicValueProvider.#ctor(System.Reflection.MemberInfo)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDynamicValueProvider.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubDynamicValueProvider.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubDynamicValueProvider.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDynamicValueProvider.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubDynamicValueProvider.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubErrorEventArgs">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.ErrorEventArgs</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubErrorEventArgs.#ctor(System.Object,Newtonsoft.Json.Serialization.ErrorContext)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubErrorEventArgs.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubErrorEventArgs.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubErrorEventArgs.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubErrorEventArgs.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubErrorEventArgs.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubExpressionValueProvider">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.ExpressionValueProvider</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubExpressionValueProvider.#ctor(System.Reflection.MemberInfo)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubExpressionValueProvider.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubExpressionValueProvider.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubExpressionValueProvider.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubExpressionValueProvider.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubExpressionValueProvider.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubIAttributeProvider">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.IAttributeProvider</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIAttributeProvider.#ctor">
            <summary>Initialisiert eine neue Instanz von type StubIAttributeProvider.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubIAttributeProvider.GetAttributesBoolean">
            <summary>Legt die stub von IAttributeProvider.GetAttributes(IAttributeProvider this, Boolean inherit) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubIAttributeProvider.GetAttributesTypeBoolean">
            <summary>Legt die stub von IAttributeProvider.GetAttributes(IAttributeProvider this, Type attributeType, Boolean inherit) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIAttributeProvider.Newtonsoft#Json#Serialization#IAttributeProvider#GetAttributes(System.Boolean)">
            <summary>Legt die Stub von IAttributeProvider.GetAttributes(IAttributeProvider this, Boolean inherit) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIAttributeProvider.Newtonsoft#Json#Serialization#IAttributeProvider#GetAttributes(System.Type,System.Boolean)">
            <summary>Legt die Stub von IAttributeProvider.GetAttributes(IAttributeProvider this, Type attributeType, Boolean inherit) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubIContractResolver">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.IContractResolver</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIContractResolver.#ctor">
            <summary>Initialisiert eine neue Instanz von type StubIContractResolver.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIContractResolver.Newtonsoft#Json#Serialization#IContractResolver#ResolveContract(System.Type)">
            <summary>Legt die Stub von IContractResolver.ResolveContract(IContractResolver this, Type type) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubIContractResolver.ResolveContractType">
            <summary>Legt die stub von IContractResolver.ResolveContract(IContractResolver this, Type type) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubIReferenceResolver">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.IReferenceResolver</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIReferenceResolver.#ctor">
            <summary>Initialisiert eine neue Instanz von type StubIReferenceResolver.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubIReferenceResolver.AddReferenceObjectStringObject">
            <summary>Legt die stub von IReferenceResolver.AddReference(IReferenceResolver this, Object context, String reference, Object value) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubIReferenceResolver.GetReferenceObjectObject">
            <summary>Legt die stub von IReferenceResolver.GetReference(IReferenceResolver this, Object context, Object value) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubIReferenceResolver.IsReferencedObjectObject">
            <summary>Legt die stub von IReferenceResolver.IsReferenced(IReferenceResolver this, Object context, Object value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIReferenceResolver.Newtonsoft#Json#Serialization#IReferenceResolver#AddReference(System.Object,System.String,System.Object)">
            <summary>Legt die Stub von IReferenceResolver.AddReference(IReferenceResolver this, Object context, String reference, Object value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIReferenceResolver.Newtonsoft#Json#Serialization#IReferenceResolver#GetReference(System.Object,System.Object)">
            <summary>Legt die Stub von IReferenceResolver.GetReference(IReferenceResolver this, Object context, Object value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIReferenceResolver.Newtonsoft#Json#Serialization#IReferenceResolver#IsReferenced(System.Object,System.Object)">
            <summary>Legt die Stub von IReferenceResolver.IsReferenced(IReferenceResolver this, Object context, Object value) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIReferenceResolver.Newtonsoft#Json#Serialization#IReferenceResolver#ResolveReference(System.Object,System.String)">
            <summary>Legt die Stub von IReferenceResolver.ResolveReference(IReferenceResolver this, Object context, String reference) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubIReferenceResolver.ResolveReferenceObjectString">
            <summary>Legt die stub von IReferenceResolver.ResolveReference(IReferenceResolver this, Object context, String reference) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubISerializationBinder">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.ISerializationBinder</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubISerializationBinder.#ctor">
            <summary>Initialisiert eine neue Instanz von type StubISerializationBinder.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubISerializationBinder.BindToNameTypeStringOutStringOut">
            <summary>Legt die stub von ISerializationBinder.BindToName(ISerializationBinder this, Type serializedType, String* assemblyName, String* typeName) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubISerializationBinder.BindToTypeStringString">
            <summary>Legt die stub von ISerializationBinder.BindToType(ISerializationBinder this, String assemblyName, String typeName) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubISerializationBinder.Newtonsoft#Json#Serialization#ISerializationBinder#BindToName(System.Type,System.String@,System.String@)">
            <summary>Legt die Stub von ISerializationBinder.BindToName(ISerializationBinder this, Type serializedType, String* assemblyName, String* typeName) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubISerializationBinder.Newtonsoft#Json#Serialization#ISerializationBinder#BindToType(System.String,System.String)">
            <summary>Legt die Stub von ISerializationBinder.BindToType(ISerializationBinder this, String assemblyName, String typeName) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubITraceWriter">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.ITraceWriter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubITraceWriter.#ctor">
            <summary>Initialisiert eine neue Instanz von type StubITraceWriter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubITraceWriter.Newtonsoft#Json#Serialization#ITraceWriter#LevelFilter">
            <summary>Legt die stub von ITraceWriter.get_LevelFilter(ITraceWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubITraceWriter.LevelFilterGet">
            <summary>Legt die stub von ITraceWriter.get_LevelFilter(ITraceWriter this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubITraceWriter.Newtonsoft#Json#Serialization#ITraceWriter#Trace(System.Diagnostics.TraceLevel,System.String,System.Exception)">
            <summary>Legt die Stub von ITraceWriter.Trace(ITraceWriter this, TraceLevel level, String message, Exception ex) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubITraceWriter.TraceTraceLevelStringException">
            <summary>Legt die stub von ITraceWriter.Trace(ITraceWriter this, TraceLevel level, String message, Exception ex) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubIValueProvider">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.IValueProvider</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIValueProvider.#ctor">
            <summary>Initialisiert eine neue Instanz von type StubIValueProvider.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubIValueProvider.GetValueObject">
            <summary>Legt die stub von IValueProvider.GetValue(IValueProvider this, Object target) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIValueProvider.Newtonsoft#Json#Serialization#IValueProvider#GetValue(System.Object)">
            <summary>Legt die Stub von IValueProvider.GetValue(IValueProvider this, Object target) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubIValueProvider.Newtonsoft#Json#Serialization#IValueProvider#SetValue(System.Object,System.Object)">
            <summary>Legt die Stub von IValueProvider.SetValue(IValueProvider this, Object target, Object value) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubIValueProvider.SetValueObjectObject">
            <summary>Legt die stub von IValueProvider.SetValue(IValueProvider this, Object target, Object value) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubJsonArrayContract">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.JsonArrayContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonArrayContract.#ctor(System.Type)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonArrayContract.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonArrayContract.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonArrayContract.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonArrayContract.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonArrayContract.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubJsonDictionaryContract">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.JsonDictionaryContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonDictionaryContract.#ctor(System.Type)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonDictionaryContract.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonDictionaryContract.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonDictionaryContract.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonDictionaryContract.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonDictionaryContract.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubJsonDynamicContract">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.JsonDynamicContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonDynamicContract.#ctor(System.Type)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonDynamicContract.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonDynamicContract.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonDynamicContract.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonDynamicContract.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonDynamicContract.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubJsonISerializableContract">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.JsonISerializableContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonISerializableContract.#ctor(System.Type)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonISerializableContract.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonISerializableContract.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonISerializableContract.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonISerializableContract.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonISerializableContract.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubJsonLinqContract">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.JsonLinqContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonLinqContract.#ctor(System.Type)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonLinqContract.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonLinqContract.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonLinqContract.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonLinqContract.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonLinqContract.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubJsonObjectContract">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.JsonObjectContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonObjectContract.#ctor(System.Type)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonObjectContract.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonObjectContract.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonObjectContract.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonObjectContract.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonObjectContract.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubJsonPrimitiveContract">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.JsonPrimitiveContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonPrimitiveContract.#ctor(System.Type)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonPrimitiveContract.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonPrimitiveContract.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonPrimitiveContract.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonPrimitiveContract.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonPrimitiveContract.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubJsonProperty">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.JsonProperty</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonProperty.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonProperty.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonProperty.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonProperty.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonProperty.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonProperty.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonProperty.ToString">
            <summary>Legt die Stub von JsonProperty.ToString(JsonProperty this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubJsonProperty.ToString01">
            <summary>Legt die stub von JsonProperty.ToString(JsonProperty this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.JsonPropertyCollection</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.#ctor(System.Type)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.ClearItems">
            <summary>Legt die Stub von KeyedCollection`2.ClearItems(KeyedCollection`2 this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.ClearItems01">
            <summary>Legt die stub von KeyedCollection`2.ClearItems(KeyedCollection`2 this) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)">
            <summary>Legt die Stub von JsonPropertyCollection.GetKeyForItem(JsonPropertyCollection this, JsonProperty item) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.GetKeyForItemJsonProperty">
            <summary>Legt die stub von JsonPropertyCollection.GetKeyForItem(JsonPropertyCollection this, JsonProperty item) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonPropertyCollection.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.InsertItem(System.Int32,Newtonsoft.Json.Serialization.JsonProperty)">
            <summary>Legt die Stub von KeyedCollection`2.InsertItem(KeyedCollection`2 this, Int32 index, JsonProperty item) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.InsertItemInt32JsonProperty">
            <summary>Legt die stub von KeyedCollection`2.InsertItem(KeyedCollection`2 this, Int32 index, JsonProperty item) fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.RemoveItem(System.Int32)">
            <summary>Legt die Stub von KeyedCollection`2.RemoveItem(KeyedCollection`2 this, Int32 index) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.RemoveItemInt32">
            <summary>Legt die stub von KeyedCollection`2.RemoveItem(KeyedCollection`2 this, Int32 index) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.SetItem(System.Int32,Newtonsoft.Json.Serialization.JsonProperty)">
            <summary>Legt die Stub von KeyedCollection`2.SetItem(KeyedCollection`2 this, Int32 index, JsonProperty item) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubJsonPropertyCollection.SetItemInt32JsonProperty">
            <summary>Legt die stub von KeyedCollection`2.SetItem(KeyedCollection`2 this, Int32 index, JsonProperty item) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubJsonStringContract">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.JsonStringContract</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonStringContract.#ctor(System.Type)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonStringContract.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubJsonStringContract.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubJsonStringContract.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonStringContract.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubJsonStringContract.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubMemoryTraceWriter">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.MemoryTraceWriter</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubMemoryTraceWriter.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubMemoryTraceWriter.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubMemoryTraceWriter.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubMemoryTraceWriter.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubMemoryTraceWriter.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubMemoryTraceWriter.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubMemoryTraceWriter.ToString">
            <summary>Legt die Stub von MemoryTraceWriter.ToString(MemoryTraceWriter this) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubMemoryTraceWriter.ToString01">
            <summary>Legt die stub von MemoryTraceWriter.ToString(MemoryTraceWriter this) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.NamingStrategy</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.GetDictionaryKey(System.String)">
            <summary>Legt die Stub von NamingStrategy.GetDictionaryKey(NamingStrategy this, String key) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.GetDictionaryKeyString">
            <summary>Legt die stub von NamingStrategy.GetDictionaryKey(NamingStrategy this, String key) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.GetExtensionDataName(System.String)">
            <summary>Legt die Stub von NamingStrategy.GetExtensionDataName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.GetExtensionDataNameString">
            <summary>Legt die stub von NamingStrategy.GetExtensionDataName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.GetPropertyName(System.String,System.Boolean)">
            <summary>Legt die Stub von NamingStrategy.GetPropertyName(NamingStrategy this, String name, Boolean hasSpecifiedName) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.GetPropertyNameStringBoolean">
            <summary>Legt die stub von NamingStrategy.GetPropertyName(NamingStrategy this, String name, Boolean hasSpecifiedName) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubNamingStrategy.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.ResolvePropertyName(System.String)">
            <summary>Legt die Stub von NamingStrategy.ResolvePropertyName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubNamingStrategy.ResolvePropertyNameString">
            <summary>Legt die stub von NamingStrategy.ResolvePropertyName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubReflectionAttributeProvider">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.ReflectionAttributeProvider</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubReflectionAttributeProvider.#ctor(System.Object)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubReflectionAttributeProvider.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubReflectionAttributeProvider.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubReflectionAttributeProvider.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubReflectionAttributeProvider.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubReflectionAttributeProvider.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubReflectionValueProvider">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.ReflectionValueProvider</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubReflectionValueProvider.#ctor(System.Reflection.MemberInfo)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubReflectionValueProvider.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubReflectionValueProvider.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubReflectionValueProvider.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubReflectionValueProvider.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubReflectionValueProvider.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="T:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy">
            <summary>Stub-Typ von Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.#ctor">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.#ctor(System.Boolean,System.Boolean)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Initialisiert eine neue Instanz.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.CallBase">
            <summary>Ruft einen Wert ab, der angibt, ob die Basismethode anstelle des Fallback-Verhaltens abgerufen werden soll, oder legt diesen fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.GetDictionaryKey(System.String)">
            <summary>Legt die Stub von NamingStrategy.GetDictionaryKey(NamingStrategy this, String key) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.GetDictionaryKeyString">
            <summary>Legt die stub von NamingStrategy.GetDictionaryKey(NamingStrategy this, String key) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.GetExtensionDataName(System.String)">
            <summary>Legt die Stub von NamingStrategy.GetExtensionDataName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.GetExtensionDataNameString">
            <summary>Legt die stub von NamingStrategy.GetExtensionDataName(NamingStrategy this, String name) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.GetPropertyName(System.String,System.Boolean)">
            <summary>Legt die Stub von NamingStrategy.GetPropertyName(NamingStrategy this, String name, Boolean hasSpecifiedName) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.GetPropertyNameStringBoolean">
            <summary>Legt die stub von NamingStrategy.GetPropertyName(NamingStrategy this, String name, Boolean hasSpecifiedName) fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.InitializeStub">
            <summary>Initialisiert eine neue Instanz von type StubSnakeCaseNamingStrategy.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.InstanceBehavior">
            <summary>Ruft das Instanzverhalten ab, oder legt dieses fest.</summary>
        </member>
        <member name="P:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.InstanceObserver">
            <summary>Ruft den Instanzbeobachter ab, oder legt ihn fest.</summary>
        </member>
        <member name="M:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.ResolvePropertyName(System.String)">
            <summary>Legt die Stub von SnakeCaseNamingStrategy.ResolvePropertyName(SnakeCaseNamingStrategy this, String name) fest.</summary>
        </member>
        <member name="F:Newtonsoft.Json.Serialization.Fakes.StubSnakeCaseNamingStrategy.ResolvePropertyNameString">
            <summary>Legt die stub von SnakeCaseNamingStrategy.ResolvePropertyName(SnakeCaseNamingStrategy this, String name) fest.</summary>
        </member>
    </members>
</doc>
