/* 
 * EzOrder Backend
 *
 * API Description for EzOrder Rest-Backend
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CategoryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CategoryApiTests
    {
        private CategoryApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CategoryApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CategoryApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CategoryApi
            //Assert.IsInstanceOfType(typeof(CategoryApi), instance, "instance is a CategoryApi");
        }

        
        /// <summary>
        /// Test AddCategory
        /// </summary>
        [Test]
        public void AddCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Category body = null;
            //instance.AddCategory(body);
            
        }
        
        /// <summary>
        /// Test DeleteCategory
        /// </summary>
        [Test]
        public void DeleteCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? catID = null;
            //instance.DeleteCategory(catID);
            
        }
        
        /// <summary>
        /// Test GetCategories
        /// </summary>
        [Test]
        public void GetCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCategories();
            //Assert.IsInstanceOf<List<Category>> (response, "response is List<Category>");
        }
        
        /// <summary>
        /// Test GetCategoryById
        /// </summary>
        [Test]
        public void GetCategoryByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? catID = null;
            //var response = instance.GetCategoryById(catID);
            //Assert.IsInstanceOf<Category> (response, "response is Category");
        }
        
        /// <summary>
        /// Test UpdateCategory
        /// </summary>
        [Test]
        public void UpdateCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Category body = null;
            //instance.UpdateCategory(body);
            
        }
        
        /// <summary>
        /// Test UpdateCategoryWithForm
        /// </summary>
        [Test]
        public void UpdateCategoryWithFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? catID = null;
            //string name = null;
            //string status = null;
            //instance.UpdateCategoryWithForm(catID, name, status);
            
        }
        
    }

}
